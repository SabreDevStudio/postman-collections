{
	"info": {
		"_postman_id": "c6af337e-e1f1-44c0-9460-22edaf4965f9",
		"name": "Booking Management API v2025.05",
		"description": "Hello!\n\nThis postman collection is meant to simplify integration process for customers who wish to implement Sabre Booking Management API - [https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management)\n\nPlease read our extensive documentation in the above link, which will provide details on all of the methods exposed by this API\n\nThanks and regards!\n\nBooking Management API - Dev and Product Team",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10138124"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "SessionCreateRQ (Stateful ATH) create session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate a unique ID for profile services\r",
									"var uuid = require('uuid');\r",
									"var myUUID = uuid();\r",
									"console.log(myUUID);\r",
									"\r",
									"//cleanup\r",
									"pm.environment.unset('filterName')\r",
									"pm.environment.unset('profileName')\r",
									"\r",
									"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
									"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
									"\r",
									"console.log(pm.environment.get('filterName'))\r",
									"console.log(pm.environment.get('profileName'))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
						},
						"url": {
							"raw": "{{soap_endpoint}}",
							"host": [
								"{{soap_endpoint}}"
							]
						},
						"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
					},
					"response": []
				},
				{
					"name": "REST Authorize",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic {{secret}}",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=client_credentials"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v2/auth/token",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v2",
								"auth",
								"token"
							]
						},
						"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Booking",
			"item": [
				{
					"name": "GetBooking /v1 General",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\"\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 Return Only Flights",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n  \"returnOnly\":\r\n  [\"FLIGHTS\"]\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 Return Only Flights And Hotels",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n  \"returnOnly\":\r\n  [\"FLIGHTS\", \"HOTELS\"]\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Cancel Booking",
			"item": [
				{
					"name": "Cancel Booking /v1 Cancel All",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel All + Change PCC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"targetPcc\": \"{{pcc}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Flights",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"confirmationId\": \"{{pnr}}\",\n  \"bookingSource\": \"SABRE\",\n  \"retrieveBooking\": false,\n  \"cancelAll\": false,\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n  \"flights\": [\n    {\n      \"itemId\": 9\n    }\n  ]\n \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Hotels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": false,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"hotels\": [\n        {\n            \"itemId\": 42\n        },\n                {\n            \"itemId\": 43\n        },\n                {\n            \"itemId\": 44\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Flights, Hotels, Cars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\",\r\n    \"cars\": [\r\n        {\r\n            \"itemId\": 77\r\n        }\r\n    ],\r\n    \"flights\": [\r\n        {\r\n            \"itemId\": 2\r\n        },\r\n        {\r\n            \"itemId\": 3\r\n        },\r\n        {\r\n            \"itemId\": 4\r\n        },\r\n        {\r\n            \"itemId\": 88\r\n        }\r\n    ],\r\n    \"hotels\": [\r\n        {\r\n            \"itemId\": 25\r\n        },\r\n        {\r\n            \"itemId\": 220\r\n        }\r\n    ]\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Segment Sequence",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\",\r\n    \"segments\": [\r\n        {\r\n            \"sequence\": 1\r\n        },\r\n        {\r\n            \"sequence\": 3\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Segment Id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\",\r\n    \"segments\": [\r\n        {\r\n            \"id\": 38\r\n        },\r\n        {\r\n            \"id\": 26\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel All and Void corresponding tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel Flights and Void corresponding tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": false,\n    \"cancelAll\": false,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"flights\": [\n        {\n            \"itemId\": 25\n        },\n        {\n            \"itemId\": 26\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel NDC order by means of a void or refund offer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"retrieveBooking\": true,\n    \"offerItemId\": \"cb7778589bcbklg7tkkp8sdo50\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel booking and add retention segment (OTH)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // this assertion also checks if a body  exists\r",
									"     pm.response.to.be.json; \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"retentionEndDate\": \"{{retentionDate2}}\",\n    \"retentionLabel\": \"Retention OTH text\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "### <br>"
					},
					"response": []
				}
			]
		},
		{
			"name": "Flight Tickets (Check/Void/Refund)",
			"item": [
				{
					"name": "Check Flight Tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\"\n      },\n      {\n        \"number\": \"{{tkt2}}\"\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"checkFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Check Flight Tickets with refundQualifiers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\",\n        \"refundQualifiers\": {\n            \"commissionPercent\": \"5.00\"\n        }\n      },\n      {\n        \"number\": \"{{tkt2}}\",\n        \"refundQualifiers\": {\n            \"overrideCancelFee\": \"100.00\"\n        }\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"checkFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Check Flight Tickets for a confirmationId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"{{pnr}}\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"checkFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Void Flight Tickets - with ALLOW_PARTIAL_CANCEL policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n    \"{{tkt}}\",\n    \"{{tkt2}}\",\n    \"{{tkt3}}\"\n  ],\n  \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"voidFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Void Flight Tickets - with HALT_ON_ERROR policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n  \"tickets\": [\n    \"{{tkt}}\",\n    \"{{tkt2}}\",\n    \"{{tkt3}}\"\n  ],\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"voidFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Void Flight Tickets - Change PCC",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"targetPcc\": \"{{pcc}}\",\n  \"tickets\": [\n    \"{{tkt}}\",\n    \"{{tkt2}}\",\n    \"{{tkt3}}\"\n  ],\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"voidFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Refund Flight Tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\"\n      },\n      {\n        \"number\": \"{{tkt2}}\"\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/refundFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"refundFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Refund Flight Tickets with refundQualifiers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\",\n        \"refundQualifiers\": {\n            \"commissionPercent\": \"5.00\"\n        }\n      },\n      {\n        \"number\": \"{{tkt2}}\",\n        \"refundQualifiers\": {\n            \"overrideCancelFee\": \"100.00\"\n        }\n      }\n  ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/refundFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"refundFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Create Booking",
			"item": [
				{
					"name": "Flights - NDC/ATPCO/LCC",
					"item": [
						{
							"name": "Flights Preparation",
							"item": [
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC MultiplePax",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"OTA_AirLowFareSearchRQ\": {\n\t\t\"Version\": \"1\",\n\t\t\"POS\": {\n\t\t\t\"Source\": [{\n\t\t\t\t\t\"PseudoCityCode\": \"{{pcc_tkt}}\",\n\t\t\t\t\t\"RequestorID\": {\n\t\t\t\t\t\t\"Type\": \"1\",\n\t\t\t\t\t\t\"ID\": \"1\",\n\t\t\t\t\t\t\"CompanyName\": {\n\t\t\t\t\t\t\t\"Code\": \"TN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"OriginDestinationInformation\": [{\n\t\t\t\t\"RPH\": \"1\",\n\t\t\t\t\"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"SYD\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"MEL\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"TravelPreferences\": {\n\t\t\t\"TPA_Extensions\": {\n\t\t\t\t\"NumTrips\": {\n\t\t\t\t\t\"Number\": 1\n\t\t\t\t},\n\t\t\t\t\"DataSources\": {\n\t\t\t\t\t\"NDC\": \"Enable\",\n\t\t\t\t\t\"ATPCO\": \"Disable\",\n\t\t\t\t\t\"LCC\": \"Disable\"\n\t\t\t\t},\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n\t\t\t}\n\t\t},\n\t\t\"TravelerInfoSummary\": {\n\t\t\t\"AirTravelerAvail\": [{\n\t\t\t\t\t\"PassengerTypeQuantity\": [{\n\t\t\t\t\t\t\t\"Code\": \"ADT\",\n\t\t\t\t\t\t\t\"Quantity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TPA_Extensions\": {\n\t\t\t\"IntelliSellTransaction\": {\n\t\t\t\t\"RequestType\": {\n\t\t\t\t\t\"Name\": \"200ITINS\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC QF",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                }\n            }, {\n                \"RPH\": \"2\",\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"QF\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) LCC FR",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"7KFA\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"STN\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"FR\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC AA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"NYC\"\n                }\n            }, {\n                \"RPH\": \"2\",\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"NYC\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"AA\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC UA",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"G7HE\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"NYC\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"ORD\"\n                }\n            }, {\n                \"RPH\": \"2\",\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ORD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"NYC\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"UA\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - NDC SQ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"SQ\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - ATPCO",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"AUH\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"EY\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3 (Stateless ATK) - ATPCO 2 Passengers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"U9PK\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"AUH\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n\t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"EY\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                },\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										}
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createBooking - Air NDC  with ProfileName",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n\t\"profiles\": [\n\t\t{\n\t\t\t\"profileName\": \"{{profileName}}\",\n\t\t\t\"profileTypeCode\": \"TVL\",\n\t\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC  with ProfileId",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\t\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\"\n\t\t}\n\t]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC Payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\t\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n\t\t\t\"customerNumber\": \"1234567\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\"\n      ],\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with ProfileId",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n\t\t},\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with Profile filter",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n\t\t},\n\t\"profiles\": [ \n\t\t{\n\t\t\"uniqueId\": \"{{profileId}}\",\n\t\t\"profileTypeCode\": \"TVL\",\n\t\t\"domainId\": \"{{pcc}}\"\n\t\t}\n\t],\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with pricing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with pricing Complex",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"targetPcc\": \"7KFA\",\n    \"receivedFrom\": \"Wakanow\",\n    \"asynchronousUpdateWaitTime\": 1000,\n    \"agency\": {\n        \"address\": {\n            \"street\": null,\n            \"city\": \"Sabre\",\n            \"stateProvince\": \"Lagos\",\n            \"postalCode\": \"Sabre\",\n            \"countryCode\": \"NG\",\n            \"name\": \"Wakanow\"\n        }\n    },\n    \"contactInfo\": {\n        \"emails\": [\n            \"hello@wakanow.com\"\n        ],\n        \"phones\": [\n            \"07059647234\"\n        ]\n    },\n    \"flightDetails\": {\n        \"haltOnFlightStatusCodes\": [\n            \"NO\",\n            \"UC\",\n            \"US\",\n            \"UN\",\n            \"UU\",\n            \"LL\",\n            \"HL\"\n        ],\n        \"flights\": [\n            {\n                \"flightNumber\": 588,\n                \"airlineCode\": \"KL\",\n                \"departureDate\": \"2023-12-21\",\n                \"departureTime\": \"22:35\",\n                \"fromAirportCode\": \"LOS\",\n                \"toAirportCode\": \"AMS\",\n                \"bookingClass\": \"T\",\n                \"flightStatusCode\": \"NN\",\n                \"marriageGroup\": false\n            },\n            {\n                \"flightNumber\": 1021,\n                \"airlineCode\": \"KL\",\n                \"departureDate\": \"2023-12-22\",\n                \"departureTime\": \"15:45\",\n                \"fromAirportCode\": \"AMS\",\n                \"toAirportCode\": \"LHR\",\n                \"bookingClass\": \"T\",\n                \"flightStatusCode\": \"NN\",\n                \"marriageGroup\": true\n            },\n            {\n                \"flightNumber\": 1002,\n                \"airlineCode\": \"KL\",\n                \"departureDate\": \"2023-12-30\",\n                \"departureTime\": \"08:40\",\n                \"fromAirportCode\": \"LHR\",\n                \"toAirportCode\": \"AMS\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"marriageGroup\": false\n            },\n            {\n                \"flightNumber\": 8233,\n                \"airlineCode\": \"KL\",\n                \"departureDate\": \"2023-12-30\",\n                \"departureTime\": \"12:25\",\n                \"fromAirportCode\": \"AMS\",\n                \"toAirportCode\": \"CDG\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"marriageGroup\": false\n            },\n            {\n                \"flightNumber\": 148,\n                \"airlineCode\": \"KL\",\n                \"departureDate\": \"2023-12-30\",\n                \"departureTime\": \"14:40\",\n                \"fromAirportCode\": \"CDG\",\n                \"toAirportCode\": \"LOS\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"marriageGroup\": true\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"commissionPercentage\": \"0\",\n                \"passengersPricing\": [\n                    {\n                        \"passengerCode\": \"ADT\",\n                        \"forcePassengerCode\": false,\n                        \"numberOfpassengers\": 1\n                    }\n                ],\n                \"validatingAirlineCode\": \"KL\"\n            }\n        ]\n    },\n    \"travelers\": [\n        {\n            \"birthDate\": \"1992-05-25\",\n            \"givenName\": \"UVIE\",\n            \"passengerCode\": \"ADT\",\n            \"surname\": \"OGHENEJAKPOR\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"PASSPORT\",\n                    \"documentNumber\": \"A027462554576\",\n                    \"expiryDate\": \"2027-01-01\",\n                    \"issuingCountryCode\": \"NG\",\n                    \"residenceCountryCode\": \"NG\",\n                    \"givenName\": \"UVIE\",\n                    \"surname\": \"OGHENEJAKPOR\",\n                    \"birthDate\": \"1992-05-25\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"emails\": [\n                \"UVIEKELVIN@GMAIL.COM\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+2347059647234\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    },\n    \"remarks\": [\n        {\n            \"type\": \"GENERAL\",\n            \"alphaCode\": \"T\",\n            \"text\": \"2311300400076\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with seats",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{Flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"travelerIndex\": \"1\",\n                        \"number\": \"20C\"\n                    },\n                    {\n                        \"travelerIndex\": \"3\",\n                        \"number\": \"20D\"\n                    }\n                ]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                                \"seats\": [\n                    {\n                        \"travelerIndex\": \"1\",\n                        \"number\": \"19C\"\n                    },\n                    {\n                        \"travelerIndex\": \"3\",\n                        \"number\": \"19D\"\n                    }\n                ]\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with pricing and FOP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n            \"qualifiers\": {\n                \"payment\": {\n                    \"primaryFormOfPayment\": 1\n                }\n            }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\"\n            }\n        ]\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air no pricing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with custom haltOnStatus",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n        \"haltOnFlightStatusCodes\": [\"NN\"],\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with multi pricing (per flight)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"CNN\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        \"qualifiers\": {\n            \"validatingAirlineCode\": \"EY\",\n            \"flightIndices\": [1]\n        }\n        },\n                {\n        \"qualifiers\": {\n            \"validatingAirlineCode\": \"EY\",\n            \"flightIndices\": [2]\n        }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with price comparison",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"CNN\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n            \"priceComparisons\": [\n                {\n                    \"desiredAmount\": \"5300.00\",\n                    \"comparisonType\": \"INCREASE_BY_AMOUNT\",\n                    \"amount\": \"30.00\"\n                },\n                                {\n                    \"desiredAmount\": \"5300.00\",\n                    \"comparisonType\": \"DECREASE_BY_AMOUNT\",\n                    \"amount\": \"30.00\"\n                }\n            ]\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with identity documents",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2025-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Rambo\",\n                \"birthDate\": \"1970-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        \"qualifiers\": {\n            \"validatingAirlineCode\": \"EY\"\n        }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with remarks and other services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Rambo\",\n                    \"birthDate\": \"1970-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"EY\",\n                \"fromAirportCode\": \"MEL\",\n                \"toAirportCode\": \"AUH\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"16:15\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"EY\",\n                \"fromAirportCode\": \"AUH\",\n                \"toAirportCode\": \"MEL\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"21:45\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"validatingAirlineCode\": \"EY\"\n                }\n            }\n        ]\n    },\n    \"remarks\": [\n        {\n            \"type\": \"GENERAL\",\n            \"text\": \"TEST REMARK\"\n        }\n    ],\n    \"otherServices\": [\n        {\n            \"airlineCode\": \"EY\",\n            \"travelerIndex\": 1,\n            \"serviceMessage\": \"TEST OTHER SERVICE\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with loyaltyPrograms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programNumber\": \"992001557133700\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"LO\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Infant\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"2023-01-23\",\n            \"passengerCode\": \"INF\"\n        },\n        {\n            \"givenName\": \"Janice\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"ZZZZZZ\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": 463,\n                \"airlineCode\": \"EY\",\n                \"fromAirportCode\": \"MEL\",\n                \"toAirportCode\": \"AUH\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"16:55\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": 462,\n                \"airlineCode\": \"EY\",\n                \"fromAirportCode\": \"AUH\",\n                \"toAirportCode\": \"MEL\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"09:00\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with loyaltyPrograms + pricing qualifiers + Credit card",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Infant\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"2020-01-23\",\n            \"passengerCode\": \"INF\"\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\"\n         }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+48666555444\"\n        ]\n    },\n    \"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"22:25\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"21:45\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"commissionPercentage\": \"10.00\",\n                    \"payment\": {\n                        \"primaryFormOfPayment\": 1\n                    }\n                }\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air with Changed PCC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"targetPcc\": \"{{pcc}}\",\n     \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        \"qualifiers\": {\n            \"validatingAirline\": \"EY\"\n        }\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Passive Air segment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"MEL\",\n\t\t\t\t\"toAirportCode\": \"AUH\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"16:55\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"YK\",\n                \"confirmationId\": \"ABC123\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flightNumber2}},\n\t\t\t\t\"airlineCode\": \"EY\",\n\t\t\t\t\"fromAirportCode\": \"AUH\",\n\t\t\t\t\"toAirportCode\": \"MEL\",\n\t\t\t\t\"departureDate\": \"{{end_date}}\",\n\t\t\t\t\"departureTime\": \"09:00\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"YK\",\n                \"confirmationId\": \"ABC123\"\n\t\t\t}\n\t\t]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air LCC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n                {\n\t\t\t\"givenName\": \"Infant\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2023-01-23\",\n\t\t\t\"passengerCode\": \"INF\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Rambo\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": {{flight_number}},\n\t\t\t\t\"airlineCode\": \"FR\",\n\t\t\t\t\"fromAirportCode\": \"KRK\",\n\t\t\t\t\"toAirportCode\": \"STN\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"21:45\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Ancillaries baggage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Rambo\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\",\n      \"ancillaries\": [\n        {\n          \"reasonForIssuance\": \"BAGGAGE\",\n          \"subcode\": \"0C2\",\n          \"airlineCode\": \"EY\",\n          \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n          \"basePrice\": \"528.00\",\n          \"currencyCode\": \"USD\",\n          \"groupCode\": \"BG\",\n          \"flightIndices\": [\n            1\n          ]\n        },\n        {\n          \"reasonForIssuance\": \"BAGGAGE\",\n          \"subcode\": \"0C4\",\n          \"airlineCode\": \"EY\",\n          \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n          \"basePrice\": \"656.00\",\n          \"currencyCode\": \"USD\",\n          \"groupCode\": \"BG\",\n          \"flightIndices\": [\n            1\n          ]\n        }\n      ]\n    },\n    {\n      \"givenName\": \"Janice\",\n      \"surname\": \"Rambo\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"flightDetails\": {\n    \"flights\": [\n      {\n        \"flightNumber\": {{flight_number}},\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"AMS\",\n        \"toAirportCode\": \"AUH\",\n        \"departureDate\": \"{{start_date}}\",\n        \"departureTime\": \"20:25\",\n        \"bookingClass\": \"V\",\n        \"flightStatusCode\": \"NN\"\n      },\n      {\n        \"flightNumber\": {{flightNumber2}},\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"AUH\",\n        \"toAirportCode\": \"AMS\",\n        \"departureDate\": \"{{end_date}}\",\n        \"departureTime\": \"09:00\",\n        \"bookingClass\": \"V\",\n        \"flightStatusCode\": \"NN\"\n      }\n    ],\n    \"flightPricing\": [\n      {}\n    ]\n  },\n  \"payment\": {\n    \"billingAddress\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Ancillaries baggage with SSR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Rambo\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\",\n      \"ancillaries\": [\n                {\n                    \"reasonForIssuanceCode\": \"C\",\n                    \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n                    \"reasonForIssuanceName\": \"BAGGAGE\",\n                    \"subcode\": \"0CC\",\n                    \"airlineCode\": \"LH\",\n                    \"groupCode\": \"BG\",\n                    \"basePrice\": \"35.00\",\n                    \"currencyCode\": \"USD\",\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n      ],\n      \"specialServices\": [\n          {\n              \"code\": \"FBAG\"\n          }\n      ]\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Rambo\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"flightDetails\": {\n    \"flights\": [\n    {\n        \"flightNumber\": {{flight_number}},\n        \"airlineCode\": \"LH\",\n        \"fromAirportCode\": \"ARN\",\n        \"toAirportCode\": \"FRA\",\n        \"departureDate\": \"{{start_date}}\",\n        \"departureTime\": \"06:15\",\n        \"bookingClass\": \"Y\",\n        \"flightStatusCode\": \"NN\"\n    }\n    ],\n    \"flightPricing\": [\n      {}\n    ]\n  },\n  \"payment\": {\n    \"billingAddress\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - include retention segment (OTH)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"retentionEndDate\": \"{{retentionDate2}}\",\n    \"retentionLabel\": \"Retention OTH text\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Branded fares",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": 836,\n                \"airlineCode\": \"AA\",\n                \"fromAirportCode\": \"DFW\",\n                \"toAirportCode\": \"LAX\",\n                \"departureDate\": \"2023-04-23\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": 524,\n                \"airlineCode\": \"AA\",\n                \"fromAirportCode\": \"DFW\",\n                \"toAirportCode\": \"LAX\",\n                \"departureDate\": \"2023-05-03\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": 529,\n                \"airlineCode\": \"AA\",\n                \"fromAirportCode\": \"DFW\",\n                \"toAirportCode\": \"LAX\",\n                \"departureDate\": \"2023-05-13\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": 529,\n                \"airlineCode\": \"AA\",\n                \"fromAirportCode\": \"DFW\",\n                \"toAirportCode\": \"LAX\",\n                \"departureDate\": \"2023-05-23\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"brandedFares\": [\n                        {\n                            \"brandCode\": \"MAIN\",\n                            \"flightIndices\": [\n                                1\n                            ]\n                        },\n                        {\n                            \"brandCode\": \"MAINFL\",\n                            \"flightIndices\": [\n                                2\n                            ]\n                        }\n                    ],\n                    \"specificFares\": [\n                        {\n                            \"fareBasisCode\": \"NUAHZNM3\",\n                            \"flightIndices\": [\n                                1\n                            ]\n                        },\n                        {\n                            \"fareBasisCode\": \"QVAHURG3\",\n                            \"flightIndices\": [\n                                2\n                            ]\n                        }\n                    ],\n                    \"passengersPricing\": [\n                        {\n                            \"passengerCode\": \"ADT\",\n                            \"numberOfpassengers\": 1\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{createBooking_endpoint}}",
									"host": [
										"{{createBooking_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC - Corporate Loyalty Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"placeOfIssue\": \"FR\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"BX654123C\",\n                    \"programType\": \"CORPORATE_LOYALTY_ID\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC - nameReferenceCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
											"    pm.response.to.have.header(\"x-request-id\");\r",
											"    pm.response.to.have.header(\"ConversationId\");\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n\t\t\t\"nameReferenceCode\": \"{{$randomPhoneNumber}}\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"nameReferenceCode\": \"{{$randomPhoneNumber}}\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"nameReferenceCode\": \"{{$randomPhoneNumber}}\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\"\n      ],\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC - fiscal Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n\n                {\n                    \"documentNumber\": \"24200928\",\n                    \"documentType\": \"FISCAL_ID\",\n                    \"documentSubType\": \"RUC\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Air NDC - OSI remarks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"otherServices\": [\n        {\n            \"travelerIndex\": 1,\n            \"serviceMessage\": \"BM API TEST\"\n        },\n        {\n            \"travelerIndex\": 1,\n            \"serviceMessage\": \"BM API SAMPLE\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "CSL Hotel",
					"item": [
						{
							"name": "Hotel Preparation",
							"item": [
								{
									"name": "GetHotelAvailRQ CSL",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"3\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <RatePlanCandidates >\r\n                <RatePlanCandidate RatePlanCode=\"AMX\"/>\r\n            </RatePlanCandidates>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ Aggregator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n          <HotelRef HotelCode=\"100035516\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>113</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ with 2 ADT 1 CNN",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" Children=\"1\">\r\n                <ChildAges>3</ChildAges>\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('bookingKey', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('bookingKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rateKey}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createBooking - CSL hotel with payment types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Rambo\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Rambo\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Ann\",\n      \"surname\": \"Rambo\",\n      \"passengerCode\": \"ADT\",\n      \"age\": 3\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"hotel\": {\n    \"useCsl\": true,\n    \"bookingKey\": \"{{bookingKey}}\",\n    \"corporateDiscountCode\": 6878700,\n    \"rooms\": [\n      {\n        \"isSmoking\": true,\n        \"bedTypeCode\": 3,\n        \"physicalDisabilityCode\": 3,\n        \"travelerIndices\": [\n          1,2,3\n        ]\n      }\n    ],\n    \"specialInstruction\": \"Need a wi-fi in the room.\",\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 1\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - CSL hotel with profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profiles\": [\n    {\n      \"uniqueId\": \"{{profileId}}\",\n      \"profileTypeCode\": \"TVL\",\n      \"domainId\": \"{{pcc}}\"\n    }\n  ],\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    }\n  },\n  \"hotel\": {\n    \"bookingKey\": \"{{bookingKey}}\",\n    \"rooms\": [\n      {\n        \"travelerIndices\": [\n          1\n        ]\n      }\n    ],\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 1\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"{{creditCardNumber}}\",\n        \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n        \"expiryDate\": \"{{creditCardExpiryDate}}\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"john@smith.family.priv\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - CSL hotel with profile + Strong Customer Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"useCsl\": true,\n        \"bookingKey\": \"{{bookingKey}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"authentications\": [\n                    {\n                        \"secureTransactionId\": \"ABCDEFGHI123456789012!.1234567890123\",\n                        \"issuesCode\": \"AO\",\n                        \"channelCode\": \"SC\",\n                        \"resultCode\": \"OK\",\n                        \"electronicCommerceIndicator\": \"AB\",\n                        \"cardNumberCollectionCode\": \"K\",\n                        \"exemptionTypeCode\": \"EC\",\n                        \"mandateTypeCode\": \"NS\",\n                        \"originalPaymentReference\": \"{{creditCardNumber}}\",\n                        \"merchantName\": \"TEST CREDIT CARD\",\n                        \"secureAuthenticationValue\": \"ABC123455533533444455555678\",\n                        \"updatedDateTime\": \"2019-08-19T09:35:10\",\n                        \"amount\": \"1234.56\",\n                        \"currencyCode\": \"USD\",\n                        \"version\": \"120\",\n                        \"verificationResultCode\": \"PASS\",\n                        \"tokenAuthenticationValue\": \"ABC3434334343556677487312567\"\n                    }\n                ],\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"VIRTUAL_CARD\",\n                \"virtualCard\": {\n                    \"customerAccountCode\": \"John\",\n                    \"agencyEmail\": \"john@smith.family.priv\",\n                    \"hotelFax\": \"john@smith.family.priv\",\n                    \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n                    \"roomType\": \"2 double beds\",\n                    \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n                    \"rateAmount\": {\n                        \"amount\": \"100.00\",\n                        \"currencyCode\": \"USD\"\n                    },\n                    \"virtualCardCharges\": [\n                        \"Breakfast\"\n                    ]\n                }\n            },\n            {\n                \"type\": \"AGENCY_NAME\",\n                \"agencyAddress\": {\n                    \"name\": \"John Smith\",\n                    \"street\": \"1230 Ellen Ave, apt 10\",\n                    \"city\": \"Dallas\",\n                    \"stateProvince\": \"TX\",\n                    \"postalCode\": \"75063\",\n                    \"countryCode\": \"US\"\n                }\n            },\n            {\n                \"type\": \"AGENCY_IATA\",\n                \"agencyIataNumber\": \"129345738\"\n            },\n            {\n                \"type\": \"CORPORATE\",\n                \"corporateId\": \"CC006\"\n            },\n            {\n                \"type\": \"COMPANY_NAME\",\n                \"companyAddress\": {\n                    \"name\": \"John Smith\",\n                    \"street\": \"1230 Ellen Ave, apt 10\",\n                    \"city\": \"Dallas\",\n                    \"stateProvince\": \"TX\",\n                    \"postalCode\": \"75063\",\n                    \"countryCode\": \"US\"\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - Air with CSL hotel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"hotel\": {\n    \"useCSL\": true,\n    \"bookingKey\": \"{{bookingKey}}\",\n    \"corporateDiscountCode\": 6878700,\n    \"rooms\": [\n      {\n        \"isSmoking\": false,\n        \"bedTypeCode\": 3,\n        \"physicalDisabilityCode\": 3,\n        \"roomExtras\": [\n          {\n            \"roomExtraType\": 26,\n            \"quantity\": 1,\n            \"amount\": \"100.00\"\n          }\n        ],\n        \"travelerIndices\": [\n          1\n        ]\n      }\n    ],\n    \"specialInstruction\": \"Need a wi-fi in the room.\",\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 3\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"birthDate\": \"1970-01-23\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Janice\",\n      \"surname\": \"Kowalski\",\n      \"birthDate\": \"2000-01-23\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"flightDetails\": {\n    \"flights\": [\n      {\n        \"flightNumber\": {{flight_number}},\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"MEL\",\n        \"toAirportCode\": \"AUH\",\n        \"departureDate\": \"{{start_date}}\",\n        \"departureTime\": \"16:15\",\n        \"bookingClass\": \"Y\",\n        \"marriageGroup\": false,\n        \"flightStatusCode\": \"NN\"\n      },\n      {\n        \"flightNumber\": {{flightNumber2}},\n        \"airlineCode\": \"EY\",\n        \"fromAirportCode\": \"AUH\",\n        \"toAirportCode\": \"MEL\",\n        \"departureDate\": \"{{start_date}}\",\n        \"departureTime\": \"21:45\",\n        \"bookingClass\": \"Y\",\n        \"marriageGroup\": false,\n        \"flightStatusCode\": \"NN\"\n      }\n    ],\n    \"flightPricing\": [\n      {\n        \"qualifiers\": {\n          \"payment\": {\n            \"primaryFormOfPayment\": 1,\n            \"secondaryFormOfPayment\": 3,\n            \"amountOnSecondFormOfPayment\": \"100.00\"\n          }\n        }\n      }\n    ]\n  },\n  \"payment\": {\n    \"billingAddress\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\"\n    },\n    \"formsOfPayment\": [\n      {\n        \"type\": \"CASH\"\n      },\n      {\n        \"type\": \"CHECK\"\n      },\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"{{creditCardNumber}}\",\n        \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n        \"expiryDate\": \"{{creditCardExpiryDate}}\",\n        \"manualApproval\": {\n          \"code\": \"X05285\",\n          \"airlineCode\": \"AA\",\n          \"requestDateTime\": \"{{today}}T01:11:11\",\n          \"expiryDateTime\": \"{{creditCardExpiryDate}}T01:11:11\",\n          \"amount\": \"684.00\",\n          \"currencyCode\": \"USD\"\n        },\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"MISCELLANEOUS\",\n        \"miscellaneousCreditCode\": \"PL189947\",\n        \"extendedPayment\": 12,\n        \"boardingTaxAmount\": \"100.00\"\n      },\n      {\n        \"type\": \"INSTALLMENTS\",\n        \"numberOfInstallments\": 90,\n        \"airlinePlanCode\": \"RG065\",\n        \"installmentAmount\": \"100\",\n        \"netBalance\": \"300.20\"\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"john@smith.family.priv\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "Vehicle",
					"item": [
						{
							"name": "Vehicle preparation",
							"item": [
								{
									"name": "GetVehAvailRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].VehRentalRate[0].$.RateKey;\r",
													"    // const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].ConvertedVehRentalRate[0].$.RateKey;\r",
													"    pm.environment.set('carRateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Car Rate Key : \"+pm.environment.get('carRateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetVehAvailRQ xmlns=\"http://services.sabre.com/car/avail/v2\" version=\"2.0.0\">\r\n    <SearchCriteria PickUpDate=\"{{start_date}}\" ReturnDate=\"{{end_date}}\" PickUpTime=\"10:30\" ReturnTime=\"16:30\" SortBy=\"Price\" SortOrder=\"ASC\">\r\n        <AirportRef>\r\n            <PickUpLocation LocationCode=\"DFW\"/>\r\n        </AirportRef>\r\n        <VendorPrefs>\r\n            <VendorPref Code=\"ZE\" />\r\n            <VendorPref Code=\"ZI\" />\r\n            <VendorPref Code=\"ET\" />\r\n        </VendorPrefs>\r\n        <RatePrefs ConvertedRateInfoOnly=\"false\" SupplierCurrencyOnly=\"true\"/>\r\n        <VehPrefs>\r\n            <VehPref>\r\n                <VehType>ECAR</VehType>\r\n            </VehPref>\r\n        </VehPrefs>\r\n        <LocPolicyRef Include=\"true\"/>\r\n        <ImageRef>\r\n            <Image Type=\"ORIGINAL\"/>\r\n        </ImageRef>\r\n    </SearchCriteria>\r\n</GetVehAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetVehAvailRQ 2.0.0 - Different pick up from return Copy 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<GetVehAvailRQ xmlns=\"http://services.sabre.com/car/avail/v2\" version=\"2.0.0\">\r\n    <SearchCriteria PickUpDate=\"{{start_date}}\" ReturnDate=\"{{short_end_date}}\" PickUpTime=\"10:30\" ReturnTime=\"16:30\" SortBy=\"Price\" SortOrder=\"ASC\">\r\n        <AirportRef>\r\n            <PickUpLocation LocationCode=\"MIA\"/>\r\n            <ReturnLocation LocationCode=\"MCO\"/>\r\n        </AirportRef>\r\n        <VendorPrefs>\r\n            <VendorPref Code=\"ZE\" />\r\n            <VendorPref Code=\"ZI\" />\r\n            <VendorPref Code=\"ET\" />\r\n        </VendorPrefs>\r\n        <RatePrefs ConvertedRateInfoOnly=\"false\" SupplierCurrencyOnly=\"true\"/>\r\n        <VehPrefs>\r\n            <VehPref>\r\n                <VehType>ECAR</VehType>\r\n            </VehPref>\r\n        </VehPrefs>\r\n        <LocPolicyRef Include=\"true\"/>\r\n        <ImageRef>\r\n            <Image Type=\"ORIGINAL\"/>\r\n        </ImageRef>\r\n    </SearchCriteria>\r\n</GetVehAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/soap_apis/car/search/get_vehicle_availability), [Resources](https://developer.sabre.com/docs/soap_apis/car/search/get_vehicle_availability/resources)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "VehPriceCheckRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].VehPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('carBookingKey', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Car Booking Key : \"+pm.environment.get('carBookingKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<VehPriceCheckRQ xmlns=\"http://services.sabre.com/car/pricecheck/v1_0_0\" version=\"1.0.0\">\r\n    <VehRateInfoRef RateKey=\"{{carRateKey}}\"/>\r\n</VehPriceCheckRQ>\r\n\r\n\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createBooking - simple vehicle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 11\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"car\": {\n    \"bookingKey\": \"{{carBookingKey}}\"\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"{{creditCardNumber}}\",\n        \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n        \"expiryDate\": \"{{creditCardExpiryDate}}\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Collection Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"collectionAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1,\n        \"quantity\": 1,\n        \"specialInstructions\": \"Wants a blue car.\"\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Delivery Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"deliveryAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1,\n        \"quantity\": 1,\n        \"specialInstructions\": \"Wants a blue car.\"\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Delivery Site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"deliverySite\": {\n            \"id\": \"ABC123\",\n            \"name\": \"TEST LOCATION\",\n            \"phone\": \"8175551212\"\n        },\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1,\n        \"quantity\": 1,\n        \"specialInstructions\": \"Wants a blue car.\",\n        \"flightIndex\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "createBooking - vehicle with Collection Site",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 11\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"car\": {\n        \"bookingKey\": \"{{carBookingKey}}\",\n        \"travelerIndex\": 1,\n        \"collectionAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"collectionSite\": {\n            \"id\": \"ABC123\",\n            \"name\": \"TEST LOCATION\",\n            \"phone\": \"8175551212\"\n        },\n        \"payment\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    }"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ModifyBooking",
			"item": [
				{
					"name": "Hotel modification flows",
					"item": [
						{
							"name": "modify common fields",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"corporateDiscountCode\": {{$randomInt}},\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"specialInstructions\": \"Need a wi-fi in the room.\",\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"M\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"P\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"LOYALTY_ID\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify checkin/checkout dates",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rate_key = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rate_key);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{modifiedStartDate}}\",\n                \"checkOutDate\": \"{{modifiedEndDate}}\",\n                \"corporateDiscountCode\": {{$randomInt}},\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ]\n                },\n                \"specialInstructions\": \"Need a wi-fi in the room.\",\n                \"numberOfGuests\": 1\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"M\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"{{$randomInt}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const moment = require('moment');",
											"",
											"let startDate = pm.environment.get(\"start_date\");",
											"let endDate = pm.environment.get(\"end_date\");",
											"",
											"let modifiedStartDate = moment(startDate)",
											"    .add(1, 'days')",
											"    .format('YYYY-MM-DD');",
											"",
											"let modifiedEndDate = moment(endDate)",
											"    .subtract(1, 'days')",
											"    .format('YYYY-MM-DD');",
											"",
											"postman.setEnvironmentVariable(\"modifiedStartDate\", modifiedStartDate);",
											"postman.setEnvironmentVariable(\"modifiedEndDate\", modifiedEndDate);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.clearEnvironmentVariable(\"modifiedStartDate\");",
											"postman.clearEnvironmentVariable(\"modifiedEndDate\");"
										]
									}
								}
							]
						},
						{
							"name": "modify number of guests",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas for 2 guests",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\">\r\n                </Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"bookingKey\": \"{{booking_key}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"corporateDiscountCode\": {{$randomInt}},\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"specialInstructions\": \"Need a wi-fi in the room.\",\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"M\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"{{$randomEmail}}\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"{{$randomPhoneNumberExt}}\",\n                        \"label\": \"P\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"programType\": \"LOYALTY_ID\",\n                        \"programNumber\": \"123456789\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify lead guest",
							"item": [
								{
									"name": "GetHotelAvailRQ - find hotel in Las Vegas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rate_key', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ - price hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('booking_key', bookingKey);\r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking - book hotel",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							]
						},
						{
							"name": "modify hotel room productCode",
							"item": [
								{
									"name": "GetHotelAvailRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n            <HotelRef HotelCode=\"100095894\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"3\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index='1' Adults='1'/>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    pm.environment.set('bookingKey', bookingKey); \r",
													"});\r",
													"\r",
													"console.log(\"Booking Key : \"+pm.environment.get('bookingKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rateKey}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "x-request-id",
												"value": "dnjas82bd102bd912requestid",
												"type": "text",
												"disabled": true
											},
											{
												"key": "ConversationId",
												"value": "dnjas82bd102bd912conversationid",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"useCsl\": \"true\",\n        \"bookingKey\": \"{{bookingKey}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetHotelAvailRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
													"    pm.environment.set('rateKey', rateKey);\r",
													"});\r",
													"\r",
													"console.log(\"Rate Key : \"+pm.environment.get('rateKey'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n            <HotelRef HotelCode=\"100095894\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"3\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"true\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{startDate2}}\" EndDate=\"{{endDate2}}\"/>\r\n            <Rooms>\r\n                <Room Index='1' Adults='1'/>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "HotelPriceCheckRQ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
													"    const hotelProductCode = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].HotelRateInfo[0].Rooms[0].Room[0].RatePlans[0].RatePlan[0].$.ProductCode;\r",
													"    pm.environment.set('bookingKey', bookingKey); \r",
													"    pm.environment.set('hotelProductCode', hotelProductCode);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rateKey}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");\r",
													"\r",
													"pm.environment.set('responseBeforeModify', pm.response.json());\r",
													"\r",
													"jsonData.payments.formsOfPayment[0].cardNumber = pm.environment.get('creditCardNumber');\r",
													"\r",
													"postman.setEnvironmentVariable(\"getBookingResponseBody\", JSON.stringify(jsonData));\r",
													"\r",
													"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{getBooking_endpoint}}",
											"host": [
												"{{getBooking_endpoint}}"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"bookingKey\": \"{{bookingKey}}\",\n                \"checkInDate\": \"{{startDate2}}\",\n                \"checkOutDate\": \"{{endDate2}}\",\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ],\n                    \"productCode\": \"{{hotelProductCode}}\"\n                },\n                \"numberOfGuests\": 1,\n                \"leadTravelerIndex\": 1\n            }\n        ],\n            \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"john@smith.family.priv\"\n                ]\n            }\n        ],\n        \"contactInfo\": {\n            \"emails\": [\n                \"travel@sabre.com\",\n                \"travel2@sabre.com\"\n            ],\n            \"phones\": [\n                \"+123456\"\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{modifyBooking_endpoint}}",
											"host": [
												"{{modifyBooking_endpoint}}"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking :printDiff",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{getBooking_endpoint}}",
											"host": [
												"{{getBooking_endpoint}}"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"",
											"// Add 30 days to today's date and use this date in start_date",
											"const start_date = moment().add(210, 'day').format(\"YYYY-MM-DD\");",
											"pm.environment.set('startDate2', start_date);",
											"",
											"// Add 37 days to today's date and use this date in end_date",
											"const end_date = moment().add(212, 'day').format(\"YYYY-MM-DD\");",
											"pm.environment.set('endDate2', end_date);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Modify Form of Payment",
							"item": [
								{
									"name": "modify FoP LATE to CC",
									"item": [
										{
											"name": "GetHotelAvailRQ - find hotel that allow LATE",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n\t\t\t<HotelRef HotelCode=\"100068656\" CodeContext=\"GLOBAL\"/>\r\n\t\t</HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
															"    pm.environment.set('booking_key', bookingKey);\r",
															"});\r",
															"\r",
															"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"LATE\"\n    }\n    \n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {}\n    ,\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ]\n                },\n                \"numberOfGuests\": 1\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP change CC",
									"item": [
										{
											"name": "GetHotelAvailRQ - find hotel in Las Vegas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v5_0_0\" version=\"5.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
															"    pm.environment.set('booking_key', bookingKey);\r",
															"});\r",
															"\r",
															"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {}\n    ,\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"2025-06\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP - PAYMENTCARD, CHECK, CASH, MISCELLANEOUS, INSTALLMENTS",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel in Las Vegas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v5_0_0\" version=\"5.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"{{HOTEL_CODE}}\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"123\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CHECK\"\n            },\n            {\n                \"type\": \"CASH\"\n            },\n            {\n                \"type\": \"MISCELLANEOUS\",\n                \"miscellaneousCreditCode\": \"PL189947\",\n                \"extendedPayment\": 12,\n                \"boardingTaxAmount\": \"100.00\"\n            },\n            {\n                \"type\": \"INSTALLMENTS\",\n                \"numberOfInstallments\": 4,\n                \"airlinePlanCode\": \"RG065\",\n                \"installmentAmount\": \"100\",\n                \"netBalance\": \"300.20\"\n            }\n            \n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ],\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"expiryDate\": \"2034-02\"\n                },\n                {\n                    \"type\": \"CHECK\"\n                },\n                {\n                    \"type\": \"CASH\"\n                },\n                {\n                    \"type\": \"MISCELLANEOUS\",\n                    \"miscellaneousCreditCode\": \"PL189947\",\n                    \"extendedPayment\": 12,\n                    \"boardingTaxAmount\": \"100.00\"\n                },\n                {\n                    \"type\": \"INSTALLMENTS\",\n                    \"numberOfInstallments\": 4,\n                    \"airlinePlanCode\": \"RG065\",\n                    \"installmentAmount\": \"100\",\n                    \"netBalance\": \"300.20\"\n                }\n            ]\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP including 'before' section - CC",
									"item": [
										{
											"name": "GetHotelAvailRQ - find hotel in Las Vegas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
															"    pm.environment.set('booking_key', bookingKey);\r",
															"});\r",
															"\r",
															"console.log(\"Booking Key : \"+pm.environment.get('booking_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);\r",
															"\r",
															"// get RQ and make a variable\r",
															"var req = request.data;\r",
															"// console.log(req.body);\r",
															"// console.log(request.data)\r",
															"\r",
															"postman.setEnvironmentVariable(\"request\", req);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- Booking Siganture\");\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"\r",
															"console.log(pm.environment.get('pnr') + \" <- PNR\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking modify one card to another",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{request}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify - add FoP Company Name",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel in Las Vegas",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v5_0_0\" version=\"5.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"LAS\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"GUARANTEE\",\n                \"formOfPaymentIndex\": 2,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"COMPANY_NAME\",\n                    \"companyAddress\": {\n                        \"name\": \"IBM\",\n                        \"street\": \"ITPL\",\n                        \"city\": \"BANGALORE\",\n                        \"stateProvince\": \"KA\",\n                        \"postalCode\": \"560029\",\n                        \"countryCode\": \"IN\"\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP Agency IATA",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"const paymentTypeCode = pm.collectionVariables.get('paymentTypeCode');\r",
															"console.log('Payment type code: ' + paymentTypeCode);\r",
															"let rateKey;\r",
															"\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const hotels = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo;\r",
															"    let shouldBreakLoop = true; // every method expecting true to keep running, return false to stop iterating through the array.\r",
															"    hotels.every((hotel) => {\r",
															"        let guaranteeAccepted;\r",
															"        try {//some hotels does not return Guarantee node and this script fails\r",
															"            guaranteeAccepted = hotel.HotelRateInfo[0].Rooms[0].Room[0].RatePlans[0].RatePlan[0].RateInfo[0].Guarantee[0].GuaranteesAccepted[0].GuaranteeAccepted;\r",
															"        }\r",
															"        catch (error) {\r",
															"            console.log(\"Cannot find expected node for hotel. Proceeding with next hotel\");\r",
															"            return false;\r",
															"        }\r",
															"        \r",
															"        guaranteeAccepted.forEach((guarantee) => {\r",
															"            if(guarantee.$.GuaranteeTypeCode == paymentTypeCode) {\r",
															"                rateKey = hotel.HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"                pm.environment.set('rate_key', rateKey);\r",
															"                shouldBreakLoop = false;\r",
															"            }\r",
															"        });\r",
															"        return shouldBreakLoop;\r",
															"    });\r",
															"});\r",
															"if(rateKey === undefined) throw new Error(\"Cannot find hotel with payment type code: \" + paymentTypeCode);\r",
															"console.log(\"Rate key: \" + rateKey);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set('paymentTypeCode', \"19\"); //agency iata type code 19"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"BER\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"AX\",\n                \"cardNumber\": \"{{creditCardNumberAX}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"GUARANTEE\",\n                \"formOfPaymentIndex\": 2,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"AX\",\n                    \"cardNumber\": \"{{creditCardNumberAX}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"AGENCY_IATA\",\n                    \"agencyIataNumber\": \"63211116\"\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP Virtual Card",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"const paymentTypeCode = pm.collectionVariables.get('paymentTypeCode');\r",
															"console.log('Payment type code: ' + paymentTypeCode);\r",
															"let rateKey;\r",
															"\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const hotels = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo;\r",
															"    let shouldBreakLoop = true; // every method expecting true to keep running, return false to stop iterating through the array.\r",
															"    hotels.every((hotel) => {\r",
															"        let guaranteeAccepted;\r",
															"        try {//some hotels does not return Guarantee node and this script fails\r",
															"            guaranteeAccepted = hotel.HotelRateInfo[0].Rooms[0].Room[0].RatePlans[0].RatePlan[0].RateInfo[0].Guarantee[0].GuaranteesAccepted[0].GuaranteeAccepted;\r",
															"        }\r",
															"        catch (error) {\r",
															"            console.log(\"Cannot find expected node for hotel. Proceeding with next hotel\");\r",
															"            return false;\r",
															"        }\r",
															"        \r",
															"        guaranteeAccepted.forEach((guarantee) => {\r",
															"            if(guarantee.$.GuaranteeTypeCode == paymentTypeCode) {\r",
															"                rateKey = hotel.HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"                pm.environment.set('rate_key', rateKey);\r",
															"                shouldBreakLoop = false;\r",
															"            }\r",
															"        });\r",
															"        return shouldBreakLoop;\r",
															"    });\r",
															"});\r",
															"if(rateKey === undefined) throw new Error(\"Cannot find hotel with payment type code: \" + paymentTypeCode);\r",
															"console.log(\"Rate key: \" + rateKey);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.collectionVariables.set('paymentTypeCode', '43'); //VIRTUAL_CREDIT_CARD(\"43\")"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"BER\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"AX\",\n                \"cardNumber\": \"{{creditCardNumberAX}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"GUARANTEE\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"VIRTUAL_CARD\",\n                    \"virtualCard\": {\n                        \"customerAccountCode\": \"SABREAIR4\",\n                        \"agencyEmail\": \"sp.support@sabre.com\",\n                        \"hotelFax\": \"54235324623\",\n                        \"hotelName\": \"Rl Test Hotel\",\n                        \"roomType\": \"AARP RATE\",\n                        \"roomDescription\": \"SUPERIOR-MINI BAR-BALCONY-UPGRADED AMENITIES-SITTING AREA- MARBLE TILE AARP RATE -MUST SHOW MEMBERSHIP CARD UPON ARRIVAL\",\n                        \"rateAmount\": {\n                            \"amount\": \"2960.00\",\n                            \"currencyCode\": \"USD\"\n                        },\n                        \"virtualCardCharges\": [\n                            \"Room Only\"\n                        ]\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//cleanup\r",
															"pm.environment.unset('token')\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP LATE to DEPOSIT (CC)",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Generate a unique ID for profile services\r",
															"var uuid = require('uuid');\r",
															"var myUUID = uuid();\r",
															"console.log(myUUID);\r",
															"\r",
															"//cleanup\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')\r",
															"\r",
															"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
															"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
															"\r",
															"console.log(pm.environment.get('filterName'))\r",
															"console.log(pm.environment.get('profileName'))\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n     <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"WAW\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"LATE\"\n    }\n    \n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"bookingKey\": \"{{booking_key}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 1\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"AX\",\n                    \"cardNumber\": \"{{creditCardNumberAX}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP LATE to DEPOSIT (TRAVEL_AGENCY_NAME_ADDRESS)",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel that allow LATE with TRAVEL_AGENCY_NAME_ADDRESS",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n            <HotelRef HotelCode=\"100162744\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"3\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index='1' Adults='1'/>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n      {\n        \"givenName\": \"John\",\n        \"surname\": \"Smith\",\n        \"birthDate\": \"1970-01-23\",\n        \"passengerCode\": \"ADT\"\n      }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"LATE\"\n    }\n    \n}"
												},
												"url": {
													"raw": "{{createBooking_endpoint}}",
													"host": [
														"{{createBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"bookingKey\": \"{{booking_key}}\",\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"AGENCY_NAME\",\n                    \"agencyAddress\": {\n                        \"name\": \"John Smith\",\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP LATE to DEPOSIT (TRAVEL_AGENCY_IATA)",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel that allow LATE with TRAVEL_AGENCY_IATA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"{{pcc}}\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <HotelRefs>\r\n            <HotelRef HotelCode=\"100162744\" CodeContext=\"GLOBAL\"/>\r\n        </HotelRefs>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"3\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index='1' Adults='1'/>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n      {\n        \"givenName\": \"John\",\n        \"surname\": \"Smith\",\n        \"birthDate\": \"1970-01-23\",\n        \"passengerCode\": \"ADT\"\n      }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"LATE\"\n    }\n    \n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"bookingKey\": \"{{booking_key}}\",\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 1,\n                \"paymentPolicy\": \"GUARANTEE\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"travelerIndices\": [\n                        1\n                    ],\n                    \"productCode\": \"{{hotelRoomProductCode}}\"\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"AGENCY_IATA\",\n                    \"agencyIataNumber\": \"63211116\"\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "modify FoP change CC with populated before section",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"{{HOTEL_CODE}}\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"GUARANTEE\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"AX\",\n                \"cardNumber\": \"{{creditCardNumberAX}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"agencyCustomerNumber\": \"1234567\",\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 1,\n                \"room\": {\n                    \"productCode\": \"C1QRAC\",\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"AX\",\n                    \"cardNumber\": \"{{creditCardNumberAX}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Add credit card when antoher CC stored in the booking",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v3_0_0\" version=\"3.0.0\">\r\n    <POS>\r\n        <Source PseudoCityCode=\"U9PK\"/>\r\n    </POS>\r\n    <SearchCriteria OffSet=\"2\" SortBy=\"TotalRate\" SortOrder=\"DESC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"300\" UOM=\"KM\">\r\n                <RefPoint Value=\"{{HOTEL_CODE}}\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"USD\" BestOnly=\"2\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"2\" >\r\n\t\t\t\t</Room>\r\n            </Rooms>\r\n            <InfoSource>100</InfoSource>\r\n        </RateInfoRef>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking - book hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marry\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"hotel\": {\n        \"bookingKey\": \"{{booking_key}}\",\n        \"rooms\": [\n            {\n                \"travelerIndices\": [\n                    1,\n                    2\n                ]\n            }\n        ],\n        \"paymentPolicy\": \"DEPOSIT\",\n        \"formOfPayment\": 1\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"AX\",\n                \"cardNumber\": \"{{creditCardNumberAX}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.hotels[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"postman.setEnvironmentVariable(\"hotelRoomProductCode\", jsonData.hotels[0].room.productCode);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"agencyCustomerNumber\": \"1234567\",\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"hotels\": [\n            {\n                \"itemId\": \"{{itemId}}\",\n                \"checkInDate\": \"{{start_date}}\",\n                \"checkOutDate\": \"{{end_date}}\",\n                \"leadTravelerIndex\": 2,\n                \"paymentPolicy\": \"DEPOSIT\",\n                \"formOfPaymentIndex\": 2,\n                \"room\": {\n                    \"productCode\": \"C1QRAC\",\n                    \"travelerIndices\": [\n                        1,\n                        2\n                    ]\n                },\n                \"numberOfGuests\": 2\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    },\n                    \"useType\": \"Unknown\",\n                    \"tripType\": \"Unknown\"\n                },\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"4111111111111111\",\n                    \"cardSecurityCode\": \"123\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Marry\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-04-12\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"//CREDIT_CARD(\"5\")",
											"//TRAVEL_AGENCY_NAME_ADDRESS(\"18\")",
											"//TRAVEL_AGENCY_IATA(\"19\") ",
											"//COMPANY(\"29\")",
											"//CORPORATE(\"30\")",
											"//OtsIGyKUBcfuHUgoS5miKKx8k4dlg7QyW1bOW+QhwTiTcBfm65sr1PomQmd66MnVLGN5VJxzfOB0mcERPnFhEFTXRpjD/UkgZX4RoA3XMQ4iTqDe55KRXt4ctuNBLszo1FSJqcZvyPfiWNKAJKkNlViG5WdHqSGK4ybuXesJe6zDLBCTngJC96fE0E47Lb55ESWDmg1UwjhGV4djACyYIY7rrNnRRTCyiQqE9pa0+C9PDCAIUJHUAg0t68f/GTXKE3Qy+dkadU3AmM/oEjeRe2yS/xkpb08DQSLYfo5awRvgADhB0X66qZDQut80dWJcJ/FI2fr+r9uqmr/7/si9vJxHQFJnYG0Ybn74KfxV3SSh+P4rRwTxwMB26kNpkqx/SoBnEXr/Gg6aXMJEQP71JCDWBH7zsL9tcScaQKeGAmJnmCKiZe9NKSGO4naielVNeESYaYxq2wnicyB+mQ0K/8B257kfEV1lDjmr+EZzlUrE+kAt17shCoOI1OfU5Bo4srV4wzfMV6V+VbkIuUtH+yAAuASuuGao88GGhyzS3aP0e+B91qnILWvuKCiMmEt5djQn5BUVjrVDUSDxXaRhF/57DLrY2laZC4mxKDjUZTFf/kgLcDvNZTZca7Ftt7Ya2BG+U0C1a+YfdwpBBOngzw==     --test hotel"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Flight modification flows",
					"item": [
						{
							"name": "data preparation",
							"item": [
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 0;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('flight_number', flightNumber);\r",
													"\r",
													"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirAvailLLSRQ  get return flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 1;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('return_flight_number', flightNumber);\r",
													"\r",
													"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"\r",
													"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "E-mail modifications",
							"item": [
								{
									"name": "Add email",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\",\n                \"john2@smith.family.priv\",\n                \"john3@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\",\n                \"asd2@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133700\",\n                        \"tierLevel\": \"17\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ],\n                \"emails\": [\n                    \"john@smith.family1.priv\",\n                    \"john2@smith.family2.priv\",\n                    \"john3@smith.family3.priv\",\n                    \"firstAdded@smith.family.priv\",\n                    \"secondAdded@smith.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"B\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Rambo\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programNumber\": \"1122334455\",\n                        \"tierLevel\": \"1\",\n                        \"receiverCode\": \"AA\"\n                    }\n                ],\n                \"emails\": [\n                    \"asd@bbb.family.priv\",\n                    \"asd2@bbb.family.priv\",\n                    \"asd3@bbb.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-123123123\",\n                        \"label\": \"C\"\n                    },\n                    {\n                        \"number\": \"1-555-123-4567\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update email",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\",\n                \"john2@smith.family.priv\",\n                \"john3@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\",\n                \"asd2@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133700\",\n                        \"tierLevel\": \"17\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ],\n                \"emails\": [\n                    \"john@smith.family1.priv\",\n                    \"john2@smith.family2.priv\",\n                    \"john3@smithUPDATE.family3.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"B\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programNumber\": \"1122334455\",\n                        \"tierLevel\": \"1\",\n                        \"receiverCode\": \"AA\"\n                    }\n                ],\n                \"emails\": [\n                    \"UPDATE@bb.family.priv\",\n                    \"asd2@bbb.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-123123123\",\n                        \"label\": \"C\"\n                    },\n                    {\n                        \"number\": \"1-555-123-4567\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete email",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\",\n                \"john2@smith.family.priv\",\n                \"john3@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\",\n                \"asd2@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133700\",\n                        \"tierLevel\": \"17\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ],\n                \"emails\": [\n                    \"john@smith.family1.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"B\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"All\",\n                \"surname\": \"Mrozicki\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programNumber\": \"1122334455\",\n                        \"tierLevel\": \"1\",\n                        \"receiverCode\": \"AA\"\n                    }\n                ],\n                \"emails\": [\n                    \"asd2@bb.family.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"1-123123123\",\n                        \"label\": \"C\"\n                    },\n                    {\n                        \"number\": \"1-555-123-4567\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Seat modifications",
							"item": [
								{
									"name": "Add seat - one way - single traveler",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 1;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            console.warn(seatCounter, seatRows[i].row+seat.column);\r",
															"            pm.environment.set('seat_passenger', seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{end_date}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"jsonData.flights[0].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('seat_passenger')\r",
															"                    }\r",
															"                ];\r",
															"\r",
															"pm.environment.set('getBookingWithSeatsAdded', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - add seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithSeatsAdded}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Add seats - one way - two travelers",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"jsonData.flights[0].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('seat_passenger')\r",
															"                    }\r",
															"                ];\r",
															"\r",
															"pm.environment.set('getBookingWithSeatsAdded', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - add seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithSeatsAdded}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Add extra seat - one way - two travelers",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var z=1; z<=seatCounter; z++) {\r",
															"    pm.environment.unset('seat_offer' + z);\r",
															"    pm.environment.unset('seat_passenger_'+ z);\r",
															"}\r",
															"\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"jsonData.flights[0].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('seat_passenger_1')\r",
															"                    },\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('seat_passenger_2')\r",
															"                    }\r",
															"                ];\r",
															"\r",
															"pm.environment.set('getBookingWithSeatsAdded', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - add seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithSeatsAdded}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Add extra seats - round trip - two travelers",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_1_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats return",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_2_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestType\": \"payload\",\n  \"request\": {\n    \"paxSegmentRefIds\": [\n      \"segment2\"\n    ],\n    \"originDest\": {\n      \"paxJourney\": {\n        \"paxSegments\": [\n          {\n            \"paxSegmentId\": \"segment2\",\n            \"departure\": {\n              \"locationCode\": \"{{to_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"arrival\": {\n              \"locationCode\": \"{{from_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"marketingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"operatingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"cabinType\": {\n              \"cabinTypeCode\": \"Y\",\n              \"cabinTypeName\": \"Economy\"\n            }\n          }\n        ]\n      }\n    },\n    \"paxes\": [\n      {\n        \"paxID\": \"passenger1\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-01-23\",\n        \"givenName\": \"John\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      },\n      {\n        \"paxID\": \"passenger2\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-03-23\",\n        \"givenName\": \"Jack\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      }\n    ],\n    \"currency\": \"PLN\"\n  }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{segment_1_seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            },\n                        {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{segment_2_seat_passenger_2}}\",\n                        \"travelerIndex\": 2\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"jsonData.flights[0].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('segment_1_seat_passenger_1')\r",
															"                    },\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('segment_1_seat_passenger_2')\r",
															"                    }\r",
															"                ];\r",
															"jsonData.flights[1].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('segment_2_seat_passenger_1')\r",
															"                    },\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('segment_2_seat_passenger_2')\r",
															"                    }\r",
															"                ];\r",
															"\r",
															"pm.environment.set('getBookingWithSeatAdded', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - add seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithSeatAdded}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll and void corresponding tickets",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete - one way - single traveler",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 1;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            console.warn(seatCounter, seatRows[i].row+seat.column);\r",
															"            pm.environment.set('seat_passenger', seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_passenger}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"delete jsonData.flights[0].seats;\r",
															"\r",
															"pm.environment.set('getBookingWithoutSeats', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - delete seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithoutSeats}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete single seat - one way - two travelers",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"jsonData.flights[0].seats =  [null, null];\r",
															"\r",
															"pm.environment.set('getBookingWithoutSeats', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithoutSeats}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete all seats - round trip - two travelers",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_1_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats return",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_2_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestType\": \"payload\",\n  \"request\": {\n    \"paxSegmentRefIds\": [\n      \"segment2\"\n    ],\n    \"originDest\": {\n      \"paxJourney\": {\n        \"paxSegments\": [\n          {\n            \"paxSegmentId\": \"segment2\",\n            \"departure\": {\n              \"locationCode\": \"{{to_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"arrival\": {\n              \"locationCode\": \"{{from_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"marketingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"operatingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"cabinType\": {\n              \"cabinTypeCode\": \"Y\",\n              \"cabinTypeName\": \"Economy\"\n            }\n          }\n        ]\n      }\n    },\n    \"paxes\": [\n      {\n        \"paxID\": \"passenger1\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-01-23\",\n        \"givenName\": \"John\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      },\n      {\n        \"paxID\": \"passenger2\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-03-23\",\n        \"givenName\": \"Jack\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      }\n    ],\n    \"currency\": \"PLN\"\n  }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{segment_1_seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            },\n                        {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{segment_2_seat_passenger_2}}\",\n                        \"travelerIndex\": 2\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"delete jsonData.flights[0].seats;\r",
															"\r",
															"pm.environment.set('getBookingWithoutSeats', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - delete seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithSeatAdded}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Modify seat - one way - single traveler",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 1;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            console.warn(seatCounter, seatRows[i].row+seat.column);\r",
															"            pm.environment.set('seat_passenger', seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_passenger}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 1;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            console.warn(seatCounter, seatRows[i].row+seat.column);\r",
															"            pm.environment.set('seat_passenger', seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add seats\r",
															"jsonData.flights[0].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('seat_passenger')\r",
															"                    }\r",
															"                ];\r",
															"\r",
															"pm.environment.set('getBookingWithoutSeats', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - modify seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithoutSeats}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Modify seats - round trip - two travelers",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_1_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"assertions.assertThatSessionAuthenticationIsUsed();\r",
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats return",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_2_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestType\": \"payload\",\n  \"request\": {\n    \"paxSegmentRefIds\": [\n      \"segment2\"\n    ],\n    \"originDest\": {\n      \"paxJourney\": {\n        \"paxSegments\": [\n          {\n            \"paxSegmentId\": \"segment2\",\n            \"departure\": {\n              \"locationCode\": \"{{to_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"arrival\": {\n              \"locationCode\": \"{{from_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"marketingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"operatingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"cabinType\": {\n              \"cabinTypeCode\": \"Y\",\n              \"cabinTypeName\": \"Economy\"\n            }\n          }\n        ]\n      }\n    },\n    \"paxes\": [\n      {\n        \"paxID\": \"passenger1\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-01-23\",\n        \"givenName\": \"John\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      },\n      {\n        \"paxID\": \"passenger2\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-03-23\",\n        \"givenName\": \"Jack\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      }\n    ],\n    \"currency\": \"PLN\"\n  }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{segment_1_seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            },\n                        {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\":  [\n                    {\n                        \"number\": \"{{segment_2_seat_passenger_2}}\",\n                        \"travelerIndex\": 2\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_1_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "Offers GetSeats return",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"\r",
															"    if(offers[i].unitPrice.totalAmount != null) {\r",
															"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
															"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"            seatOffersLimit++;\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"\r",
															"        \r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        \r",
															"        if(seat.offerItemRefIDs != undefined) {\r",
															"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"            {\r",
															"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                    isValidOffer = true;\r",
															"                    break;\r",
															"                }\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('segment_2_seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat \" + seatRows[i].row+seat.column + \" saved!\")\r",
															"        }\r",
															"\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestType\": \"payload\",\n  \"request\": {\n    \"paxSegmentRefIds\": [\n      \"segment2\"\n    ],\n    \"originDest\": {\n      \"paxJourney\": {\n        \"paxSegments\": [\n          {\n            \"paxSegmentId\": \"segment2\",\n            \"departure\": {\n              \"locationCode\": \"{{to_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"arrival\": {\n              \"locationCode\": \"{{from_airport_code}}\",\n              \"aircraftScheduledDate\": {\n                \"date\": \"{{end_date}}\"\n              }\n            },\n            \"marketingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"operatingCarrierInfo\": {\n              \"bookingCode\": \"Y\",\n              \"carrierCode\": \"{{airline_code}}\",\n              \"carrierFlightNumber\": \"{{return_flight_number}}\"\n            },\n            \"cabinType\": {\n              \"cabinTypeCode\": \"Y\",\n              \"cabinTypeName\": \"Economy\"\n            }\n          }\n        ]\n      }\n    },\n    \"paxes\": [\n      {\n        \"paxID\": \"passenger1\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-01-23\",\n        \"givenName\": \"John\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      },\n      {\n        \"paxID\": \"passenger2\",\n        \"ptc\": \"ADT\",\n        \"birthday\": \"1970-03-23\",\n        \"givenName\": \"Jack\",\n        \"surname\": \"Drake\",\n        \"accompaniedByInfant\": false\n      }\n    ],\n    \"currency\": \"PLN\"\n  }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data for seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"jsonData.flights[0].seats =  [\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('segment_1_seat_passenger_1')\r",
															"                    },\r",
															"                    null\r",
															"                ];\r",
															"\r",
															"jsonData.flights[1].seats =  [\r",
															"                    null,\r",
															"                    {\r",
															"                        \"number\": pm.environment.get('segment_2_seat_passenger_2')\r",
															"                    }\r",
															"                ];\r",
															"\r",
															"pm.environment.set('getBookingWithSeatAdded', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - add seats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithSeatAdded}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Modify change of gauge seats (aircraft change)",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"let scheduleWithStopCountOne = response.groupedItineraryResponse.scheduleDescs.find(desc => desc.stopCount === 1);",
															"",
															"if (scheduleWithStopCountOne) {",
															"    console.log(\"Found CoG flight\", scheduleWithStopCountOne);",
															"    console.log(\"Setting flight data\");",
															"",
															"    pm.environment.set(\"oFlightNumber\", scheduleWithStopCountOne.carrier.marketingFlightNumber);",
															"    pm.environment.set(\"oResBookDesigCode\", scheduleWithStopCountOne.ResBookDesigCode);",
															"    pm.environment.set(\"oDepartureTime\", scheduleWithStopCountOne.departure.time.substring(0, 5));",
															"    pm.environment.set(\"oDepartureAirport\", scheduleWithStopCountOne.departure.airport);",
															"    pm.environment.set(\"oArrivalAirport\", scheduleWithStopCountOne.arrival.airport);",
															"    pm.environment.set(\"oMarketingAirline\", scheduleWithStopCountOne.carrier.marketing);",
															"    pm.environment.set(\"oOperatingAirline\", scheduleWithStopCountOne.carrier.operating);",
															"",
															"} else {",
															"    console.error(\"No CoG flight found\");",
															"    pm.test(\"No CoG flight found\", function () {",
															"        pm.expect(scheduleWithStopCountOne).to.not.be.undefined;",
															"    });",
															"}",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v3/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v3",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "CreateBooking - change of gauge",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
															"    pm.response.to.have.header(\"x-request-id\");\r",
															"    pm.response.to.have.header(\"ConversationId\");\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2026-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Mike\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"2024-06-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jill\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Mike\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"2024-06-02\",\n            \"passengerCode\": \"INF\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"number\": \"13A\",\n                        \"travelerIndex\": 1\n                    },\n                    {\n                        \"number\": \"14A\",\n                        \"travelerIndex\": 2\n                    }\n                ],\n                \"changeOfGaugeSeats\": [\n                    {\n                        \"number\": \"13A\",\n                        \"travelerIndex\": 1\n                    },\n                    {\n                        \"number\": \"14A\",\n                        \"travelerIndex\": 2\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{createBooking_endpoint}}",
													"host": [
														"{{createBooking_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"13A\"\n                    },\n                    {\n                        \"number\": \"14A\"\n                    }\n                ],\n                \"changeOfGaugeSeats\": [\n                    {\n                        \"number\": \"13A\"\n                    },\n                    {\n                        \"number\": \"14A\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"11A\"\n                    },\n                    {\n                        \"number\": \"14A\"\n                    }\n                ],\n                \"changeOfGaugeSeats\": [\n                    {\n                        \"number\": \"13A\"\n                    },\n                    {\n                        \"number\": \"15A\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('airline_code', 'UA');",
													"pm.environment.set('from_airport_code', 'LAX');",
													"pm.environment.set('to_airport_code', 'CEB');",
													"",
													"",
													"// Below different routes with CoG flights",
													"",
													"// \"flightNumber\":\"2610\",\"airlineCode\":\"UA\",\"fromAirportCode\":\"LAX\",\"toAirportCode\":\"BOS\"",
													"",
													"// \"flightNumber\":\"1366\",\"airlineCode\":\"UA\",\"fromAirportCode\":\"EWR\",\"toAirportCode\":\"SEA\"",
													"",
													"// \"flightNumber\":\"1829\",\"airlineCode\":\"UA\",\"fromAirportCode\":\"DEN\",\"toAirportCode\":\"RDU\""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Phone modifications",
							"item": [
								{
									"name": "Update phone",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\",\n                    \"isPrimaryDocumentHolder\": true\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"NATIONAL_ID_CARD\",\n                    \"expiryDate\": \"2025-04-15\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jane\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-02-24\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-03-25\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"06:00\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"1-443-211-9876\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-111-476-2451\",\n                        \"label\": \"M\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete phone",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"1-222-333-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Add phone",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \n            \"phones\": [\n                {\n                    \"number\": \"1-555-123-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n\n                \"phones\": [\n                    {\n                        \"number\": \"1-555-123-4567\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"1-222-333-4567\",\n                        \"label\": \"M\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "SSR (identity documents/special service) modifications",
							"item": [
								{
									"name": "Delete identityDocument",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ  get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\",\n                    \"isPrimaryDocumentHolder\": true\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"NATIONAL_ID_CARD\",\n                    \"expiryDate\": \"2025-04-15\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jane\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-02-24\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-03-25\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"06:00\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
															"pm.environment.set('returFlightItemId', jsonData.flights[1].itemId);\r",
															"pm.environment.set('specialServices', JSON.stringify(jsonData.specialServices));\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - delete NATIONAL_ID_CARD for JOHN SMITH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"JOHN\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"NATIONAL_ID_CARD\",\n                        \"expiryDate\": \"2025-04-15\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JOHN\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2028-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"nameAssociationId\": \"3\"\n            }\n        ],\n        \"specialServices\": {{specialServices}}\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Add Identity Document",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ  get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\",\n                    \"isPrimaryDocumentHolder\": true\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"NATIONAL_ID_CARD\",\n                    \"expiryDate\": \"2025-04-15\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jane\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-02-24\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-03-25\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"06:00\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
															"pm.environment.set('returFlightItemId', jsonData.flights[1].itemId);\r",
															"pm.environment.set('specialServices', JSON.stringify(jsonData.specialServices));\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - add PASSPORT for JILL SMITH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"JOHN\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"NATIONAL_ID_CARD\",\n                        \"expiryDate\": \"2025-04-15\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JOHN\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"222222222222\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2028-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"0123456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2027-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JILL\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-03-25\",\n                        \"gender\": \"FEMALE\",\n                        \"isPrimaryDocumentHolder\": true\n                    }\n                ]\n            }\n        ],\n        \"specialServices\": {{specialServices}}\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Modify Identity Document",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ  get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\",\n                    \"isPrimaryDocumentHolder\": true\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"NATIONAL_ID_CARD\",\n                    \"expiryDate\": \"2025-04-15\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jane\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-02-24\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-03-25\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"06:00\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
															"pm.environment.set('returFlightItemId', jsonData.flights[1].itemId);\r",
															"pm.environment.set('specialServices', JSON.stringify(jsonData.specialServices));\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - modify document for JANE SMITH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"JOHN\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"0123456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JOHN\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"isPrimaryDocumentHolder\": true\n                    },\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"NATIONAL_ID_CARD\",\n                        \"expiryDate\": \"2025-04-15\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JOHN\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2026-01-02\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"nameAssociationId\": \"3\"\n            }\n        ],\n        \"specialServices\": {{specialServices}}\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Add special service request",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ  get return flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('return_flight_number', flightNumber);\r",
															"\r",
															"     actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															"console.log(\"return_flight_number : \"+pm.environment.get('return_flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{end_date}}\">\r\n            <DestinationLocation LocationCode=\"{{from_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{to_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\",\n                    \"isPrimaryDocumentHolder\": true\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"NATIONAL_ID_CARD\",\n                    \"expiryDate\": \"2025-04-15\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jane\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-02-24\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"Jane\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-03-25\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            },\n            {\n                \"flightNumber\": {{return_flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{to_airport_code}}\",\n                \"toAirportCode\": \"{{from_airport_code}}\",\n                \"departureDate\": \"{{end_date}}\",\n                \"departureTime\": \"06:00\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
															"pm.environment.set('returFlightItemId', jsonData.flights[1].itemId);\r",
															"\r",
															"\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - Add meal for Jll Smith",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\",\n        \"travelers\": [\n            {\n                \"givenName\": \"JOHN\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"0123456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JOHN\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"isPrimaryDocumentHolder\": true\n                    },\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"NATIONAL_ID_CARD\",\n                        \"expiryDate\": \"2025-04-15\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"JOHN\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"REFUGEE_REENTRY_PERMIT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\",\n                        \"isPrimaryDocumentHolder\": false\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"givenName\": \"JANE\",\n                        \"surname\": \"SMITH\",\n                        \"birthDate\": \"1970-02-24\",\n                        \"gender\": \"FEMALE\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"SMITH\",\n                \"passengerCode\": \"ADT\",\n                \"nameAssociationId\": \"3\"\n            }\n        ],\n        \"specialServices\": [\n            {\n                \"travelerIndices\": [\n                    1\n                ],\n                \"code\": \"DOCS\",\n                \"name\": \"API-Passenger Travel Document\",\n                \"message\": \"/P/US/0123456789/US/23JAN1970/M/09JUL2025/SMITH/JOHN//H\",\n                \"statusCode\": \"HK\",\n                \"statusName\": \"Confirmed\"\n            },\n            {\n                \"travelerIndices\": [\n                    1\n                ],\n                \"code\": \"DOCS\",\n                \"name\": \"API-Passenger Travel Document\",\n                \"message\": \"/I/US/99887766/US/23JAN1970/M/15APR2025/SMITH/JOHN\",\n                \"statusCode\": \"HK\",\n                \"statusName\": \"Confirmed\"\n            },\n            {\n                \"travelerIndices\": [\n                    2\n                ],\n                \"code\": \"DOCS\",\n                \"name\": \"API-Passenger Travel Document\",\n                \"message\": \"/T/US/99999999999/POL/24FEB1970/F/09JUL2025/SMITH/JANE\",\n                \"statusCode\": \"HK\",\n                \"statusName\": \"Confirmed\"\n            },\n            {\n                \"travelerIndices\": [\n                    2\n                ],\n                \"code\": \"DOCS\",\n                \"name\": \"API-Passenger Travel Document\",\n                \"message\": \"/DB/24FEB1970/F/SMITH/JANE\",\n                \"statusCode\": \"HK\",\n                \"statusName\": \"Confirmed\"\n            },\n            {\n                \"travelerIndices\": [\n                    3\n                ],\n                \"code\": \"VGML\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "Loyalty/DK number modifications",
							"item": [
								{
									"name": "modify DKNumber/agencyCustomerNumber",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Janice\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC234\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Janice\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "add DKNumber/agencyCustomerNumber",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Janice\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"ABC234\",\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Janice\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "loyalty programs add - update - delete",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"JOHN\",\n            \"surname\": \"KOWALSKI\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133711\",\n                    \"tierLevel\": 1,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133722\",\n                    \"receiverCode\": \"LO\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"JANICE\",\n            \"surname\": \"KOWALSKI\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133733\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133744\",\n                    \"receiverCode\": \"OM\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOHN\",\n                \"surname\": \"KOWALSKI\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133712\",\n                        \"tierLevel\": 1,\n                        \"receiverCode\": \"AA\"\n                    },\n                    {\n                        \"supplierCode\": \"OM\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133722\",\n                        \"receiverCode\": \"OM\"\n                    },\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133732\",\n                        \"receiverCode\": \"LO\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANICE\",\n                \"surname\": \"KOWALSKI\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"AA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"002001557133733\",\n                        \"tierLevel\": 13,\n                        \"receiverCode\": \"AA\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "delete DKNumber/agencyCustomerNumber - not supported",
									"item": [
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Janice\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Janice\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"2000-01-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Traveler modifications",
							"item": [
								{
									"name": "add infant",
									"item": [
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('flight_number', flightNumber);\r",
															"\r",
															"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"\r",
															"console.log(pm.environment.get('pnr') + \" <- PNR\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - throws error but works and  adds infant",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n                \n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Little\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"INF\",\n                \"type\": \"INFANT\",\n                \"birthDate\": \"2025-01-01\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													"pm.environment.set('airline_code', 'EY');\r",
													"pm.environment.set('from_airport_code', 'MEL');\r",
													"pm.environment.set('to_airport_code', 'AUH');"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "update traveler name and surname",
									"item": [
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marta\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Rebecca\",\n                \"surname\": \"Miss\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "update traveler type is not permitted",
									"item": [
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Marta\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\"\n            },\n            {\n                \"givenName\": \"Marta\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "multiple changes update name + delete infant",
									"item": [
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Little\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"INF\",\n            \"type\": \"INFANT\",\n            \"birthDate\": \"2022-01-01\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"Hammond\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "update name - not suported by the airline",
									"item": [
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"const selectedFlightIndex = 1;\r",
															"let actualDestinationLocation;\r",
															"let actualOriginLocation;\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    //set FlightNumber\r",
															"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
															"    pm.environment.set('flight_number', flightNumber);\r",
															"\r",
															"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
															"     \r",
															"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
															"});\r",
															"\r",
															"//check if OTA air avail return expected flights\r",
															"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
															"});\r",
															"\r",
															"pm.test(\"Origin location return from request should be as expected\", function () {\r",
															"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
															"\r",
															"});\r",
															"\r",
															"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "createBooking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        }\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Rambp\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"emails\": [\n                \"john@smith.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Rambo\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"emails\": [\n                \"asd@bbb.family.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"16:55\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Rambo\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Nooo\",\n                \"surname\": \"HowaboutSurname\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('airline_code', 'EY');",
													"pm.environment.set('from_airport_code', 'MEL');",
													"pm.environment.set('to_airport_code', 'AUH');"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "multiple changes update name + add infant",
									"item": [
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking - returns error but work",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"Hammond\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"givenName\": \"Little\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"INF\",\n                \"type\": \"INFANT\",\n                \"birthDate\": \"2022-01-01\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "delete infant",
									"item": [
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"givenName\": \"Little\",\n            \"surname\": \"Smith\",\n            \"passengerCode\": \"INF\",\n            \"type\": \"INFANT\",\n            \"birthDate\": \"2022-01-01\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n                \n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Form of Payment modifications (ATPCO)",
							"item": [
								{
									"name": "Add FOP",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "OTA_AirAvailLLSRQ - get flight number",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set(\"airline_code\", \"QF\");\r",
															"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
															"pm.environment.set(\"to_airport_code\", \"MEL\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"CASH\"\n            },\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                },\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CHECK\"\n                },\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete FOP",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "SessionCreateRQ (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n             {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CHECK\"\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CHECK\"\n                },\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update FOP",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"ABC123\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"002001557133700\",\n                    \"tierLevel\": \"17\",\n                    \"receiverCode\": \"LO\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"+1-222-333-4567\",\n                    \"label\": \"B\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programNumber\": \"1122334455\",\n                    \"tierLevel\": \"1\",\n                    \"receiverCode\": \"AA\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-123123123\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"+1-555-123-4567\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                },\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"AX\",\n                    \"cardNumber\": \"{{creditCardNumberAX}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CHECK\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Form of Payment modifications (LCC)",
							"item": [
								{
									"name": "Add FOP",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>AA</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max with repeat",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var maxNumberOfTries = 6;",
															"var sleepBetweenTries = 1500;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var itineraryCount = jsonData.groupedItineraryResponse.statistics.itineraryCount;",
															"",
															"if ((itineraryCount <= 0) && (pm.environment.get(\"collection_tries\") < maxNumberOfTries)) {",
															"    var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);",
															"    setTimeout(function() {}, sleepBetweenTries);",
															"    pm.environment.set(\"collection_tries\", tries + 1);",
															"    postman.setNextRequest(request.name);",
															" } else {",
															"    pm.environment.unset(\"collection_tries\");",
															"",
															"    console.log(\"Set flight data variables\");",
															"    var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"    pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"    pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
															"    pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
															"    pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
															"    pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
															"    pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
															"    pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
															"}"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if (!pm.environment.get(\"collection_tries\")) {\r",
															"    pm.environment.set(\"collection_tries\", 0);\r",
															"}\r",
															"\r",
															"var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);\r",
															"\r",
															"let moment = require('moment')\r",
															"var temp_start_date = moment(pm.environment.get(\"start_date\"),\"YYYY-MM-DD\").add(tries, 'day').format(\"YYYY-MM-DD\");\r",
															"console.log(\"Set temp_start_date to: \" + temp_start_date);\r",
															"pm.environment.set(\"temp_start_date\", temp_start_date);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{temp_start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{lcc_second_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 100\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v3/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v3",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"{{$randomFirstName}}\",\n            \"surname\": \"{{$randomLastName}}\",\n            \"birthDate\": \"1983-08-11\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{lcc_second_airline_code}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{temp_start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CASH\"\n                },\n                {\n                    \"type\": \"CHECK\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update FOP",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>AA</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max with repeat",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var maxNumberOfTries = 6;",
															"var sleepBetweenTries = 1500;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var itineraryCount = jsonData.groupedItineraryResponse.statistics.itineraryCount;",
															"",
															"if ((itineraryCount <= 0) && (pm.environment.get(\"collection_tries\") < maxNumberOfTries)) {",
															"    var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);",
															"    setTimeout(function() {}, sleepBetweenTries);",
															"    pm.environment.set(\"collection_tries\", tries + 1);",
															"    postman.setNextRequest(request.name);",
															" } else {",
															"    pm.environment.unset(\"collection_tries\");",
															"",
															"    console.log(\"Set flight data variables\");",
															"    var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"    pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"    pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
															"    pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
															"    pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
															"    pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
															"    pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
															"    pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if (!pm.environment.get(\"collection_tries\")) {\r",
															"    pm.environment.set(\"collection_tries\", 0);\r",
															"}\r",
															"\r",
															"var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);\r",
															"\r",
															"let moment = require('moment')\r",
															"var temp_start_date = moment(pm.environment.get(\"start_date\"),\"YYYY-MM-DD\").add(tries, 'day').format(\"YYYY-MM-DD\");\r",
															"console.log(\"Set temp_start_date to: \" + temp_start_date);\r",
															"pm.environment.set(\"temp_start_date\", temp_start_date);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{temp_start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{lcc_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v3/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v3",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"{{$randomFirstName}}\",\n            \"surname\": \"{{$randomLastName}}\",\n            \"birthDate\": \"1983-08-11\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{lcc_airline_code}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{temp_start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CHECK\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete FOP",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>AA</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max with repeat",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var maxNumberOfTries = 6;",
															"var sleepBetweenTries = 1500;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var itineraryCount = jsonData.groupedItineraryResponse.statistics.itineraryCount;",
															"",
															"if ((itineraryCount <= 0) && (pm.environment.get(\"collection_tries\") < maxNumberOfTries)) {",
															"    var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);",
															"    setTimeout(function() {}, sleepBetweenTries);",
															"    pm.environment.set(\"collection_tries\", tries + 1);",
															"    postman.setNextRequest(request.name);",
															" } else {",
															"    pm.environment.unset(\"collection_tries\");",
															"",
															"    console.log(\"Set flight data variables\");",
															"    var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"    pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"    pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
															"    pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
															"    pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
															"    pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
															"    pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
															"    pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
															"}"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"if (!pm.environment.get(\"collection_tries\")) {\r",
															"    pm.environment.set(\"collection_tries\", 0);\r",
															"}\r",
															"\r",
															"var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);\r",
															"\r",
															"let moment = require('moment')\r",
															"var temp_start_date = moment(pm.environment.get(\"start_date\"),\"YYYY-MM-DD\").add(tries, 'day').format(\"YYYY-MM-DD\");\r",
															"console.log(\"Set temp_start_date to: \" + temp_start_date);\r",
															"pm.environment.set(\"temp_start_date\", temp_start_date);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{temp_start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{lcc_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v3/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v3",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "CreateBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"{{$randomFirstName}}\",\n            \"surname\": \"{{$randomLastName}}\",\n            \"birthDate\": \"1983-08-11\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{lcc_airline_code}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{temp_start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payments\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CHECK\"\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('lcc_airline_code', 'U2');",
											"pm.environment.set('lcc_second_airline_code', 'FR');",
											"pm.environment.set('atpco_airline_code', 'AA');",
											"pm.environment.set('ndc_airline_code', 'QF');",
											"",
											"pm.environment.set('from_airport_code', 'LON');",
											"pm.environment.set('to_airport_code', 'MAD');",
											"",
											"pm.environment.set('first_card_code', 'CA');",
											"pm.environment.set('first_card_number', '4111111111111111');",
											"pm.environment.set('first_expire_date', '2030-03');",
											"pm.environment.set('first_security_card_code', '737');",
											"",
											"pm.environment.set('second_card_code', 'VI');",
											"pm.environment.set('second_card_number', '4444333322221111');",
											"pm.environment.set('second_expire_date', '2025-12');",
											"pm.environment.set('second_security_card_code', '737');",
											"",
											"pm.environment.set('lcc_tests', true);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.unset('lcc_tests');"
										]
									}
								}
							]
						},
						{
							"name": "Form of Payment modifications (NDC)",
							"item": [
								{
									"name": "Add FOP",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                },\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete FOP",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"CASH\"\n            },\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                },\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update FOP",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"after\": {\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"CASH\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Form of Payment modifications (Hybrid)",
							"item": [
								{
									"name": "Add FOP",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Offer shop",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\"\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"programType\": \"LOYALTY_ID\",\n                    \"programNumber\": \"544423121\"\n                }\n            ]\n        }\n    ],\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    },\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <SearchCriteria SortBy=\"DistanceFrom\" SortOrder=\"ASC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"200\" UOM=\"MI\">\r\n                <RefPoint Value=\"DFW\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"GBP\" BestOnly=\"1\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <RateRange Min=\"0.10\" Max=\"1000.0\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\">\r\n                </Room>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n        <HotelPref>\r\n            <BrandCodes>\r\n                <BrandCode>10002</BrandCode>\r\n            </BrandCodes>\r\n        </HotelPref>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
															"    pm.environment.set('bookingKey', bookingKey);\r",
															"});\r",
															"\r",
															"console.log(\"Booking Key : \"+pm.environment.get('bookingKey'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "UpdatePassengerNameRecordRQ 1.1.0 - add CSL hotel segment",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n\r\n<UpdatePassengerNameRecordRQ xmlns=\"http://services.sabre.com/sp/updatereservation/v1_1\" version=\"1.1.0\" haltOnAirPriceError=\"false\" haltOnHotelBookError=\"true\">\r\n    <Itinerary id=\"{{pnr}}\"/>\r\n    <HotelBook bookGDSviaCSL=\"true\">\r\n        <BookingInfo >\r\n            <BookingKey>{{bookingKey}}</BookingKey>\r\n        </BookingInfo>\r\n        <Rooms>\r\n            <Room RoomIndex=\"1\" >\r\n                <Guests>\r\n                    <Guest FirstName=\"JOHN\" LastName=\"SMITH\" Email=\"test.user@sabre.com\" Type=\"10\" Index=\"1\" LeadGuest=\"true\"  >\r\n                        <Contact Phone=\"2025550137\"/>\r\n                    </Guest>\r\n                </Guests>\r\n            </Room>\r\n        </Rooms>\r\n        <PaymentInformation Type=\"DEPOSIT\">\r\n            <FormOfPayment>\r\n                <PaymentCard>\r\n                    <PaymentType>CC</PaymentType>\r\n                    <CardCode>VI</CardCode>\r\n                    <CardNumber>{{creditCardNumber}}</CardNumber>\r\n                    <ExpiryMonth>10</ExpiryMonth>\r\n                    <ExpiryYear>2034</ExpiryYear>\r\n                    <FullCardHolderName>\r\n                        <FirstName>JOHN</FirstName>\r\n                        <LastName>SMITH</LastName>\r\n                        <Email>test.user@sabre.com</Email>\r\n                    </FullCardHolderName>\r\n                    <CSC>{{cardSecurityCode}}</CSC>\r\n                    <Address>\r\n                        <AddressLine>John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS</AddressLine>\r\n                        <CityName>Grapevine</CityName>\r\n                        <CityCodes>\r\n                            <Code codeContext=\"IATA\">DFW</Code>\r\n                        </CityCodes>\r\n                        <StateProvince code=\"TX\"/>\r\n                        <PostCode>76051</PostCode>\r\n                        <CountryCodes>\r\n                            <Code >US</Code>\r\n                        </CountryCodes>\r\n                    </Address>\r\n                    <Phone>\r\n                        <PhoneNumber>8174425919</PhoneNumber>\r\n                    </Phone>\r\n                </PaymentCard>\r\n            </FormOfPayment>\r\n        </PaymentInformation>\r\n    </HotelBook>\r\n    <PostProcessing>\r\n        <EndTransaction>\r\n            <Source ReceivedFrom=\"SP TEST\"/>\r\n        </EndTransaction>\r\n        <RedisplayReservation waitInterval='100' />\r\n    </PostProcessing>\r\n</UpdatePassengerNameRecordRQ>\r\n\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa), [Resources](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa/resources), [Legacy Versions](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa/legacy)</b>\n\n- [v2.x Quick Start Guide](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.x_QuickStartGuide.xlsx)\n- [v2.0.3 Request Documentation](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.0.3_Design.xml)\n- [v2.0.3 Request Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQ.xsd)\n- [v2.0.3 Request/Response Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQRS.xsd)\n- [v2.0.3 Response Documentation](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRS_v2.0.3_Design.xml)\n- [v2.0.3 Response Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RS.xsd)\n- [v2.0.3 Sample Payloads](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.0.3_Sample_Payloads.xml)\n- [v2.0.3 WSDL](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQ.wsdl)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"654321\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"gender\": \"MALE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"travel@sabre.com\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"654321\"\n                    }\n                ],\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"14218435\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2029-11-26\",\n                        \"issuingCountryCode\": \"US\",\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"itemId\": \"8e6a96672c0663486ffbe325a04f516d63cc295f871bc530b21ee78ee53634df5db1d5ff454ed7cc4b92d3fa3caf5191092f5adcbc1efc1ab384922b29baa07c\"\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\"\n                    }\n                ]\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CHECK\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Update FOP",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Offer shop",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\"\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"programType\": \"LOYALTY_ID\",\n                    \"programNumber\": \"544423121\"\n                }\n            ]\n        }\n    ],\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    },\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <SearchCriteria SortBy=\"DistanceFrom\" SortOrder=\"ASC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"200\" UOM=\"MI\">\r\n                <RefPoint Value=\"DFW\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"GBP\" BestOnly=\"1\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <RateRange Min=\"0.10\" Max=\"1000.0\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\">\r\n                </Room>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n        <HotelPref>\r\n            <BrandCodes>\r\n                <BrandCode>10002</BrandCode>\r\n            </BrandCodes>\r\n        </HotelPref>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
															"    pm.environment.set('bookingKey', bookingKey);\r",
															"});\r",
															"\r",
															"console.log(\"Booking Key : \"+pm.environment.get('bookingKey'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "UpdatePassengerNameRecordRQ 1.1.0 - add CSL hotel segment",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<UpdatePassengerNameRecordRQ xmlns=\"http://services.sabre.com/sp/updatereservation/v1_1\" version=\"1.1.0\" targetCity=\"G7HE\" haltOnAirPriceError=\"false\" haltOnHotelBookError=\"false\">\r\n    <Itinerary id=\"{{pnr}}\"/>\r\n    <HotelBook bookGDSviaCSL=\"true\">\r\n        <BookingInfo >\r\n            <BookingKey>{{bookingKey}}</BookingKey>\r\n        </BookingInfo>\r\n        <Rooms>\r\n            <Room RoomIndex=\"1\" >\r\n                <Guests>\r\n                    <Guest FirstName=\"JOHN\" LastName=\"SMITH\" Email=\"test.user@sabre.com\" Type=\"10\" Index=\"1\" LeadGuest=\"true\"  >\r\n                        <Contact Phone=\"2025550137\"/>\r\n                    </Guest>\r\n                </Guests>\r\n            </Room>\r\n        </Rooms>\r\n        <PaymentInformation Type=\"DEPOSIT\">\r\n            <FormOfPayment>\r\n                <PaymentCard>\r\n                    <PaymentType>CC</PaymentType>\r\n                    <CardCode>VI</CardCode>\r\n                    <CardNumber>{{creditCardNumber}}</CardNumber>\r\n                    <ExpiryMonth>10</ExpiryMonth>\r\n                    <ExpiryYear>2034</ExpiryYear>\r\n                    <FullCardHolderName>\r\n                        <FirstName>JOHN</FirstName>\r\n                        <LastName>SMITH</LastName>\r\n                        <Email>test.user@sabre.com</Email>\r\n                    </FullCardHolderName>\r\n                    <CSC>{{cardSecurityCode}}</CSC>\r\n                    <Address>\r\n                        <AddressLine>John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS</AddressLine>\r\n                        <CityName>Grapevine</CityName>\r\n                        <CityCodes>\r\n                            <Code codeContext=\"IATA\">DFW</Code>\r\n                        </CityCodes>\r\n                        <StateProvince code=\"TX\"/>\r\n                        <PostCode>76051</PostCode>\r\n                        <CountryCodes>\r\n                            <Code >US</Code>\r\n                        </CountryCodes>\r\n                    </Address>\r\n                    <Phone>\r\n                        <PhoneNumber>8174425919</PhoneNumber>\r\n                    </Phone>\r\n                </PaymentCard>\r\n            </FormOfPayment>\r\n        </PaymentInformation>\r\n    </HotelBook>\r\n    <PostProcessing>\r\n   \r\n        <EndTransaction>\r\n            <Source ReceivedFrom=\"SP TEST\"/>\r\n        </EndTransaction>\r\n        <RedisplayReservation waitInterval='100' />\r\n    </PostProcessing>\r\n</UpdatePassengerNameRecordRQ>\r\n\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa), [Resources](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa/resources), [Legacy Versions](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa/legacy)</b>\n\n- [v2.x Quick Start Guide](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.x_QuickStartGuide.xlsx)\n- [v2.0.3 Request Documentation](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.0.3_Design.xml)\n- [v2.0.3 Request Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQ.xsd)\n- [v2.0.3 Request/Response Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQRS.xsd)\n- [v2.0.3 Response Documentation](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRS_v2.0.3_Design.xml)\n- [v2.0.3 Response Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RS.xsd)\n- [v2.0.3 Sample Payloads](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.0.3_Sample_Payloads.xml)\n- [v2.0.3 WSDL](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQ.wsdl)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"654321\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"gender\": \"MALE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"travel@sabre.com\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"654321\"\n                    }\n                ],\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"14218435\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2029-11-26\",\n                        \"issuingCountryCode\": \"US\",\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"itemId\": \"8e6a96672c0663486ffbe325a04f516d63cc295f871bc530b21ee78ee53634df5db1d5ff454ed7cc4b92d3fa3caf5191092f5adcbc1efc1ab384922b29baa07c\"\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\"\n                    }\n                ]\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                },\n                {\n                    \"type\": \"CHECK\"\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete FOP",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Offer shop",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\"\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"programType\": \"LOYALTY_ID\",\n                    \"programNumber\": \"544423121\"\n                }\n            ]\n        }\n    ],\n    \"payment\": {\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CASH\"\n            }\n        ]\n    },\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetHotelAvailRQ - find hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const rateKey = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;\r",
															"    pm.environment.set('rate_key', rateKey);\r",
															"});\r",
															"\r",
															"console.log(\"Rate Key : \"+pm.environment.get('rate_key'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n\r\n<GetHotelAvailRQ xmlns=\"http://services.sabre.com/hotel/avail/v4_0_0\" version=\"4.0.0\">\r\n    <SearchCriteria SortBy=\"DistanceFrom\" SortOrder=\"ASC\" PageSize=\"200\" TierLabels=\"true\" RateDetailsInd=\"true\">\r\n        <GeoSearch>\r\n            <GeoRef Radius=\"200\" UOM=\"MI\">\r\n                <RefPoint Value=\"DFW\" ValueContext=\"CODE\" RefPointType=\"6\"/>\r\n            </GeoRef>\r\n        </GeoSearch>\r\n        <RateInfoRef CurrencyCode=\"GBP\" BestOnly=\"1\" PrepaidQualifier=\"IncludePrepaid\" RefundableOnly=\"false\" ConvertedRateInfoOnly=\"false\">\r\n            <StayDateTimeRange StartDate=\"{{start_date}}\" EndDate=\"{{end_date}}\"/>\r\n            <RateRange Min=\"0.10\" Max=\"1000.0\"/>\r\n            <Rooms>\r\n                <Room Index=\"1\" Adults=\"1\">\r\n                </Room>\r\n            </Rooms>\r\n            <RateSource>100</RateSource>\r\n        </RateInfoRef>\r\n        <HotelPref>\r\n            <BrandCodes>\r\n                <BrandCode>10002</BrandCode>\r\n            </BrandCodes>\r\n        </HotelPref>\r\n    </SearchCriteria>\r\n</GetHotelAvailRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "HotelPriceCheckRQ - price hotel",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const xml2js = require('xml2js');\r",
															"\r",
															"// Parse response and remove namespaces (prefixes)\r",
															"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
															"const parseString = xml2js.parseString;\r",
															"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
															"\r",
															"parseString(responseBody, parseOptions, (err, result) => {\r",
															"    const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
															"    pm.environment.set('bookingKey', bookingKey);\r",
															"});\r",
															"\r",
															"console.log(\"Booking Key : \"+pm.environment.get('bookingKey'))"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<HotelPriceCheckRQ xmlns=\"http://services.sabre.com/hotel/pricecheck/v3_0_0\" version=\"3.0.0\">\r\n\t<RateInfoRef RateKey=\"{{rate_key}}\"/>\r\n</HotelPriceCheckRQ>\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "UpdatePassengerNameRecordRQ 1.1.0 - add CSL hotel segment",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\r\n\r\n<UpdatePassengerNameRecordRQ xmlns=\"http://services.sabre.com/sp/updatereservation/v1_1\" version=\"1.1.0\" targetCity=\"G7HE\" haltOnAirPriceError=\"false\" haltOnHotelBookError=\"false\">\r\n    <Itinerary id=\"{{pnr}}\"/>\r\n    <HotelBook bookGDSviaCSL=\"true\">\r\n        <BookingInfo >\r\n            <BookingKey>{{bookingKey}}</BookingKey>\r\n        </BookingInfo>\r\n        <Rooms>\r\n            <Room RoomIndex=\"1\" >\r\n                <Guests>\r\n                    <Guest FirstName=\"JOHN\" LastName=\"SMITH\" Email=\"test.user@sabre.com\" Type=\"10\" Index=\"1\" LeadGuest=\"true\"  >\r\n                        <Contact Phone=\"2025550137\"/>\r\n                    </Guest>\r\n                </Guests>\r\n            </Room>\r\n        </Rooms>\r\n        <PaymentInformation Type=\"DEPOSIT\">\r\n            <FormOfPayment>\r\n                <PaymentCard>\r\n                    <PaymentType>CC</PaymentType>\r\n                    <CardCode>VI</CardCode>\r\n                    <CardNumber>{{creditCardNumber}}</CardNumber>\r\n                    <ExpiryMonth>10</ExpiryMonth>\r\n                    <ExpiryYear>2034</ExpiryYear>\r\n                    <FullCardHolderName>\r\n                        <FirstName>JOHN</FirstName>\r\n                        <LastName>SMITH</LastName>\r\n                        <Email>test.user@sabre.com</Email>\r\n                    </FullCardHolderName>\r\n                    <CSC>{{cardSecurityCode}}</CSC>\r\n                    <Address>\r\n                        <AddressLine>John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS</AddressLine>\r\n                        <CityName>Grapevine</CityName>\r\n                        <CityCodes>\r\n                            <Code codeContext=\"IATA\">DFW</Code>\r\n                        </CityCodes>\r\n                        <StateProvince code=\"TX\"/>\r\n                        <PostCode>76051</PostCode>\r\n                        <CountryCodes>\r\n                            <Code >US</Code>\r\n                        </CountryCodes>\r\n                    </Address>\r\n                    <Phone>\r\n                        <PhoneNumber>8174425919</PhoneNumber>\r\n                    </Phone>\r\n                </PaymentCard>\r\n            </FormOfPayment>\r\n        </PaymentInformation>\r\n    </HotelBook>\r\n    <PostProcessing>\r\n   \r\n        <EndTransaction>\r\n            <Source ReceivedFrom=\"SP TEST\"/>\r\n        </EndTransaction>\r\n        <RedisplayReservation waitInterval='100' />\r\n    </PostProcessing>\r\n</UpdatePassengerNameRecordRQ>\r\n\r\n\r\n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa), [Resources](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa/resources), [Legacy Versions](https://developer.sabre.com/docs/read/soap_apis/management/utility/change_aaa/legacy)</b>\n\n- [v2.x Quick Start Guide](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.x_QuickStartGuide.xlsx)\n- [v2.0.3 Request Documentation](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.0.3_Design.xml)\n- [v2.0.3 Request Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQ.xsd)\n- [v2.0.3 Request/Response Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQRS.xsd)\n- [v2.0.3 Response Documentation](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRS_v2.0.3_Design.xml)\n- [v2.0.3 Response Schema](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RS.xsd)\n- [v2.0.3 Sample Payloads](http://webservices.sabre.com/drc/servicedoc/ContextChangeLLSRQ_v2.0.3_Sample_Payloads.xml)\n- [v2.0.3 WSDL](http://webservices.sabre.com/wsdl/tpfc/ContextChangeLLS2.0.3RQ.wsdl)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"let getBookingResponseBody = JSON.stringify(jsonData);\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", getBookingResponseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"654321\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"gender\": \"MALE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"travel@sabre.com\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"654321\"\n                    }\n                ],\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"14218435\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2029-11-26\",\n                        \"issuingCountryCode\": \"US\",\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\",\n                        \"itemId\": \"8e6a96672c0663486ffbe325a04f516d63cc295f871bc530b21ee78ee53634df5db1d5ff454ed7cc4b92d3fa3caf5191092f5adcbc1efc1ab384922b29baa07c\"\n                    },\n                    {\n                        \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                        \"birthDate\": \"1970-01-23\",\n                        \"gender\": \"MALE\"\n                    }\n                ]\n            }\n        ],\n        \"payments\": {\n            \"formsOfPayment\": [\n                {\n                    \"type\": \"PAYMENTCARD\",\n                    \"cardTypeCode\": \"VI\",\n                    \"cardNumber\": \"{{creditCardNumber}}\",\n                    \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                    \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                    \"cardHolder\": {\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"email\": \"john@smith.family.priv\",\n                        \"phone\": \"+1-555-123-4567\",\n                        \"address\": {\n                            \"street\": \"1230 Ellen Ave, apt 10\",\n                            \"city\": \"Dallas\",\n                            \"stateProvince\": \"TX\",\n                            \"postalCode\": \"75063\",\n                            \"countryCode\": \"US\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Group booking modification flows",
					"item": [
						{
							"name": "data preparation (flight)",
							"item": [
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"const selectedFlightIndex = 0;\r",
													"let actualDestinationLocation;\r",
													"let actualOriginLocation;\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    //set FlightNumber\r",
													"        const flightNumber = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].$.FlightNumber;\r",
													"    pm.environment.set('flight_number', flightNumber);\r",
													"\r",
													"    actualDestinationLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].DestinationLocation[0].$.LocationCode;\r",
													"     \r",
													"     actualOriginLocation = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption[selectedFlightIndex].FlightSegment[0].OriginLocation[0].$.LocationCode;\r",
													"});\r",
													"\r",
													"//check if OTA air avail return expected flights\r",
													"pm.test(\"Destination  location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('to_airport_code')).to.eql(actualDestinationLocation);\r",
													"});\r",
													"\r",
													"pm.test(\"Origin location return from request should be as expected\", function () {\r",
													"    pm.expect(pm.environment.get('from_airport_code')).to.eql(actualOriginLocation);\r",
													"\r",
													"});\r",
													"\r",
													"console.log(\"FlightNumber : \"+pm.environment.get('flight_number'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Add (ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"emails\": [\n                    \"JOHNGRACZYK@SMITH.FAMILY.PRIV\",\n                    \"JOHN222@SMITH.FAMILY.PRIV\"\n                ]\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"DOE\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            },\n            {\n                \"givenName\": \"JACK\",\n                \"surname\": \"BROWN\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true\n            },\n            {\n                \"givenName\": \"BILL\",\n                \"surname\": \"BROWN\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            }\n        ],\n        \"travelersGroup\": {\n            \"itemId\": \"3\",\n            \"name\": \"GROUP A\",\n            \"numberOfTravelers\": 3,\n            \"numberOfTravelersRemaining\": 1\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update (Name ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"BILL\",\n                \"surname\": \"BROWN\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"emails\": [\n                    \"JOHNGRACZYK@SMITH.FAMILY.PRIV\",\n                    \"JOHN222@SMITH.FAMILY.PRIV\"\n                ]\n            },\n            {\n                \"givenName\": \"JACK\",\n                \"surname\": \"BROWN\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            }\n        ],\n        \"travelersGroup\": {\n            \"itemId\": \"3\",\n            \"name\": \"GROUP A\",\n            \"numberOfTravelers\": 3,\n            \"numberOfTravelersRemaining\": 1\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update (Type ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"JANE\",\n                \"surname\": \"DOE\",\n                \"type\": \"INFANT\",\n                \"passengerCode\": \"INF\",\n                \"birthDate\": \"2022-01-01\",\n                \"isGrouped\": true\n            },\n            {\n                \"givenName\": \"JILL\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true\n            }\n        ],\n        \"travelersGroup\": {\n            \"itemId\": \"3\",\n            \"name\": \"GROUP A\",\n            \"numberOfTravelers\": 3,\n            \"numberOfTravelersRemaining\": 1\n        }\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete (ADT + INF)",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PassengerDetailsRQ 3.4.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<PassengerDetailsRQ haltOnError=\"true\" ignoreOnError=\"true\" version=\"3.4.0\" xmlns=\"http://services.sabre.com/sp/pd/v3_4\">\r\n\t<TravelItineraryAddInfoRQ>\r\n\t\t<AgencyInfo>\r\n            <Ticketing TicketType=\"7TAW\"/>\r\n\t\t</AgencyInfo>\r\n\t\t<CustomerInfo>\r\n\t\t\t<ContactNumbers>\r\n\t\t\t\t<ContactNumber NameNumber=\"1.1\" Phone=\"817-555-1212\" PhoneUseType=\"H\"/>\r\n\t\t\t</ContactNumbers>\r\n\t\t\t<PersonName>\r\n\t\t\t\t<GroupInfo Name=\"GROUP A\" NumSeatsRemaining=\"3\"/>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"2.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JOE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"3.1\" PassengerType=\"ADT\">\r\n\t\t\t\t<GivenName>JANE</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n            <PersonName NameNumber=\"4.1\" PassengerType=\"INF\" Infant=\"true\">\r\n\t\t\t\t<GivenName>JILL</GivenName>\r\n\t\t\t\t<Surname>DOE</Surname>\r\n\t\t\t</PersonName>\r\n\t\t</CustomerInfo>\r\n\t</TravelItineraryAddInfoRQ>\r\n</PassengerDetailsRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirBookLLSRQ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n\r\n<OTA_AirBookRQ Version=\"2.2.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}T11:50\" ArrivalDateTime=\"{{start_date}}T12:10\" FlightNumber=\"{{flight_number}}\" NumberInParty=\"3\" ResBookDesigCode=\"Y\" Status=\"GK\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <MarketingAirline Code=\"{{airline_code}}\" FlightNumber=\"{{flight_number}}\"/>\r\n            <OperatingAirline Code=\"{{airline_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirBookRQ>\r\n\r\n{{footer}}\r\n"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EnhancedEndTransactionRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"            const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\r",
													"            pm.environment.set('pnr', pnr);\r",
													"        });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<EnhancedEndTransactionRQ version=\"1.0.0\" xmlns=\"http://services.sabre.com/sp/eet/v1\" xmlns:stlp=\"http://services.sabre.com/STL_Payload/v02_02\">\r\n    <EndTransaction Ind=\"true\"/>\r\n    <Source ReceivedFrom=\"SWS TEST\"/>\r\n</EnhancedEndTransactionRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetBooking - retrieve bookingSignature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "ModifyBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"contactInfo\": {\n            \"emails\": [\n                \"TRAVEL@SABRE.COM\"\n            ],\n            \"phones\": [\n                \"1-555-123-4567\",\n                \"817-555-1212-H-1.1\"\n            ]\n        },\n        \"travelers\": [\n            {\n                \"givenName\": \"JOE\",\n                \"surname\": \"DOE\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"isGrouped\": true,\n                \"phones\": [\n                    {\n                        \"number\": \"817-555-1212\",\n                        \"label\": \"H\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"modifyBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "GetBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
													"\r",
													"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
													"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
													"\r",
													"console.log(pm.environment.get('pnr') + \" <- PNR\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "U9PK",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "U9PK",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ 1.0.0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('airline_code', 'BA');",
									"pm.environment.set('from_airport_code', 'CDG');",
									"pm.environment.set('to_airport_code', 'LHR');",
									"",
									"console.log(\"airlineCode : \"+pm.environment.get('airline_code'));",
									"console.log(\"from_airport_code : \"+pm.environment.get('from_airport_code'));",
									"console.log(\"to_airport_code : \"+pm.environment.get('to_airport_code'));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "NDC modifications flows",
					"item": [
						{
							"name": "Modify phone",
							"item": [
								{
									"name": "Add phone",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"\r",
															"console.log(pm.environment.get('pnr') + \" <- PNR\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Orders View",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": \"{{pnr}}\"\r\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/orders/view",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"orders",
														"view"
													]
												}
											},
											"response": [
												{
													"name": "/v1/orders/view/1",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\"\r\n}"
														},
														"url": {
															"raw": "{{url}}/v1/orders/view/1",
															"host": [
																"{{url}}"
															],
															"path": [
																"v1",
																"orders",
																"view",
																"1"
															]
														}
													},
													"_postman_previewlanguage": "json",
													"header": [],
													"cookie": [],
													"body": "{\r\n    \"order\": {\r\n        \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\",\r\n        \"pnrLocator\": \"TOSGCZ\",\r\n        \"orderOwner\": \"1S\",\r\n        \"orderItems\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"externalId\": \"PoP98BD9F8A-6BD3-4A7D-953E-1-1\",\r\n                \"externalOrderRefId\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"creationDateTime\": \"2019-03-27T15:37:06\",\r\n                \"ticketingTimeLimit\": \"2019-04-19T20:37:00\",\r\n                \"fareDetails\": [\r\n                    {\r\n                        \"fareIndicatorCode\": \"0\",\r\n                        \"paxRefIds\": [\r\n                            \"Passenger1\"\r\n                        ],\r\n                        \"price\": {\r\n                            \"baseAmount\": {\r\n                                \"amount\": \"109.77\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"totalTaxAmount\": {\r\n                                \"amount\": \"36.83\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"taxBreakdowns\": [\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"2.37\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.86\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"fareComponents\": [\r\n                            {\r\n                                \"fareBasisCode\": \"GAA7TCBN\",\r\n                                \"fareBasisCityPair\": \"DENDFWUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"31.63\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"16.67\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"2.37\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            {\r\n                                \"fareBasisCode\": \"KAA3TCBN\",\r\n                                \"fareBasisCityPair\": \"DFWDENUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"78.14\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"20.16\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.86\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                \"price\": {\r\n                    \"totalAmount\": {\r\n                        \"amount\": \"146.60\",\r\n                        \"code\": \"USD\"\r\n                    },\r\n                    \"totalTaxAmount\": {}\r\n                },\r\n                \"services\": [\r\n                    {\r\n                        \"id\": \"1\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C70\"\r\n                    },\r\n                    {\r\n                        \"id\": \"2\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C50\"\r\n                    }\r\n                ],\r\n                \"offerItemId\": \"cg05grt8njtq6dou00-1-1\",\r\n                \"externalOfferItemId\": \"PoIP98BD9F8A-6BD3-4A7D-953E-1-1\"\r\n            }\r\n        ],\r\n        \"contactInfos\": [\r\n            {\r\n                \"id\": \"CI-1\",\r\n                \"phones\": [\r\n                    {\r\n                        \"number\": \"6069871234\"\r\n                    }\r\n                ],\r\n                \"emailAddresses\": [\r\n                    {\r\n                        \"address\": \"test@sabre.com\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"products\": [\r\n            {\r\n                \"id\": \"4e413d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-20T20:36:00\",\r\n                    \"arrivalDateTime\": \"2019-04-20T23:28:00\",\r\n                    \"departureAirport\": \"DEN\",\r\n                    \"arrivalAirport\": \"DFW\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"4e513d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-25T19:37:00\",\r\n                    \"arrivalDateTime\": \"2019-04-25T20:40:00\",\r\n                    \"departureAirport\": \"DFW\",\r\n                    \"arrivalAirport\": \"DEN\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            }\r\n        ],\r\n        \"passengers\": [\r\n            {\r\n                \"id\": \"Passenger1\",\r\n                \"typeCode\": \"ADT\",\r\n                \"contactInfoRefId\": \"CI-1\",\r\n                \"birthdate\": \"1977-03-01\",\r\n                \"givenName\": \"PAM\",\r\n                \"surname\": \"THOMPSON\"\r\n            }\r\n        ],\r\n        \"journeys\": [\r\n            {\r\n                \"id\": \"FGTIDRXRQS020NBXMETXXSI3352BEPI12CLVKV0DKR4D04ODADCNBTXZP\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C50\"\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"FGTIDINME45XTVC1WINPMVGNZ1NPIYKTGS4BDC0LO0JODPDOPQDGTWGN\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C70\"\r\n                ]\r\n            }\r\n        ],\r\n        \"segments\": [\r\n            {\r\n                \"id\": \"Isgm52C50\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"stationName\": \"Denver Intl Apt, US\",\r\n                    \"scheduledDateTime\": \"2019-04-20T20:36:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"scheduledDateTime\": \"2019-04-20T23:28:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 338\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"Isgm52C70\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"stationName\": \"Dallas Dallas/Fort Worth Intl Apt, US\",\r\n                    \"terminalName\": \"E\",\r\n                    \"scheduledDateTime\": \"2019-04-25T19:37:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"scheduledDateTime\": \"2019-04-25T20:40:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 1824\r\n                }\r\n            }\r\n        ],\r\n        \"priceClasses\": [\r\n            {\r\n                \"id\": \"BasicEconomy\",\r\n                \"code\": \"1_basiceco\",\r\n                \"name\": \"Basic Economy\"\r\n            }\r\n        ],\r\n        \"customerNumber\": {\r\n            \"number\": \"123456\"\r\n        },\r\n        \"paymentTimeLimit\": \"2019-04-19T20:37:00\",\r\n        \"externalOrders\": [\r\n            {\r\n                \"id\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"systemId\": \"UAD\",\r\n                \"externalOrderId\": \"1337155P2\",\r\n                \"bookingReferences\": [\r\n                    {\r\n                        \"id\": \"L4D79U\",\r\n                        \"carrierCode\": \"F1\"\r\n                    },\r\n                    {\r\n                        \"id\": \"MFFPXC\",\r\n                        \"carrierCode\": \"UAD\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"totalPrice\": {\r\n            \"totalAmount\": {\r\n                \"amount\": \"146.60\",\r\n                \"code\": \"USD\"\r\n            }\r\n        }\r\n    }\r\n}"
												}
											]
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n                \n        \"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"phones\": [\n                    {\n                        \"number\": \"1-111-123-123\",\n                        \"label\": \"M\"\n                    },\n                    {\n                        \"number\": \"+12-222-234-234\",\n                        \"label\": \"H\"\n                    },\n                    {\n                        \"number\": \"+12-555-555-555\",\n                        \"label\": \"C\"\n                    }\n                ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete phone",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"12-222-234-234\",\n                    \"label\": \"H\"\n                },\n                {\n                    \"number\": \"12-555-555-555\",\n                    \"label\": \"C\"\n                },\n                {\n                    \"number\": \"1-111-123-123\",\n                    \"label\": \"M\"\n                }\n            ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Orders View",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": \"{{pnr}}\"\r\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/orders/view",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"orders",
														"view"
													]
												}
											},
											"response": [
												{
													"name": "/v1/orders/view/1",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\"\r\n}"
														},
														"url": {
															"raw": "{{url}}/v1/orders/view/1",
															"host": [
																"{{url}}"
															],
															"path": [
																"v1",
																"orders",
																"view",
																"1"
															]
														}
													},
													"_postman_previewlanguage": "json",
													"header": [],
													"cookie": [],
													"body": "{\r\n    \"order\": {\r\n        \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\",\r\n        \"pnrLocator\": \"TOSGCZ\",\r\n        \"orderOwner\": \"1S\",\r\n        \"orderItems\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"externalId\": \"PoP98BD9F8A-6BD3-4A7D-953E-1-1\",\r\n                \"externalOrderRefId\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"creationDateTime\": \"2019-03-27T15:37:06\",\r\n                \"ticketingTimeLimit\": \"2019-04-19T20:37:00\",\r\n                \"fareDetails\": [\r\n                    {\r\n                        \"fareIndicatorCode\": \"0\",\r\n                        \"paxRefIds\": [\r\n                            \"Passenger1\"\r\n                        ],\r\n                        \"price\": {\r\n                            \"baseAmount\": {\r\n                                \"amount\": \"109.77\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"totalTaxAmount\": {\r\n                                \"amount\": \"36.83\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"taxBreakdowns\": [\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"2.37\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.86\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"fareComponents\": [\r\n                            {\r\n                                \"fareBasisCode\": \"GAA7TCBN\",\r\n                                \"fareBasisCityPair\": \"DENDFWUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"31.63\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"16.67\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"2.37\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            {\r\n                                \"fareBasisCode\": \"KAA3TCBN\",\r\n                                \"fareBasisCityPair\": \"DFWDENUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"78.14\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"20.16\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.86\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                \"price\": {\r\n                    \"totalAmount\": {\r\n                        \"amount\": \"146.60\",\r\n                        \"code\": \"USD\"\r\n                    },\r\n                    \"totalTaxAmount\": {}\r\n                },\r\n                \"services\": [\r\n                    {\r\n                        \"id\": \"1\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C70\"\r\n                    },\r\n                    {\r\n                        \"id\": \"2\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C50\"\r\n                    }\r\n                ],\r\n                \"offerItemId\": \"cg05grt8njtq6dou00-1-1\",\r\n                \"externalOfferItemId\": \"PoIP98BD9F8A-6BD3-4A7D-953E-1-1\"\r\n            }\r\n        ],\r\n        \"contactInfos\": [\r\n            {\r\n                \"id\": \"CI-1\",\r\n                \"phones\": [\r\n                    {\r\n                        \"number\": \"6069871234\"\r\n                    }\r\n                ],\r\n                \"emailAddresses\": [\r\n                    {\r\n                        \"address\": \"test@sabre.com\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"products\": [\r\n            {\r\n                \"id\": \"4e413d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-20T20:36:00\",\r\n                    \"arrivalDateTime\": \"2019-04-20T23:28:00\",\r\n                    \"departureAirport\": \"DEN\",\r\n                    \"arrivalAirport\": \"DFW\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"4e513d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-25T19:37:00\",\r\n                    \"arrivalDateTime\": \"2019-04-25T20:40:00\",\r\n                    \"departureAirport\": \"DFW\",\r\n                    \"arrivalAirport\": \"DEN\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            }\r\n        ],\r\n        \"passengers\": [\r\n            {\r\n                \"id\": \"Passenger1\",\r\n                \"typeCode\": \"ADT\",\r\n                \"contactInfoRefId\": \"CI-1\",\r\n                \"birthdate\": \"1977-03-01\",\r\n                \"givenName\": \"PAM\",\r\n                \"surname\": \"THOMPSON\"\r\n            }\r\n        ],\r\n        \"journeys\": [\r\n            {\r\n                \"id\": \"FGTIDRXRQS020NBXMETXXSI3352BEPI12CLVKV0DKR4D04ODADCNBTXZP\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C50\"\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"FGTIDINME45XTVC1WINPMVGNZ1NPIYKTGS4BDC0LO0JODPDOPQDGTWGN\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C70\"\r\n                ]\r\n            }\r\n        ],\r\n        \"segments\": [\r\n            {\r\n                \"id\": \"Isgm52C50\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"stationName\": \"Denver Intl Apt, US\",\r\n                    \"scheduledDateTime\": \"2019-04-20T20:36:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"scheduledDateTime\": \"2019-04-20T23:28:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 338\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"Isgm52C70\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"stationName\": \"Dallas Dallas/Fort Worth Intl Apt, US\",\r\n                    \"terminalName\": \"E\",\r\n                    \"scheduledDateTime\": \"2019-04-25T19:37:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"scheduledDateTime\": \"2019-04-25T20:40:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 1824\r\n                }\r\n            }\r\n        ],\r\n        \"priceClasses\": [\r\n            {\r\n                \"id\": \"BasicEconomy\",\r\n                \"code\": \"1_basiceco\",\r\n                \"name\": \"Basic Economy\"\r\n            }\r\n        ],\r\n        \"customerNumber\": {\r\n            \"number\": \"123456\"\r\n        },\r\n        \"paymentTimeLimit\": \"2019-04-19T20:37:00\",\r\n        \"externalOrders\": [\r\n            {\r\n                \"id\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"systemId\": \"UAD\",\r\n                \"externalOrderId\": \"1337155P2\",\r\n                \"bookingReferences\": [\r\n                    {\r\n                        \"id\": \"L4D79U\",\r\n                        \"carrierCode\": \"F1\"\r\n                    },\r\n                    {\r\n                        \"id\": \"MFFPXC\",\r\n                        \"carrierCode\": \"UAD\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"totalPrice\": {\r\n            \"totalAmount\": {\r\n                \"amount\": \"146.60\",\r\n                \"code\": \"USD\"\r\n            }\r\n        }\r\n    }\r\n}"
												}
											]
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {\n        \"travelers\": [\n            {\n                \"id\": \"{{price_passenger_id3}}\",\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"12-222-234-234\",\n                        \"label\": \"H\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"{{price_passenger_id2}}\",\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"passengerCode\": \"ADT\"\n            },\n            {\n                \"id\": \"{{price_passenger_id1}}\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"passengerCode\": \"ADT\"\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update phone",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"1-555-123-4567\",\n                    \"label\": \"M\"\n                },\n                {\n                    \"number\": \"1-222-333-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"\r",
															"console.log(pm.environment.get('pnr') + \" <- PNR\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Orders View",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": \"{{pnr}}\"\r\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/orders/view",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"orders",
														"view"
													]
												}
											},
											"response": [
												{
													"name": "/v1/orders/view/1",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\"\r\n}"
														},
														"url": {
															"raw": "{{url}}/v1/orders/view/1",
															"host": [
																"{{url}}"
															],
															"path": [
																"v1",
																"orders",
																"view",
																"1"
															]
														}
													},
													"_postman_previewlanguage": "json",
													"header": [],
													"cookie": [],
													"body": "{\r\n    \"order\": {\r\n        \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\",\r\n        \"pnrLocator\": \"TOSGCZ\",\r\n        \"orderOwner\": \"1S\",\r\n        \"orderItems\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"externalId\": \"PoP98BD9F8A-6BD3-4A7D-953E-1-1\",\r\n                \"externalOrderRefId\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"creationDateTime\": \"2019-03-27T15:37:06\",\r\n                \"ticketingTimeLimit\": \"2019-04-19T20:37:00\",\r\n                \"fareDetails\": [\r\n                    {\r\n                        \"fareIndicatorCode\": \"0\",\r\n                        \"paxRefIds\": [\r\n                            \"Passenger1\"\r\n                        ],\r\n                        \"price\": {\r\n                            \"baseAmount\": {\r\n                                \"amount\": \"109.77\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"totalTaxAmount\": {\r\n                                \"amount\": \"36.83\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"taxBreakdowns\": [\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"2.37\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.86\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"fareComponents\": [\r\n                            {\r\n                                \"fareBasisCode\": \"GAA7TCBN\",\r\n                                \"fareBasisCityPair\": \"DENDFWUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"31.63\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"16.67\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"2.37\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            {\r\n                                \"fareBasisCode\": \"KAA3TCBN\",\r\n                                \"fareBasisCityPair\": \"DFWDENUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"78.14\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"20.16\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.86\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                \"price\": {\r\n                    \"totalAmount\": {\r\n                        \"amount\": \"146.60\",\r\n                        \"code\": \"USD\"\r\n                    },\r\n                    \"totalTaxAmount\": {}\r\n                },\r\n                \"services\": [\r\n                    {\r\n                        \"id\": \"1\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C70\"\r\n                    },\r\n                    {\r\n                        \"id\": \"2\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C50\"\r\n                    }\r\n                ],\r\n                \"offerItemId\": \"cg05grt8njtq6dou00-1-1\",\r\n                \"externalOfferItemId\": \"PoIP98BD9F8A-6BD3-4A7D-953E-1-1\"\r\n            }\r\n        ],\r\n        \"contactInfos\": [\r\n            {\r\n                \"id\": \"CI-1\",\r\n                \"phones\": [\r\n                    {\r\n                        \"number\": \"6069871234\"\r\n                    }\r\n                ],\r\n                \"emailAddresses\": [\r\n                    {\r\n                        \"address\": \"test@sabre.com\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"products\": [\r\n            {\r\n                \"id\": \"4e413d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-20T20:36:00\",\r\n                    \"arrivalDateTime\": \"2019-04-20T23:28:00\",\r\n                    \"departureAirport\": \"DEN\",\r\n                    \"arrivalAirport\": \"DFW\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"4e513d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-25T19:37:00\",\r\n                    \"arrivalDateTime\": \"2019-04-25T20:40:00\",\r\n                    \"departureAirport\": \"DFW\",\r\n                    \"arrivalAirport\": \"DEN\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            }\r\n        ],\r\n        \"passengers\": [\r\n            {\r\n                \"id\": \"Passenger1\",\r\n                \"typeCode\": \"ADT\",\r\n                \"contactInfoRefId\": \"CI-1\",\r\n                \"birthdate\": \"1977-03-01\",\r\n                \"givenName\": \"PAM\",\r\n                \"surname\": \"THOMPSON\"\r\n            }\r\n        ],\r\n        \"journeys\": [\r\n            {\r\n                \"id\": \"FGTIDRXRQS020NBXMETXXSI3352BEPI12CLVKV0DKR4D04ODADCNBTXZP\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C50\"\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"FGTIDINME45XTVC1WINPMVGNZ1NPIYKTGS4BDC0LO0JODPDOPQDGTWGN\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C70\"\r\n                ]\r\n            }\r\n        ],\r\n        \"segments\": [\r\n            {\r\n                \"id\": \"Isgm52C50\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"stationName\": \"Denver Intl Apt, US\",\r\n                    \"scheduledDateTime\": \"2019-04-20T20:36:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"scheduledDateTime\": \"2019-04-20T23:28:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 338\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"Isgm52C70\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"stationName\": \"Dallas Dallas/Fort Worth Intl Apt, US\",\r\n                    \"terminalName\": \"E\",\r\n                    \"scheduledDateTime\": \"2019-04-25T19:37:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"scheduledDateTime\": \"2019-04-25T20:40:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 1824\r\n                }\r\n            }\r\n        ],\r\n        \"priceClasses\": [\r\n            {\r\n                \"id\": \"BasicEconomy\",\r\n                \"code\": \"1_basiceco\",\r\n                \"name\": \"Basic Economy\"\r\n            }\r\n        ],\r\n        \"customerNumber\": {\r\n            \"number\": \"123456\"\r\n        },\r\n        \"paymentTimeLimit\": \"2019-04-19T20:37:00\",\r\n        \"externalOrders\": [\r\n            {\r\n                \"id\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"systemId\": \"UAD\",\r\n                \"externalOrderId\": \"1337155P2\",\r\n                \"bookingReferences\": [\r\n                    {\r\n                        \"id\": \"L4D79U\",\r\n                        \"carrierCode\": \"F1\"\r\n                    },\r\n                    {\r\n                        \"id\": \"MFFPXC\",\r\n                        \"carrierCode\": \"UAD\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"totalPrice\": {\r\n            \"totalAmount\": {\r\n                \"amount\": \"146.60\",\r\n                \"code\": \"USD\"\r\n            }\r\n        }\r\n    }\r\n}"
												}
											]
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n                \n        \"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"phones\": [\n                   {\n                    \"number\": \"1-555-123-4888\",\n                    \"label\": \"H\"\n                },\n                {\n                    \"number\": \"1-222-333-4999\",\n                    \"label\": \"B\"\n                }\n                ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Modify Travelers - birthdate",
							"item": [
								{
									"name": "update birthdate",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"\r",
															"console.log(pm.environment.get('pnr') + \" <- PNR\");"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Orders View",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": \"{{pnr}}\"\r\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/orders/view",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"orders",
														"view"
													]
												}
											},
											"response": [
												{
													"name": "/v1/orders/view/1",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\"\r\n}"
														},
														"url": {
															"raw": "{{url}}/v1/orders/view/1",
															"host": [
																"{{url}}"
															],
															"path": [
																"v1",
																"orders",
																"view",
																"1"
															]
														}
													},
													"_postman_previewlanguage": "json",
													"header": [],
													"cookie": [],
													"body": "{\r\n    \"order\": {\r\n        \"id\": \"4e54071d6c2d483c808f8a09f38f6bbc\",\r\n        \"pnrLocator\": \"TOSGCZ\",\r\n        \"orderOwner\": \"1S\",\r\n        \"orderItems\": [\r\n            {\r\n                \"id\": \"1\",\r\n                \"externalId\": \"PoP98BD9F8A-6BD3-4A7D-953E-1-1\",\r\n                \"externalOrderRefId\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"creationDateTime\": \"2019-03-27T15:37:06\",\r\n                \"ticketingTimeLimit\": \"2019-04-19T20:37:00\",\r\n                \"fareDetails\": [\r\n                    {\r\n                        \"fareIndicatorCode\": \"0\",\r\n                        \"paxRefIds\": [\r\n                            \"Passenger1\"\r\n                        ],\r\n                        \"price\": {\r\n                            \"baseAmount\": {\r\n                                \"amount\": \"109.77\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"totalTaxAmount\": {\r\n                                \"amount\": \"36.83\",\r\n                                \"code\": \"USD\"\r\n                            },\r\n                            \"taxBreakdowns\": [\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"2.37\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.86\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"US\",\r\n                                    \"description\": \"US Transportation Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"5.60\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"AY\",\r\n                                    \"description\": \"US September 11th Security Fee\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.50\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"XF\",\r\n                                    \"description\": \"US Passenger Facility Charge\"\r\n                                },\r\n                                {\r\n                                    \"amount\": {\r\n                                        \"amount\": \"4.20\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"countryCode\": \"US\",\r\n                                    \"taxCode\": \"ZP\",\r\n                                    \"description\": \"US Flight Segment Tax\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"fareComponents\": [\r\n                            {\r\n                                \"fareBasisCode\": \"GAA7TCBN\",\r\n                                \"fareBasisCityPair\": \"DENDFWUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"31.63\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"16.67\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"2.37\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            {\r\n                                \"fareBasisCode\": \"KAA3TCBN\",\r\n                                \"fareBasisCityPair\": \"DFWDENUA\",\r\n                                \"cabinTypeCode\": \"Y\",\r\n                                \"type\": \"X\",\r\n                                \"price\": {\r\n                                    \"baseAmount\": {\r\n                                        \"amount\": \"78.14\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"totalTaxAmount\": {\r\n                                        \"amount\": \"20.16\",\r\n                                        \"code\": \"USD\"\r\n                                    },\r\n                                    \"taxBreakdowns\": [\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.86\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"US\",\r\n                                            \"description\": \"US Transportation Tax\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"5.60\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"AY\",\r\n                                            \"description\": \"US September 11th Security Fee\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.50\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"XF\",\r\n                                            \"description\": \"US Passenger Facility Charge\"\r\n                                        },\r\n                                        {\r\n                                            \"amount\": {\r\n                                                \"amount\": \"4.20\",\r\n                                                \"code\": \"USD\"\r\n                                            },\r\n                                            \"countryCode\": \"US\",\r\n                                            \"taxCode\": \"ZP\",\r\n                                            \"description\": \"US Flight Segment Tax\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                \"price\": {\r\n                    \"totalAmount\": {\r\n                        \"amount\": \"146.60\",\r\n                        \"code\": \"USD\"\r\n                    },\r\n                    \"totalTaxAmount\": {}\r\n                },\r\n                \"services\": [\r\n                    {\r\n                        \"id\": \"1\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C70\"\r\n                    },\r\n                    {\r\n                        \"id\": \"2\",\r\n                        \"passengerRefId\": \"Passenger1\",\r\n                        \"segmentRefId\": \"Isgm52C50\"\r\n                    }\r\n                ],\r\n                \"offerItemId\": \"cg05grt8njtq6dou00-1-1\",\r\n                \"externalOfferItemId\": \"PoIP98BD9F8A-6BD3-4A7D-953E-1-1\"\r\n            }\r\n        ],\r\n        \"contactInfos\": [\r\n            {\r\n                \"id\": \"CI-1\",\r\n                \"phones\": [\r\n                    {\r\n                        \"number\": \"6069871234\"\r\n                    }\r\n                ],\r\n                \"emailAddresses\": [\r\n                    {\r\n                        \"address\": \"test@sabre.com\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"products\": [\r\n            {\r\n                \"id\": \"4e413d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-20T20:36:00\",\r\n                    \"arrivalDateTime\": \"2019-04-20T23:28:00\",\r\n                    \"departureAirport\": \"DEN\",\r\n                    \"arrivalAirport\": \"DFW\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"4e513d3d\",\r\n                \"airSegment\": {\r\n                    \"marketingCarrier\": {\r\n                        \"airlineCode\": \"UA\"\r\n                    },\r\n                    \"departureDateTime\": \"2019-04-25T19:37:00\",\r\n                    \"arrivalDateTime\": \"2019-04-25T20:40:00\",\r\n                    \"departureAirport\": \"DFW\",\r\n                    \"arrivalAirport\": \"DEN\",\r\n                    \"actionCode\": \"HK\"\r\n                }\r\n            }\r\n        ],\r\n        \"passengers\": [\r\n            {\r\n                \"id\": \"Passenger1\",\r\n                \"typeCode\": \"ADT\",\r\n                \"contactInfoRefId\": \"CI-1\",\r\n                \"birthdate\": \"1977-03-01\",\r\n                \"givenName\": \"PAM\",\r\n                \"surname\": \"THOMPSON\"\r\n            }\r\n        ],\r\n        \"journeys\": [\r\n            {\r\n                \"id\": \"FGTIDRXRQS020NBXMETXXSI3352BEPI12CLVKV0DKR4D04ODADCNBTXZP\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C50\"\r\n                ]\r\n            },\r\n            {\r\n                \"id\": \"FGTIDINME45XTVC1WINPMVGNZ1NPIYKTGS4BDC0LO0JODPDOPQDGTWGN\",\r\n                \"segmentRefIds\": [\r\n                    \"Isgm52C70\"\r\n                ]\r\n            }\r\n        ],\r\n        \"segments\": [\r\n            {\r\n                \"id\": \"Isgm52C50\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"stationName\": \"Denver Intl Apt, US\",\r\n                    \"scheduledDateTime\": \"2019-04-20T20:36:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"scheduledDateTime\": \"2019-04-20T23:28:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 338\r\n                }\r\n            },\r\n            {\r\n                \"id\": \"Isgm52C70\",\r\n                \"departure\": {\r\n                    \"locationCode\": \"DFW\",\r\n                    \"stationName\": \"Dallas Dallas/Fort Worth Intl Apt, US\",\r\n                    \"terminalName\": \"E\",\r\n                    \"scheduledDateTime\": \"2019-04-25T19:37:00\"\r\n                },\r\n                \"arrival\": {\r\n                    \"locationCode\": \"DEN\",\r\n                    \"scheduledDateTime\": \"2019-04-25T20:40:00\"\r\n                },\r\n                \"marketingCarrier\": {\r\n                    \"carrierCode\": \"UA\",\r\n                    \"carrierName\": \"United Airlines\",\r\n                    \"flightNumber\": 1824\r\n                }\r\n            }\r\n        ],\r\n        \"priceClasses\": [\r\n            {\r\n                \"id\": \"BasicEconomy\",\r\n                \"code\": \"1_basiceco\",\r\n                \"name\": \"Basic Economy\"\r\n            }\r\n        ],\r\n        \"customerNumber\": {\r\n            \"number\": \"123456\"\r\n        },\r\n        \"paymentTimeLimit\": \"2019-04-19T20:37:00\",\r\n        \"externalOrders\": [\r\n            {\r\n                \"id\": \"beb6cb29-77ae-4233-90a7-f307f7d099a6\",\r\n                \"systemId\": \"UAD\",\r\n                \"externalOrderId\": \"1337155P2\",\r\n                \"bookingReferences\": [\r\n                    {\r\n                        \"id\": \"L4D79U\",\r\n                        \"carrierCode\": \"F1\"\r\n                    },\r\n                    {\r\n                        \"id\": \"MFFPXC\",\r\n                        \"carrierCode\": \"UAD\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"totalPrice\": {\r\n            \"totalAmount\": {\r\n                \"amount\": \"146.60\",\r\n                \"code\": \"USD\"\r\n            }\r\n        }\r\n    }\r\n}"
												}
											]
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n\n                \n        \"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-07-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-08-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-09-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }]\n\t\t}\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Modify email",
							"item": [
								{
									"name": "Add email",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"travel@sabre.com\",\n                    \"travel2@sabre.com\",\n                    \"john@smith1.priv\",\n                    \"john@smith2.priv\",\n                    \"john@smith3.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"travel@sabre.com\",\n                    \"travel2@sabre.com\",\n                    \"jill@smith1.priv\",\n                    \"jill@smith2.priv\",\n                    \"jill@smith3.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"travel@sabre.com\",\n                    \"travel2@sabre.com\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update email",
									"item": [
										{
											"name": "REST Authorize",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Basic {{secret}}",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "grant_type=client_credentials"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v2/auth/token",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v2",
														"auth",
														"token"
													]
												},
												"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"john@smith1.priv\",\n                \"john@smith2.priv\",\n                \"john@smith3.priv\"\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"jill@smith1.priv\",\n                \"jill@smith2.priv\",\n                \"jill@smith3.priv\"\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"john@smith1.priv\",\n                    \"john@smith2.priv\",\n                    \"john@smith3.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"jill@smith1.priv\",\n                    \"jill@smith2.priv\",\n                    \"jill@smith3.priv\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"john@smith111.priv\",\n                \"john@smith222.priv\",\n                \"john@smith333.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"jill@smith551.priv\",\n                \"jill@smith662.priv\",\n                \"jill@smith773.priv\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ]\n        }\n    ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Modify identityDocuments",
							"item": [
								{
									"name": "Modify identityDocuments (PASSPORT, VISA, KTN, RN)",
									"item": [
										{
											"name": "Add identityDocuments (PASSPORT, VISA, KTN, RN)",
											"item": [
												{
													"name": "REST Authorize",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{secret}}",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=client_credentials"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v2/auth/token",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v2",
																"auth",
																"token"
															]
														},
														"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
																	"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "CreateBooking NDC",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "GetBooking - retrieve bookingSignature",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	"\r",
																	"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
																	"\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ],\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"0123456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2024-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"POL\",\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"VISA\",\n                        \"hostCountryCode\": \"US\",\n                        \"expiryDate\": \"2024-07-09\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\",\n                        \"issueDate\": \"2019-07-09\"\n                    },\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"REDRESS_NUMBER\",\n                        \"issuingCountryCode\": \"NL\"\n                    },\n                    {\n                        \"documentNumber\": \"67676767\",\n                        \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                        \"issuingCountryCode\": \"US\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												}
											]
										},
										{
											"name": "Update identityDocuments (PASSPORT, VISA, KTN, RN)",
											"item": [
												{
													"name": "REST Authorize",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{secret}}",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=client_credentials"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v2/auth/token",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v2",
																"auth",
																"token"
															]
														},
														"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
																	"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "CreateBooking NDC",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"0123456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2024-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"VISA\",\n                        \"hostCountryCode\": \"US\",\n                        \"expiryDate\": \"2024-07-09\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\",\n                        \"issueDate\": \"2019-07-09\"\n                    },\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"REDRESS_NUMBER\",\n                        \"issuingCountryCode\": \"NL\"\n                    },\n                    {\n                        \"documentNumber\": \"67676767\",\n                        \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                        \"issuingCountryCode\": \"US\"\n                    }\n                ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "GetBooking - retrieve bookingSignature",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	"\r",
																	"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
																	"\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ],\n                \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"9993456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"Johnas\",\n                        \"surname\": \"Smithas\",\n                        \"birthDate\": \"1981-12-02\",\n                        \"gender\": \"MALE\"\n                    },\n                    {\n                        \"documentNumber\": \"12399999999\",\n                        \"documentType\": \"VISA\",\n                        \"expiryDate\": \"2025-07-09\",\n                        \"hostCountryCode\": \"US\",\n                        \"issueDate\": \"2019-07-09\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\"\n                    },\n                    {\n                        \"documentNumber\": \"11887766\",\n                        \"documentType\": \"REDRESS_NUMBER\",\n                        \"issuingCountryCode\": \"NL\"\n                    },\n                    {\n                        \"documentNumber\": \"11676767\",\n                        \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                        \"issuingCountryCode\": \"US\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												}
											]
										},
										{
											"name": "Delete identityDocuments (PASSPORT, VISA, KTN, RN)",
											"item": [
												{
													"name": "REST Authorize",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{secret}}",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=client_credentials"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v2/auth/token",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v2",
																"auth",
																"token"
															]
														},
														"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
																	"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "CreateBooking NDC",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                    {\n                        \"documentNumber\": \"0123456789\",\n                        \"documentType\": \"PASSPORT\",\n                        \"expiryDate\": \"2024-07-09\",\n                        \"issuingCountryCode\": \"US\",\n                        \"residenceCountryCode\": \"US\",\n                        \"givenName\": \"John\",\n                        \"surname\": \"Smith\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\"\n                    },\n                    {\n                        \"documentNumber\": \"99999999999\",\n                        \"documentType\": \"VISA\",\n                        \"hostCountryCode\": \"US\",\n                        \"expiryDate\": \"2024-07-09\",\n                        \"birthDate\": \"1980-12-02\",\n                        \"gender\": \"MALE\",\n                        \"issueDate\": \"2019-07-09\"\n                    },\n                    {\n                        \"documentNumber\": \"99887766\",\n                        \"documentType\": \"REDRESS_NUMBER\",\n                        \"issuingCountryCode\": \"NL\"\n                    },\n                    {\n                        \"documentNumber\": \"67676767\",\n                        \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                        \"issuingCountryCode\": \"US\"\n                    }\n                ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "GetBooking - retrieve bookingSignature",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	"\r",
																	"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
																	"\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"99999999999\",\n                    \"documentType\": \"VISA\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"hostCountryCode\": \"US\",\n                    \"issueDate\": \"2019-07-09\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                },\n                {\n                    \"documentNumber\": \"67676767\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"99999999999\",\n                    \"documentType\": \"VISA\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"hostCountryCode\": \"US\",\n                    \"issueDate\": \"2019-07-09\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"99887766\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                },\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Modify identityDocuments (SFPD)",
									"item": [
										{
											"name": "Add SFPD",
											"item": [
												{
													"name": "REST Authorize",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{secret}}",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=client_credentials"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v2/auth/token",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v2",
																"auth",
																"token"
															]
														},
														"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
																	"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "CreateBooking NDC",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "GetBooking - retrieve bookingSignature",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	"\r",
																	"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
																	"\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ],\n                \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n                ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												}
											]
										},
										{
											"name": "Update (SFPD)",
											"item": [
												{
													"name": "REST Authorize",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{secret}}",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=client_credentials"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v2/auth/token",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v2",
																"auth",
																"token"
															]
														},
														"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
																	"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "CreateBooking NDC",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "GetBooking - retrieve bookingSignature",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	"\r",
																	"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
																	"\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n\"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"FEMALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ]\n        }\n    ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												}
											]
										},
										{
											"name": "Delete (SFPD)",
											"item": [
												{
													"name": "REST Authorize",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{secret}}",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "grant_type=client_credentials"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v2/auth/token",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v2",
																"auth",
																"token"
															]
														},
														"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
																	"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "CreateBooking NDC",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id3}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id2}}\",\n\t\t\t\"givenName\": \"Jill\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1971-02-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"id\": \"{{price_passenger_id1}}\",\n\t\t\t\"givenName\": \"Jack\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1972-03-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\": {\n        \"phones\": [\n            \"+123456\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "GetBooking - retrieve bookingSignature",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"var jsonData = JSON.parse(responseBody);\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	"\r",
																	"pm.environment.set('flightItemId', jsonData.flights[0].itemId);\r",
																	"\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"name": "Content-Type",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "U9PK",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "U9PK",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"type\": \"ADULT\",\n            \"passengerCode\": \"ADT\",\n            \"phones\": [\n                {\n                    \"number\": \"123456\"\n                }\n            ]\n            },\n            {\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            },\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"phones\": [\n                    {\n                        \"number\": \"123456\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Modify Loyalty",
							"item": [
								{
									"name": "Add",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v4 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"id\": \"{{price_passenger_id3}}\",\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"age\": 53,\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"35944233\"\n                    },\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54511765\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"{{price_passenger_id2}}\",\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"passengerCode\": \"ADT\",\n                \"age\": 52,\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"41062655\"\n                    },\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"96176721\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"{{price_passenger_id1}}\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    },\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"85451115\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"const expectedTravelers =  [\r",
															"        {\r",
															"            \"givenName\": \"John\",\r",
															"            \"surname\": \"Smith\",\r",
															"            \"birthDate\": \"1970-01-23\",\r",
															"            \"type\": \"ADULT\",\r",
															"            \"passengerCode\": \"ADT\",\r",
															"            \"phones\": [\r",
															"                {\r",
															"                    \"number\": \"123456\"\r",
															"                }\r",
															"            ],\r",
															"            \"loyaltyPrograms\": [\r",
															"                {\r",
															"                    \"supplierCode\": \"LO\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"35944233\"\r",
															"                },\r",
															"                {\r",
															"                    \"supplierCode\": \"UA\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"54511765\"\r",
															"                }\r",
															"            ]\r",
															"        },\r",
															"        {\r",
															"            \"givenName\": \"Jill\",\r",
															"            \"surname\": \"Smith\",\r",
															"            \"birthDate\": \"1971-02-23\",\r",
															"            \"type\": \"ADULT\",\r",
															"            \"passengerCode\": \"ADT\",\r",
															"            \"phones\": [\r",
															"                {\r",
															"                    \"number\": \"123456\"\r",
															"                }\r",
															"            ],\r",
															"            \"loyaltyPrograms\": [\r",
															"                {\r",
															"                    \"supplierCode\": \"LO\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"41062655\"\r",
															"                },\r",
															"                {\r",
															"                    \"supplierCode\": \"UA\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"96176721\"\r",
															"                }\r",
															"            ]\r",
															"        },\r",
															"        {\r",
															"            \"givenName\": \"Jack\",\r",
															"            \"surname\": \"Smith\",\r",
															"            \"birthDate\": \"1972-03-23\",\r",
															"            \"type\": \"ADULT\",\r",
															"            \"passengerCode\": \"ADT\",\r",
															"            \"phones\": [\r",
															"                {\r",
															"                    \"number\": \"123456\"\r",
															"                }\r",
															"            ],\r",
															"            \"loyaltyPrograms\": [\r",
															"                {\r",
															"                    \"supplierCode\": \"LO\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"54322111\"\r",
															"                },\r",
															"                {\r",
															"                    \"supplierCode\": \"UA\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"85451115\"\r",
															"                }\r",
															"            ]\r",
															"        }\r",
															"    ];\r",
															"\r",
															"pm.test(\"Assert loyalty are added\", function () {\r",
															"    pm.expect(jsonData.travelers).to.eql(expectedTravelers);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v4 (Stateless ATK) SYD LAX AA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n                        {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"JACK@SABRE.COM\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"576457457\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"54322111\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"JACK@SABRE.COM\"\n        ],\n        \"phones\": [\n            \"576457457\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n            \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"const expectedTraveler = [\r",
															"            {\r",
															"                \"givenName\": \"Jack\",\r",
															"                \"surname\": \"Smith\",\r",
															"                \"birthDate\": \"1972-03-23\",\r",
															"                \"type\": \"ADULT\",\r",
															"                \"passengerCode\": \"ADT\",\r",
															"                \"emails\": [\r",
															"                    \"JACK@SABRE.COM\"\r",
															"                ],\r",
															"                \"phones\": [\r",
															"                    {\r",
															"                        \"number\": \"576457457\"\r",
															"                    }\r",
															"                ]\r",
															"            }\r",
															"        ]\r",
															"\r",
															"pm.test(\"Assert loyalty was deleted\", function () {\r",
															"    pm.expect(jsonData.travelers).to.eql(expectedTraveler);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SYD LAX AA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n                        {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"JACK@SABRE.COM\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"576457457\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"54322111\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"JACK@SABRE.COM\"\n        ],\n        \"phones\": [\n            \"576457457\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"const expectedTraveler = [\r",
															"            {\r",
															"                \"givenName\": \"Jack\",\r",
															"                \"surname\": \"Smith\",\r",
															"                \"birthDate\": \"1972-03-23\",\r",
															"                \"type\": \"ADULT\",\r",
															"                \"passengerCode\": \"ADT\",\r",
															"                \"emails\": [\r",
															"                    \"JACK@SABRE.COM\"\r",
															"                ],\r",
															"                \"phones\": [\r",
															"                    {\r",
															"                        \"number\": \"576457457\"\r",
															"                    }\r",
															"                ],\r",
															"                \"loyaltyPrograms\": [\r",
															"                    {\r",
															"                        \"supplierCode\": \"UA\",\r",
															"                        \"programType\": \"FREQUENT_FLYER\",\r",
															"                        \"programNumber\": \"54322111\"\r",
															"                    }\r",
															"                ]\r",
															"            }\r",
															"        ]\r",
															"\r",
															"pm.test(\"Assert loyalty was updated\", function () {\r",
															"    pm.expect(jsonData.travelers).to.eql(expectedTraveler);\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Modify OTH segment",
							"item": [
								{
									"name": "Add OTH",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA \",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//add retentionEndDate and retentionLabel\r",
															"jsonData.retentionEndDate = pm.environment.get('retentionDate1');\r",
															"jsonData.retentionLabel = \"Retention label text\";\r",
															"\r",
															"pm.environment.set('getBookingWithRetentionEndDateAndLabel', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithRetentionEndDateAndLabel}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Update OTH",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA \",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"retentionEndDate\": \"{{retentionDate1}}\",\n    \"retentionLabel\": \"Retention label text\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"//updadate retentionEndDate and retentionLabel\r",
															"jsonData.retentionEndDate = pm.environment.get('retentionDate2');\r",
															"jsonData.retentionLabel = \"Updated retention label text 123\";\r",
															"\r",
															"pm.environment.set('getBookingWithRetentionEndDateAndLabelUpdated', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithRetentionEndDateAndLabelUpdated}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete OTH",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA \",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"retentionEndDate\": \"{{retentionDate1}}\",\n    \"retentionLabel\": \"Retention label text\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - prepare test data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());\r",
															"\r",
															"\r",
															"//remove retentionEndDate and retentionLabel\r",
															"delete jsonData.retentionEndDate;\r",
															"delete jsonData.retentionLabel;\r",
															"\r",
															"pm.environment.set('getBookingWithoutRetentionEndDateAndLabel', JSON.stringify(jsonData));\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {{getBookingResponseBody}},\n    \"after\": {{getBookingWithoutRetentionEndDateAndLabel}},\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ 1.0.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
													"options": {
														"raw": {
															"language": "xml"
														}
													}
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const moment = require('moment');",
											"",
											"const retentionDate1 = moment().add(30, 'day').format(\"YYYY-MM-DD\");",
											"const retentionDate2 = moment().add(35, 'day').format(\"YYYY-MM-DD\");",
											"const retentionDate3 = moment().add(40, 'day').format(\"YYYY-MM-DD\");",
											"pm.environment.set('retentionDate1', retentionDate1);",
											"pm.environment.set('retentionDate2', retentionDate2);",
											"pm.environment.set('retentionDate3', retentionDate3);"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Modify seats",
							"item": [
								{
									"name": "Single traveler one way",
									"item": [
										{
											"name": "Add, update then delete",
											"item": [
												{
													"name": "SessionCreateRQ 1.0.0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml"
															},
															{
																"key": "",
																"value": "",
																"type": "default",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ADL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 1\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "createBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
																	"    pm.response.to.have.header(\"x-request-id\");\r",
																	"    pm.response.to.have.header(\"ConversationId\");\r",
																	"})"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\t\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
																	"\r",
																	"const paidOffers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems\r",
																	"    .filter(offer => offer.unitPrice.totalAmount.amount != 0)\r",
																	"    .map(offer => offer.offerItemID);\r",
																	"\r",
																	"let seatCounter = 1;\r",
																	"\r",
																	"seatRows.some(row => row.seats.some(seat => {\r",
																	"    if (isValidSeat(seat) && paidOffers.includes(seat.offerItemRefIDs[0])) {\r",
																	"        const validOffers = seat.offerItemRefIDs.sort();\r",
																	"        pm.environment.set(`seat_column_passenger_${seatCounter}`, seat.column);\r",
																	"        pm.environment.set(`seat_row_passenger_${seatCounter}`, row.row);\r",
																	"        pm.environment.set(`seat_offer${seatCounter}`, validOffers[seatCounter - 1]);\r",
																	"        seatCounter--;\r",
																	"        console.log(\"Seat  \" + row.row + seat.column + \" saved!\");\r",
																	"    }\r",
																	"    return seatCounter == 0;\r",
																	"}));\r",
																	"\r",
																	"if (seatCounter == 0) {\r",
																	"    console.log(\"All seat data saved!\");\r",
																	"}\r",
																	"\r",
																	"function isValidSeat(seat) {\r",
																	"    return seat.characteristics.every(char => char.code != \"1\" && char.code != \"1D\" && seat.occupationStatusCode == \"F\");\r",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - add seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bookingSignature\": \"{{bookingSignature}}\",\n  \"confirmationId\": \"{{pnr}}\",\n  \"retrieveBooking\": true,\n  \"receivedFrom\": \"Booking Management API testing\",\n  \"before\": {},\n  \"after\": {\n    \"flights\": [\n      {\n        \"seats\": [\n          {\n            \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\",\n            \"offerItemId\": \"{{seat_offer1}}\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
																	"\r",
																	"const paidOffers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems\r",
																	"    .filter(offer => offer.unitPrice.totalAmount.amount != 0)\r",
																	"    .map(offer => offer.offerItemID);\r",
																	"\r",
																	"let seatCounter = 1;\r",
																	"\r",
																	"seatRows.some(row => row.seats.some(seat => {\r",
																	"    if (isValidSeat(seat) && paidOffers.includes(seat.offerItemRefIDs[0])) {\r",
																	"        const validOffers = seat.offerItemRefIDs.sort();\r",
																	"        pm.environment.set(`update_seat_column_passenger_${seatCounter}`, seat.column);\r",
																	"        pm.environment.set(`update_seat_row_passenger_${seatCounter}`, row.row);\r",
																	"        pm.environment.set(`update_seat_offer${seatCounter}`, validOffers[seatCounter - 1]);\r",
																	"        seatCounter--;\r",
																	"        console.log(\"Seat  \" + row.row + seat.column + \" saved!\");\r",
																	"    }\r",
																	"    return seatCounter == 0;\r",
																	"}));\r",
																	"\r",
																	"if (seatCounter == 0) {\r",
																	"    console.log(\"All seat data saved!\");\r",
																	"}\r",
																	"\r",
																	"function isValidSeat(seat) {\r",
																	"    return seat.characteristics.every(char => char.code != \"1\" && char.code != \"1D\" && seat.occupationStatusCode == \"F\");\r",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "ModifyBooking - update seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n            \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{update_seat_row_passenger_1}}{{update_seat_column_passenger_1}}\",\n                        \"offerItemId\": \"{{update_seat_offer1}}\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - delete seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{update_seat_row_passenger_1}}{{update_seat_column_passenger_1}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {}\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Cancel Booking - cancelAll",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"cancelBooking"
															]
														}
													},
													"response": []
												},
												{
													"name": "SessionCloseRQ 1.0.0",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Single traveler three flights",
									"item": [
										{
											"name": "Add, update then delete",
											"item": [
												{
													"name": "SessionCreateRQ 1.0.0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml"
															},
															{
																"key": "",
																"value": "",
																"type": "default",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);"
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ADL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{in_between_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"BNE\"\n                },\n                \"RPH\": \"1\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"BNE\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"ADL\"\n                },\n                \"RPH\": \"2\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\",\n                    \"PreferLevel\": \"Preferred\"\n                },\n                {\n                    \"Code\": \"AA\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 1\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "createBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
																	"    pm.response.to.have.header(\"x-request-id\");\r",
																	"    pm.response.to.have.header(\"ConversationId\");\r",
																	"})"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"extractPaidSeatsWithUniquePaxSegmentRefID(JSON.parse(responseBody));\r",
																	"\r",
																	"function extractPaidSeatsWithUniquePaxSegmentRefID(jsonData) {\r",
																	"    const usedPaxSegmentRefIDs = new Set();\r",
																	"\r",
																	"    const offerItems = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
																	"    const seatMaps = jsonData.response.seatMaps;\r",
																	"    let seatCounter = 1;\r",
																	"    \r",
																	"    offerItems.forEach(offerItem => {\r",
																	"        const amount = offerItem.unitPrice.totalAmount.amount;\r",
																	"        if (amount > 0) {\r",
																	"            const offerItemID = offerItem.offerItemID;\r",
																	"            const seatNumber = findSeatNumberForOfferItem(seatMaps, offerItemID);\r",
																	"            const paxSegmentRefID = offerItem.eligibility.flightAssociations.paxSegmentRefID[0];\r",
																	"            if (seatNumber && !usedPaxSegmentRefIDs.has(paxSegmentRefID)) {\r",
																	"                const seat = findSeat(seatMaps, offerItemID);\r",
																	"                if (seat && seat.occupationStatusCode == \"F\") {\r",
																	"                pm.environment.set(`seatNumber${seatCounter}`, seatNumber);\r",
																	"                pm.environment.set(`offerItemID${seatCounter}`, offerItemID);\r",
																	"                console.log(\"Seats: \" + seatNumber + \" and offerItedId: \" + offerItemID + \" saved!\");\r",
																	"                seatCounter++;\r",
																	"                    usedPaxSegmentRefIDs.add(paxSegmentRefID);\r",
																	"                }\r",
																	"            }\r",
																	"        }\r",
																	"    });\r",
																	"\r",
																	"}\r",
																	"\r",
																	"function findSeatNumberForOfferItem(seatMaps, offerItemID) {\r",
																	"    for (const seatMap of seatMaps) {\r",
																	"        for (const cabinCompartment of seatMap.cabinCompartments) {\r",
																	"            for (const seatRow of cabinCompartment.seatRows) {\r",
																	"                for (const seat of seatRow.seats) {\r",
																	"                    if (seat.offerItemRefIDs.includes(offerItemID)) {\r",
																	"                        return `${seatRow.row}${seat.column}`;\r",
																	"                    }\r",
																	"                }\r",
																	"            }\r",
																	"        }\r",
																	"    }\r",
																	"    return null;\r",
																	"}\r",
																	"\r",
																	"function findSeat(seatMaps, offerItemID) {\r",
																	"    for (const seatMap of seatMaps) {\r",
																	"        for (const cabinCompartment of seatMap.cabinCompartments) {\r",
																	"            for (const seatRow of cabinCompartment.seatRows) {\r",
																	"                for (const seat of seatRow.seats) {\r",
																	"                    if (seat.offerItemRefIDs.includes(offerItemID)) {\r",
																	"                        return seat;\r",
																	"                    }\r",
																	"                }\r",
																	"            }\r",
																	"        }\r",
																	"    }\r",
																	"    return null;\r",
																	"}\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - add seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {},\n    \"after\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seatNumber1}}\",\n                        \"offerItemId\": \"{{offerItemID1}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seatNumber2}}\",\n                        \"offerItemId\": \"{{offerItemID2}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seatNumber3}}\",\n                        \"offerItemId\": \"{{offerItemID3}}\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"extractPaidSeatsWithUniquePaxSegmentRefID(JSON.parse(responseBody));\r",
																	"\r",
																	"function extractPaidSeatsWithUniquePaxSegmentRefID(jsonData) {\r",
																	"    const usedPaxSegmentRefIDs = new Set();\r",
																	"\r",
																	"    const offerItems = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
																	"    const seatMaps = jsonData.response.seatMaps;\r",
																	"    let seatCounter = 1;\r",
																	"    \r",
																	"    offerItems.forEach(offerItem => {\r",
																	"        const amount = offerItem.unitPrice.totalAmount.amount;\r",
																	"        if (amount > 0) {\r",
																	"            const offerItemID = offerItem.offerItemID;\r",
																	"            const seatNumber = findSeatNumberForOfferItem(seatMaps, offerItemID);\r",
																	"            const paxSegmentRefID = offerItem.eligibility.flightAssociations.paxSegmentRefID[0];\r",
																	"            if (seatNumber && !usedPaxSegmentRefIDs.has(paxSegmentRefID)) {\r",
																	"                const seat = findSeat(seatMaps, offerItemID);\r",
																	"                if (seat && seat.occupationStatusCode == \"F\") {\r",
																	"                pm.environment.set(`updatedSeatNumber${seatCounter}`, seatNumber);\r",
																	"                pm.environment.set(`updatedOfferItemID${seatCounter}`, offerItemID);\r",
																	"                console.log(\"Seats: \" + seatNumber + \" and offerItedId: \" + offerItemID + \" saved!\");\r",
																	"                seatCounter++;\r",
																	"                    usedPaxSegmentRefIDs.add(paxSegmentRefID);\r",
																	"                }\r",
																	"            }\r",
																	"        }\r",
																	"    });\r",
																	"\r",
																	"}\r",
																	"\r",
																	"function findSeatNumberForOfferItem(seatMaps, offerItemID) {\r",
																	"    for (const seatMap of seatMaps) {\r",
																	"        for (const cabinCompartment of seatMap.cabinCompartments) {\r",
																	"            for (const seatRow of cabinCompartment.seatRows) {\r",
																	"                for (const seat of seatRow.seats) {\r",
																	"                    if (seat.offerItemRefIDs.includes(offerItemID)) {\r",
																	"                        return `${seatRow.row}${seat.column}`;\r",
																	"                    }\r",
																	"                }\r",
																	"            }\r",
																	"        }\r",
																	"    }\r",
																	"    return null;\r",
																	"}\r",
																	"\r",
																	"function findSeat(seatMaps, offerItemID) {\r",
																	"    for (const seatMap of seatMaps) {\r",
																	"        for (const cabinCompartment of seatMap.cabinCompartments) {\r",
																	"            for (const seatRow of cabinCompartment.seatRows) {\r",
																	"                for (const seat of seatRow.seats) {\r",
																	"                    if (seat.offerItemRefIDs.includes(offerItemID)) {\r",
																	"                        return seat;\r",
																	"                    }\r",
																	"                }\r",
																	"            }\r",
																	"        }\r",
																	"    }\r",
																	"    return null;\r",
																	"}\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "ModifyBooking - update seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seatNumber1}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seatNumber2}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seatNumber3}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updatedSeatNumber1}}\",\n                        \"offerItemId\": \"{{updatedOfferItemID1}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updatedSeatNumber2}}\",\n                        \"offerItemId\": \"{{updatedOfferItemID2}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updatedSeatNumber3}}\",\n                        \"offerItemId\": \"{{updatedOfferItemID3}}\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - delete seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updatedSeatNumber1}}\",\n                        \"offerItemId\": \"{{updatedOfferItemID1}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updatedSeatNumber2}}\",\n                        \"offerItemId\": \"{{updatedOfferItemID2}}\"\n                    }\n                ]\n            },\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updatedSeatNumber3}}\",\n                        \"offerItemId\": \"{{updatedOfferItemID3}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {},\n            {},\n            {}\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{modifyBooking_endpoint}}",
															"host": [
																"{{modifyBooking_endpoint}}"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "SessionCloseRQ 1.0.0",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								},
								{
									"name": "Two travelers - one way",
									"item": [
										{
											"name": "Add",
											"item": [
												{
													"name": "SessionCreateRQ 1.0.0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml"
															},
															{
																"key": "",
																"value": "",
																"type": "default",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ADL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "createBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
																	"    pm.response.to.have.header(\"x-request-id\");\r",
																	"    pm.response.to.have.header(\"ConversationId\");\r",
																	"})"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
																	"\r",
																	"const paidOffers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems\r",
																	"    .filter(offer => offer.unitPrice.totalAmount.amount != 0)\r",
																	"    .map(offer => offer.offerItemID);\r",
																	"\r",
																	"let seatCounter = 2;\r",
																	"\r",
																	"seatRows.some(row => row.seats.some(seat => {\r",
																	"    if (isValidSeat(seat) && paidOffers.includes(seat.offerItemRefIDs[0])) {\r",
																	"        const validOffers = seat.offerItemRefIDs.sort();\r",
																	"        pm.environment.set(`seat_column_passenger_${seatCounter}`, seat.column);\r",
																	"        pm.environment.set(`seat_row_passenger_${seatCounter}`, row.row);\r",
																	"        pm.environment.set(`seat_offer${seatCounter}`, validOffers[seatCounter - 1]);\r",
																	"        seatCounter--;\r",
																	"        console.log(\"Seat  \" + row.row + seat.column + \" saved!\");\r",
																	"    }\r",
																	"    return seatCounter == 0;\r",
																	"}));\r",
																	"\r",
																	"if (seatCounter == 0) {\r",
																	"    console.log(\"All seat data saved!\");\r",
																	"}\r",
																	"\r",
																	"function isValidSeat(seat) {\r",
																	"    return seat.characteristics.every(char => char.code != \"1\" && char.code != \"1D\" && seat.occupationStatusCode == \"F\");\r",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - add seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bookingSignature\": \"{{bookingSignature}}\",\n  \"confirmationId\": \"{{pnr}}\",\n  \"retrieveBooking\": true,\n  \"receivedFrom\": \"Booking Management API testing\",\n  \"before\": {},\n  \"after\": {\n    \"flights\": [\n      {\n        \"seats\": [\n          {\n            \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\",\n            \"offerItemId\": \"{{seat_offer1}}\"\n          },\n          {\n            \"number\": \"{{seat_row_passenger_2}}{{seat_column_passenger_2}}\",\n            \"offerItemId\": \"{{seat_offer2}}\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "SessionCloseRQ 1.0.0",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Delete",
											"item": [
												{
													"name": "SessionCreateRQ 1.0.0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml"
															},
															{
																"key": "",
																"value": "",
																"type": "default",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ADL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "createBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
																	"    pm.response.to.have.header(\"x-request-id\");\r",
																	"    pm.response.to.have.header(\"ConversationId\");\r",
																	"})"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
																	"\r",
																	"const paidOffers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems\r",
																	"    .filter(offer => offer.unitPrice.totalAmount.amount != 0)\r",
																	"    .map(offer => offer.offerItemID);\r",
																	"\r",
																	"let seatCounter = 2;\r",
																	"\r",
																	"seatRows.some(row => row.seats.some(seat => {\r",
																	"    if (isValidSeat(seat) && paidOffers.includes(seat.offerItemRefIDs[0])) {\r",
																	"        const validOffers = seat.offerItemRefIDs.sort();\r",
																	"        pm.environment.set(`seat_column_passenger_${seatCounter}`, seat.column);\r",
																	"        pm.environment.set(`seat_row_passenger_${seatCounter}`, row.row);\r",
																	"        pm.environment.set(`seat_offer${seatCounter}`, validOffers[seatCounter - 1]);\r",
																	"        seatCounter--;\r",
																	"        console.log(\"Seat  \" + row.row + seat.column + \" saved!\");\r",
																	"    }\r",
																	"    return seatCounter == 0;\r",
																	"}));\r",
																	"\r",
																	"if (seatCounter == 0) {\r",
																	"    console.log(\"All seat data saved!\");\r",
																	"}\r",
																	"\r",
																	"function isValidSeat(seat) {\r",
																	"    return seat.characteristics.every(char => char.code != \"1\" && char.code != \"1D\" && seat.occupationStatusCode == \"F\");\r",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - add seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bookingSignature\": \"{{bookingSignature}}\",\n  \"confirmationId\": \"{{pnr}}\",\n  \"retrieveBooking\": true,\n  \"receivedFrom\": \"Booking Management API testing\",\n  \"before\": {},\n  \"after\": {\n    \"flights\": [\n      {\n        \"seats\": [\n          {\n            \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\",\n            \"offerItemId\": \"{{seat_offer1}}\"\n          },\n          {\n            \"number\": \"{{seat_row_passenger_2}}{{seat_column_passenger_2}}\",\n            \"offerItemId\": \"{{seat_offer2}}\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - delete seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\"\n                    },\n                    {\n                        \"number\": \"{{seat_row_passenger_2}}{{seat_column_passenger_2}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {\n                \"seats\": []\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "SessionCloseRQ 1.0.0",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Update",
											"item": [
												{
													"name": "SessionCreateRQ 1.0.0",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml"
															},
															{
																"key": "",
																"value": "",
																"type": "default",
																"disabled": true
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const itinNumber = 0;",
																	"",
																	"var jsonData = JSON.parse(responseBody);",
																	"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
																	"",
																	"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
																	"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
																	"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
																	"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
																	"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
																	"",
																	"",
																	"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
																	"",
																	"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
																	"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
																	"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
																	"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
																	"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
																	"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
																	"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
																	"",
																	" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
																	" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
																	" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "{{conv_id}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ADL\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MEL\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v4/offers/shop",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v4",
																"offers",
																"shop"
															]
														},
														"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
													},
													"response": []
												},
												{
													"name": "Offers Price /v1 (Stateless ATK)",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"\r",
																	"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
																	"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/price",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"price"
															]
														}
													},
													"response": []
												},
												{
													"name": "createBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"response is ok\", function () {\r",
																	"    pm.response.to.be.ok;\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must be valid and have a body\", function () {\r",
																	"    // this assertion also checks if a body  exists\r",
																	"     pm.response.to.be.json; \r",
																	"});\r",
																	"\r",
																	"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
																	"    pm.response.to.have.header(\"x-request-id\");\r",
																	"    pm.response.to.have.header(\"ConversationId\");\r",
																	"})"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"createBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
																	"\r",
																	"const paidOffers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems\r",
																	"    .filter(offer => offer.unitPrice.totalAmount.amount != 0)\r",
																	"    .map(offer => offer.offerItemID);\r",
																	"\r",
																	"let seatCounter = 2;\r",
																	"\r",
																	"seatRows.some(row => row.seats.some(seat => {\r",
																	"    if (isValidSeat(seat) && paidOffers.includes(seat.offerItemRefIDs[0])) {\r",
																	"        const validOffers = seat.offerItemRefIDs.sort();\r",
																	"        pm.environment.set(`seat_column_passenger_${seatCounter}`, seat.column);\r",
																	"        pm.environment.set(`seat_row_passenger_${seatCounter}`, row.row);\r",
																	"        pm.environment.set(`seat_offer${seatCounter}`, validOffers[seatCounter - 1]);\r",
																	"        seatCounter--;\r",
																	"        console.log(\"Seat  \" + row.row + seat.column + \" saved!\");\r",
																	"    }\r",
																	"    return seatCounter == 0;\r",
																	"}));\r",
																	"\r",
																	"if (seatCounter == 0) {\r",
																	"    console.log(\"All seat data saved!\");\r",
																	"}\r",
																	"\r",
																	"function isValidSeat(seat) {\r",
																	"    return seat.characteristics.every(char => char.code != \"1\" && char.code != \"1D\" && seat.occupationStatusCode == \"F\");\r",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "ModifyBooking - add seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"bookingSignature\": \"{{bookingSignature}}\",\n  \"confirmationId\": \"{{pnr}}\",\n  \"retrieveBooking\": true,\n  \"receivedFrom\": \"Booking Management API testing\",\n  \"before\": {},\n  \"after\": {\n    \"flights\": [\n      {\n        \"seats\": [\n          {\n            \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\",\n            \"offerItemId\": \"{{seat_offer1}}\"\n          },\n          {\n            \"number\": \"{{seat_row_passenger_2}}{{seat_column_passenger_2}}\",\n            \"offerItemId\": \"{{seat_offer2}}\"\n          }\n        ]\n      }\n    ]\n  }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "getBooking",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"pm.environment.set('responseBeforeModify', pm.response.json());\r",
																	"\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
																	"\r",
																	"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
																	"\r",
																	"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "X-Sabre-Group",
																"value": "G7RE",
																"type": "text"
															},
															{
																"key": "X-Sabre-Current-City",
																"value": "G7RE",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"getBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "Offers GetSeats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"const jsonData = JSON.parse(responseBody);\r",
																	"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
																	"\r",
																	"const paidOffers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems\r",
																	"    .filter(offer => offer.unitPrice.totalAmount.amount != 0)\r",
																	"    .map(offer => offer.offerItemID);\r",
																	"\r",
																	"let seatCounter = 2;\r",
																	"\r",
																	"seatRows.some(row => row.seats.some(seat => {\r",
																	"    if (isValidSeat(seat) && paidOffers.includes(seat.offerItemRefIDs[0])) {\r",
																	"        const validOffers = seat.offerItemRefIDs.sort();\r",
																	"        pm.environment.set(`updated_seat_column_passenger_${seatCounter}`, seat.column);\r",
																	"        pm.environment.set(`updated_seat_row_passenger_${seatCounter}`, row.row);\r",
																	"        pm.environment.set(`updated_seat_offer${seatCounter}`, validOffers[seatCounter - 1]);\r",
																	"        seatCounter--;\r",
																	"        console.log(\"Seat  \" + row.row + seat.column + \" saved!\");\r",
																	"    }\r",
																	"    return seatCounter == 0;\r",
																	"}));\r",
																	"\r",
																	"if (seatCounter == 0) {\r",
																	"    console.log(\"All seat data saved!\");\r",
																	"}\r",
																	"\r",
																	"function isValidSeat(seat) {\r",
																	"    return seat.characteristics.every(char => char.code != \"1\" && char.code != \"1D\" && seat.occupationStatusCode == \"F\");\r",
																	"}"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Conversation-ID",
																"value": "conversation-id-value",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/offers/getseats",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"offers",
																"getseats"
															]
														}
													},
													"response": []
												},
												{
													"name": "ModifyBooking - update seats",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "accept",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\",\n    \"before\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_row_passenger_1}}{{seat_column_passenger_1}}\"\n                    },\n                    {\n                        \"number\": \"{{seat_row_passenger_2}}{{seat_column_passenger_2}}\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"flights\": [\n            {\n                \"seats\": [\n                    {\n                        \"number\": \"{{updated_seat_row_passenger_1}}{{updated_seat_column_passenger_1}}\",\n                        \"offerItemId\": \"{{updated_seat_offer1}}\"\n                    },\n                    {\n                        \"number\": \"{{updated_seat_row_passenger_2}}{{updated_seat_column_passenger_2}}\",\n                        \"offerItemId\": \"{{updated_seat_offer2}}\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
															"host": [
																"{{rest_endpoint}}"
															],
															"path": [
																"v1",
																"trip",
																"orders",
																"modifyBooking"
															]
														},
														"description": "### <br>"
													},
													"response": []
												},
												{
													"name": "SessionCloseRQ 1.0.0",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "text/xml",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{{header}}\n\n<SessionCloseRQ Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n\n{{footer}}",
															"options": {
																"raw": {
																	"language": "xml"
																}
															}
														},
														"url": {
															"raw": "{{soap_endpoint}}",
															"host": [
																"{{soap_endpoint}}"
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Modify Loyalty",
							"item": [
								{
									"name": "Add",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Generate a unique ID for profile services\r",
															"var uuid = require('uuid');\r",
															"var myUUID = uuid();\r",
															"console.log(myUUID);\r",
															"\r",
															"//cleanup\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')\r",
															"\r",
															"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
															"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
															"\r",
															"console.log(pm.environment.get('filterName'))\r",
															"console.log(pm.environment.get('profileName'))\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
															"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"itemId\", jsonData.flights[0].itemId);\r",
															"console.log(pm.environment.get('itemId') + \" <- ItemId\");\r",
															"\r",
															"console.log(pm.environment.get('pnr') + \" <- PNR\");"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {},\n    \"after\": {\n        \"creationDetails\": {\n            \"agencyIataNumber\": \"12344321\"\n        },\n        \"travelers\": [\n            {\n                \"id\": \"{{price_passenger_id3}}\",\n                \"givenName\": \"John\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1970-01-23\",\n                \"passengerCode\": \"ADT\",\n                \"age\": 53,\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"35944233\"\n                    },\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54511765\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"{{price_passenger_id2}}\",\n                \"givenName\": \"Jill\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1971-02-23\",\n                \"passengerCode\": \"ADT\",\n                \"age\": 52,\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"41062655\"\n                    },\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"96176721\"\n                    }\n                ]\n            },\n            {\n                \"id\": \"{{price_passenger_id1}}\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"passengerCode\": \"ADT\",\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    },\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"85451115\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/modifyBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"modifyBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"\r",
															"const expectedTravelers =  [\r",
															"        {\r",
															"            \"givenName\": \"John\",\r",
															"            \"surname\": \"Smith\",\r",
															"            \"birthDate\": \"1970-01-23\",\r",
															"            \"type\": \"ADULT\",\r",
															"            \"passengerCode\": \"ADT\",\r",
															"            \"phones\": [\r",
															"                {\r",
															"                    \"number\": \"123456\"\r",
															"                }\r",
															"            ],\r",
															"            \"loyaltyPrograms\": [\r",
															"                {\r",
															"                    \"supplierCode\": \"LO\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"35944233\"\r",
															"                },\r",
															"                {\r",
															"                    \"supplierCode\": \"UA\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"54511765\"\r",
															"                }\r",
															"            ]\r",
															"        },\r",
															"        {\r",
															"            \"givenName\": \"Jill\",\r",
															"            \"surname\": \"Smith\",\r",
															"            \"birthDate\": \"1971-02-23\",\r",
															"            \"type\": \"ADULT\",\r",
															"            \"passengerCode\": \"ADT\",\r",
															"            \"phones\": [\r",
															"                {\r",
															"                    \"number\": \"123456\"\r",
															"                }\r",
															"            ],\r",
															"            \"loyaltyPrograms\": [\r",
															"                {\r",
															"                    \"supplierCode\": \"LO\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"41062655\"\r",
															"                },\r",
															"                {\r",
															"                    \"supplierCode\": \"UA\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"96176721\"\r",
															"                }\r",
															"            ]\r",
															"        },\r",
															"        {\r",
															"            \"givenName\": \"Jack\",\r",
															"            \"surname\": \"Smith\",\r",
															"            \"birthDate\": \"1972-03-23\",\r",
															"            \"type\": \"ADULT\",\r",
															"            \"passengerCode\": \"ADT\",\r",
															"            \"phones\": [\r",
															"                {\r",
															"                    \"number\": \"123456\"\r",
															"                }\r",
															"            ],\r",
															"            \"loyaltyPrograms\": [\r",
															"                {\r",
															"                    \"supplierCode\": \"LO\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"54322111\"\r",
															"                },\r",
															"                {\r",
															"                    \"supplierCode\": \"UA\",\r",
															"                    \"programType\": \"FREQUENT_FLYER\",\r",
															"                    \"programNumber\": \"85451115\"\r",
															"                }\r",
															"            ]\r",
															"        }\r",
															"    ];\r",
															"\r",
															"pm.test(\"Assert loyalty are added\", function () {\r",
															"    pm.expect(jsonData.travelers).to.eql(expectedTravelers);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//cleanup\r",
															"pm.environment.unset('token')\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Generate a unique ID for profile services\r",
															"var uuid = require('uuid');\r",
															"var myUUID = uuid();\r",
															"console.log(myUUID);\r",
															"\r",
															"//cleanup\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')\r",
															"\r",
															"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
															"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
															"\r",
															"console.log(pm.environment.get('filterName'))\r",
															"console.log(pm.environment.get('profileName'))\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SYD LAX AA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n                        {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"JACK@SABRE.COM\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"576457457\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"54322111\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"JACK@SABRE.COM\"\n        ],\n        \"phones\": [\n            \"576457457\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{createBooking_endpoint}}",
													"host": [
														"{{createBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n            \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{modifyBooking_endpoint}}",
													"host": [
														"{{modifyBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"\r",
															"const expectedTraveler = [\r",
															"            {\r",
															"                \"givenName\": \"Jack\",\r",
															"                \"surname\": \"Smith\",\r",
															"                \"birthDate\": \"1972-03-23\",\r",
															"                \"type\": \"ADULT\",\r",
															"                \"passengerCode\": \"ADT\",\r",
															"                \"emails\": [\r",
															"                    \"JACK@SABRE.COM\"\r",
															"                ],\r",
															"                \"phones\": [\r",
															"                    {\r",
															"                        \"number\": \"576457457\"\r",
															"                    }\r",
															"                ]\r",
															"            }\r",
															"        ]\r",
															"\r",
															"pm.test(\"Assert loyalty was deleted\", function () {\r",
															"    pm.expect(jsonData.travelers).to.eql(expectedTraveler);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//cleanup\r",
															"pm.environment.unset('token')\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								},
								{
									"name": "Update",
									"item": [
										{
											"name": "SessionCreateRQ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"// Generate a unique ID for profile services\r",
															"var uuid = require('uuid');\r",
															"var myUUID = uuid();\r",
															"console.log(myUUID);\r",
															"\r",
															"//cleanup\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')\r",
															"\r",
															"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
															"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
															"\r",
															"console.log(pm.environment.get('filterName'))\r",
															"console.log(pm.environment.get('profileName'))\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SYD LAX AA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n                        {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateBooking NDC",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"pnr\", jsonData.confirmationId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"JACK@SABRE.COM\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"576457457\"\n                }\n            ],\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"LO\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"54322111\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"JACK@SABRE.COM\"\n        ],\n        \"phones\": [\n            \"576457457\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{createBooking_endpoint}}",
													"host": [
														"{{createBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking - retrieve bookingSignature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"bookingSignature\", jsonData.bookingSignature);\r",
															"\r",
															"postman.setEnvironmentVariable(\"getBookingResponseBody\", responseBody);\r",
															"\r",
															"console.log(pm.environment.get('bookingSignature') + \" <- bookingSignature\");\r",
															"\r",
															"pm.environment.set('responseBeforeModify', pm.response.json());"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "ModifyBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "U9PK",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "U9PK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bookingSignature\": \"{{bookingSignature}}\",\n    \"confirmationId\": \"{{pnr}}\",\n    \"before\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"LO\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"after\": {\n        \"travelers\": [\n            {\n                \"givenName\": \"Jack\",\n                \"surname\": \"Smith\",\n                \"birthDate\": \"1972-03-23\",\n                \"type\": \"ADULT\",\n                \"passengerCode\": \"ADT\",\n                \"emails\": [\n                    \"JACK@SABRE.COM\"\n                ],\n                \"phones\": [\n                    {\n                        \"number\": \"576457457\"\n                    }\n                ],\n                \"loyaltyPrograms\": [\n                    {\n                        \"supplierCode\": \"UA\",\n                        \"programType\": \"FREQUENT_FLYER\",\n                        \"programNumber\": \"54322111\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"retrieveBooking\": true,\n    \"receivedFrom\": \"Booking Management API testing\"\n}"
												},
												"url": {
													"raw": "{{modifyBooking_endpoint}}",
													"host": [
														"{{modifyBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "GetBooking :printDiff",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"var jsonData = JSON.parse(responseBody);\r",
															"\r",
															"const expectedTraveler = [\r",
															"            {\r",
															"                \"givenName\": \"Jack\",\r",
															"                \"surname\": \"Smith\",\r",
															"                \"birthDate\": \"1972-03-23\",\r",
															"                \"type\": \"ADULT\",\r",
															"                \"passengerCode\": \"ADT\",\r",
															"                \"emails\": [\r",
															"                    \"JACK@SABRE.COM\"\r",
															"                ],\r",
															"                \"phones\": [\r",
															"                    {\r",
															"                        \"number\": \"576457457\"\r",
															"                    }\r",
															"                ],\r",
															"                \"loyaltyPrograms\": [\r",
															"                    {\r",
															"                        \"supplierCode\": \"UA\",\r",
															"                        \"programType\": \"FREQUENT_FLYER\",\r",
															"                        \"programNumber\": \"54322111\"\r",
															"                    }\r",
															"                ]\r",
															"            }\r",
															"        ]\r",
															"\r",
															"pm.test(\"Assert loyalty was updated\", function () {\r",
															"    pm.expect(jsonData.travelers).to.eql(expectedTraveler);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"name": "Content-Type",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH) close session",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//cleanup\r",
															"pm.environment.unset('token')\r",
															"pm.environment.unset('filterName')\r",
															"pm.environment.unset('profileName')"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const isGetBookingRequest = pm.request.url.toString().includes(\"trip/orders/getBooking\");",
							"",
							"if (!isGetBookingRequest) {",
							"    return;",
							"}",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"console.log(jsonData.bookingSignature);",
							"pm.variables.set(\"bookingSignature\", jsonData.bookingSignature);"
						]
					}
				}
			]
		},
		{
			"name": "FulfillFlightTickets",
			"item": [
				{
					"name": "Basic flow ATPCO",
					"item": [
						{
							"name": "ATPCO fulfillment - PQ",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "1. Shop (BFM)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"",
													"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"TUL\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v3/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v3",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "2. createBooking - ATPCO payload",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{oMarketingAirline}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "3. fulfillFlightTickets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"const jsonData = JSON.parse(responseBody);\r",
													"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
													"\r",
													"if(jsonData.hotels!=undefined)\r",
													"{\r",
													"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
													"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
													"}\r",
													"\r",
													"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"fulfillFlightTickets"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. GetBooking  - Display",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "5. Cancel Booking /v1 Cancel All + VOID tickets",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ATPCO fulfillment - Tickets + EMD",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "1. Shop (BFM)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"",
													"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"WAW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"OSL\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"LO\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "2. createBooking - with ancillary",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"pm.environment.set('ancillaryId', jsonData.booking.travelers[0].ancillaries[0].itemId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"specialServices\": [\n                {\n                    \"code\": \"SPEQ\",\n                    \"message\": \"SKI 20KG DIM 110X20X10CM\"\n                }\n            ],\n            \"ancillaries\": [\n                {\n                    \"commercialName\": \"SKI EQUIPMENT\",\n                    \"reasonForIssuance\": \"BAGGAGE\",\n                    \"subcode\": \"0DD\",\n                    \"airlineCode\": \"LO\",\n                    \"source\": \"ATPCO\",\n                    \"basePrice\": \"250.00\",\n                    \"currencyCode\": \"PLN\",\n                    \"groupCode\": \"BG\",\n                    \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"2018-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"2018-03-23\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"2018-03-23\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"specialServices\": [\n                {\n                    \"code\": \"SPEQ\",\n                    \"message\": \"SKI 20KG DIM 110X20X10CM\"\n                }\n            ],\n            \"ancillaries\": [\n                {\n                    \"commercialName\": \"SKI EQUIPMENT\",\n                    \"reasonForIssuance\": \"BAGGAGE\",\n                    \"subcode\": \"0DD\",\n                    \"airlineCode\": \"LO\",\n                    \"source\": \"ATPCO\",\n                    \"basePrice\": \"250.00\",\n                    \"currencyCode\": \"PLN\",\n                    \"groupCode\": \"BG\",\n                    \"electronicMiscellaneousDocumentType\": \"FLIGHT_COUPON_ASSOCIATED\",\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n               \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{oMarketingAirline}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"travelerIndices\": [\n                        1\n                    ],\n                    \"passengersPricing\": [\n                        {\n                            \"passengerCode\": \"ADT\",\n                            \"numberOfpassengers\": 1\n                        }\n                    ]\n                }\n            },\n            {\n                \"qualifiers\": {\n                    \"travelerIndices\": [\n                        2\n                    ],\n                    \"passengersPricing\": [\n                        {\n                            \"passengerCode\": \"CNN\",\n                            \"numberOfpassengers\": 1\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "3. fulfillFlightTickets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"const jsonData = JSON.parse(responseBody);\r",
													"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
													"\r",
													"if(jsonData.hotels!=undefined)\r",
													"{\r",
													"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
													"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
													"}\r",
													"\r",
													"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        },\n        {\n            \"ancillaryIds\": [\n                \"{{ancillaryId}}\"\n            ],\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"fulfillFlightTickets"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. GetBooking  - Display",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "5. Cancel Booking /v1 Cancel All + VOID tickets",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ATPCO fulfillment - Paid seats",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											},
											{
												"key": "",
												"value": "",
												"type": "default",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"pm.environment.set(\"airline_code\", \"QF\");\r",
													"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
													"pm.environment.set(\"to_airport_code\", \"MEL\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n    \r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Offers GetSeats",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
													"const numberOfPaxes = 2;\r",
													"\r",
													"var seatOffersID = [];\r",
													"var seatOffersLimit = 0;\r",
													"\r",
													"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
													"var seatCounter = numberOfPaxes;\r",
													"\r",
													"for (var z=1; z<=seatCounter; z++) {\r",
													"    pm.environment.unset('seat_offer' + z);\r",
													"    pm.environment.unset('seat_passenger_'+ z);\r",
													"}\r",
													"\r",
													"\r",
													"for (var i=0; i<offers.length; i++) {\r",
													"\r",
													"    if(offers[i].unitPrice.totalAmount != null) {\r",
													"        if(offers[i].unitPrice.totalAmount.amount !=0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
													"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
													"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
													"            seatOffersLimit++;\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"for (var i=0; i<seatRows.length; i++) {\r",
													"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
													"        var seat = seatRows[i].seats[j];\r",
													"        var isValidSeat = true;\r",
													"        var isValidOffer = false;\r",
													"\r",
													"        \r",
													"        for (var k=0; k<seat.characteristics.length; k++)\r",
													"        {\r",
													"            //console.log(seat.characteristics[k].code);\r",
													"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
													"                isValidSeat = false;\r",
													"                break;\r",
													"            }\r",
													"        }\r",
													"        \r",
													"        if(seat.offerItemRefIDs != undefined) {\r",
													"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
													"            {\r",
													"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
													"                    isValidOffer = true;\r",
													"                    break;\r",
													"                }\r",
													"            }\r",
													"        }\r",
													"\r",
													"        if(isValidSeat && isValidOffer)\r",
													"        {\r",
													"            pm.environment.set('seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
													"            seatCounter--;\r",
													"            console.log(\"Seat saved!\")\r",
													"        }\r",
													"\r",
													"        \r",
													"        if(seatCounter == 0) {\r",
													"            break;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    if(seatCounter == 0) {\r",
													"        console.log(\"All seat data saved!\")\r",
													"        break;\r",
													"    }\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"Y\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"Y\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/getseats",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"getseats"
											]
										}
									},
									"response": []
								},
								{
									"name": "[CB] ATPCO payload",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    },\n                    {\n                        \"number\": \"{{seat_passenger_2}}\",\n                        \"travelerIndex\": 2\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": []\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "FulfillFlightTickets - Fulfill with switching to dedicated ticketing PCC",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "at-diagnostics",
												"value": "false",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ],\n    \"targetPcc\": \"{{pcc_tkt}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"fulfillFlightTickets"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "getBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "Check Flight Tickets for a confirmationId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"checkFlightTickets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cancel Booking - cancelAll and void corresponding tickets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"targetPcc\": \"{{pcc_tkt}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ  (Stateful ATH)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
									},
									"response": []
								}
							]
						},
						{
							"name": "ATPCO fulfillment - Free seats",
							"item": [
								{
									"name": "SessionCreateRQ 1.0.0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											},
											{
												"key": "",
												"value": "",
												"type": "default",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTA_AirAvailLLSRQ - get flight number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"pm.environment.set(\"airline_code\", \"QF\");\r",
													"pm.environment.set(\"from_airport_code\", \"ADL\");\r",
													"pm.environment.set(\"to_airport_code\", \"MEL\");"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<OTA_AirAvailRQ Version=\"2.4.0\" xmlns=\"http://webservices.sabre.com/sabreXML/2011/10\" ReturnHostCommand=\"true\">\r\n    <OptionalQualifiers>\r\n        <FlightQualifiers>\r\n            <Cabin >\r\n                <Designator>BB</Designator>\r\n            </Cabin>\r\n            <VendorPrefs>\r\n                <Airline Code='{{airline_code}}' />\r\n            </VendorPrefs>\r\n        </FlightQualifiers>\r\n    </OptionalQualifiers>\r\n    <OriginDestinationInformation>\r\n        <FlightSegment DepartureDateTime=\"{{start_date}}\">\r\n            <DestinationLocation LocationCode=\"{{to_airport_code}}\"/>\r\n            <OriginLocation LocationCode=\"{{from_airport_code}}\"/>\r\n        </FlightSegment>\r\n    </OriginDestinationInformation>\r\n</OTA_AirAvailRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Offers GetSeats",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
													"const numberOfPaxes = 2;\r",
													"\r",
													"var seatOffersID = [];\r",
													"var seatOffersLimit = 0;\r",
													"\r",
													"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
													"var seatCounter = numberOfPaxes;\r",
													"\r",
													"for (var z=1; z<=seatCounter; z++) {\r",
													"    pm.environment.unset('seat_offer' + z);\r",
													"    pm.environment.unset('seat_passenger_'+ z);\r",
													"}\r",
													"\r",
													"\r",
													"for (var i=0; i<offers.length; i++) {\r",
													"\r",
													"    if(offers[i].unitPrice.totalAmount == null) {\r",
													"        if(seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `passenger`+(seatOffersLimit + 1)) {\r",
													"            seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
													"            pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
													"            seatOffersLimit++;\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"for (var i=0; i<seatRows.length; i++) {\r",
													"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
													"        var seat = seatRows[i].seats[j];\r",
													"        var isValidSeat = true;\r",
													"        var isValidOffer = false;\r",
													"\r",
													"        \r",
													"        for (var k=0; k<seat.characteristics.length; k++)\r",
													"        {\r",
													"            //console.log(seat.characteristics[k].code);\r",
													"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
													"                isValidSeat = false;\r",
													"                break;\r",
													"            }\r",
													"        }\r",
													"        \r",
													"        if(seat.offerItemRefIDs != undefined) {\r",
													"            for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
													"            {\r",
													"                if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
													"                    isValidOffer = true;\r",
													"                    break;\r",
													"                }\r",
													"            }\r",
													"        }\r",
													"\r",
													"        if(isValidSeat && isValidOffer)\r",
													"        {\r",
													"            pm.environment.set('seat_passenger_' + seatCounter, seatRows[i].row+seat.column);\r",
													"            seatCounter--;\r",
													"            console.log(\"Seat saved!\")\r",
													"        }\r",
													"\r",
													"        \r",
													"        if(seatCounter == 0) {\r",
													"            break;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    if(seatCounter == 0) {\r",
													"        console.log(\"All seat data saved!\")\r",
													"        break;\r",
													"    }\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"requestType\": \"payload\",\n    \"request\": {\n        \"paxSegmentRefIds\": [\n            \"segment1\"\n        ],\n        \"originDest\": {\n            \"paxJourney\": {\n                \"paxSegments\": [\n                    {\n                        \"paxSegmentId\": \"segment1\",\n                        \"departure\": {\n                            \"locationCode\": \"{{from_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"arrival\": {\n                            \"locationCode\": \"{{to_airport_code}}\",\n                            \"aircraftScheduledDate\": {\n                                \"date\": \"{{start_date}}\"\n                            }\n                        },\n                        \"marketingCarrierInfo\": {\n                            \"bookingCode\": \"J\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"operatingCarrierInfo\": {\n                            \"bookingCode\": \"J\",\n                            \"carrierCode\": \"{{airline_code}}\",\n                            \"carrierFlightNumber\": \"{{flight_number}}\"\n                        },\n                        \"cabinType\": {\n                            \"cabinTypeCode\": \"J\",\n                            \"cabinTypeName\": \"Economy\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"paxes\": [\n            {\n                \"paxID\": \"passenger1\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-01-23\",\n                \"givenName\": \"John\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            },\n            {\n                \"paxID\": \"passenger2\",\n                \"ptc\": \"ADT\",\n                \"birthday\": \"1970-03-23\",\n                \"givenName\": \"Jack\",\n                \"surname\": \"Drake\",\n                \"accompaniedByInfant\": false\n            }\n        ],\n        \"currency\": \"PLN\"\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/getseats",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"getseats"
											]
										}
									},
									"response": []
								},
								{
									"name": "[CB] ATPCO payload",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"Jack\",\n            \"surname\": \"Drake\",\n            \"birthDate\": \"1970-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"9999999999\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"Jack\",\n                    \"middleName\": \"Mike\",\n                    \"surname\": \"Drake\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"J\",\n                \"flightStatusCode\": \"NN\",\n                \"seats\": [\n                    {\n                        \"number\": \"{{seat_passenger_1}}\",\n                        \"travelerIndex\": 1\n                    }\n                ]\n            }\n        ],\n        \"flightPricing\": [\n            \n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "FulfillFlightTickets - Fulfill with switching to dedicated ticketing PCC",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "at-diagnostics",
												"value": "false",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ],\n    \"targetPcc\": \"{{pcc_tkt}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"fulfillFlightTickets"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "getBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "Check Flight Tickets for a confirmationId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"checkFlightTickets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Cancel Booking - cancelAll and void corresponding tickets",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										}
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ  (Stateful ATH)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Basic flow NDC",
					"item": [
						{
							"name": "NDC fulfillment - flight order items",
							"item": [
								{
									"name": "AA",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "[CB] NDC payload",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
															"    pm.response.to.have.header(\"x-request-id\");\r",
															"    pm.response.to.have.header(\"ConversationId\");\r",
															"})"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"asynchronousUpdateWaitTime\": 5000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1971-02-23\",\n                    \"gender\": \"FEMALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "fulfillFlightTickets",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"\r",
															"\r",
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
															"\r",
															"if(jsonData.hotels!=undefined)\r",
															"{\r",
															"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
															"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
															"}\r",
															"\r",
															"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text",
														"disabled": true
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 2\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"CASH\"\n        },\n        {\n            \"cardTypeCode\": \"AX\",\n            \"cardNumber\": \"{{ndcCreditCardNumber}}\",\n            \"expiryDate\": \"{{ndcCreditCardExpiryDate}}\",\n            \"type\": \"PAYMENTCARD\",\n            \"authentications\": [{\n                \"channelCode\" :\"MO\"\n            }]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"fulfillFlightTickets"
													]
												}
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"getBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Check Flight Tickets for a confirmationId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('reshopOfferItemId', jsonData.cancelOffers[0].offerItemId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"checkFlightTickets"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll and void corresponding tickets",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"offerItemId\": \"{{reshopOfferItemId}}\",\n    \"retrieveBooking\": true\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "SessionCloseRQ  (Stateful ATH)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												},
												"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "NDC fulfillment - flight and seat order items",
							"item": [
								{
									"name": "AA",
									"item": [
										{
											"name": "SessionCreateRQ 1.0.0",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "text/xml"
													},
													{
														"key": "",
														"value": "",
														"type": "default",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>STX_2019_Postman</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <ClientId>SBR-BMAPI</ClientId>\n                <ClientSecret>qg4WYIah</ClientSecret>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <sws:SessionCreateRQ xmlns:sws=\"http://webservices.sabre.com\" Version=\"1.0.0\">\n            <POS>\n                <Source PseudoCityCode=\"U9PK\" />\n            </POS>\n        </sws:SessionCreateRQ>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
												},
												"url": {
													"raw": "{{soap_endpoint}}",
													"host": [
														"{{soap_endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const itinNumber = 0;",
															"",
															"var jsonData = JSON.parse(responseBody);",
															"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
															"",
															"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
															"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
															"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
															"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
															"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
															"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
															"",
															"",
															"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
															"",
															"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
															"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
															"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
															"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
															"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
															"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
															"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
															"",
															" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
															" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
															" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v4/offers/shop",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v4",
														"offers",
														"shop"
													]
												},
												"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
											},
											"response": []
										},
										{
											"name": "Offers Price /v1 (Stateless ATK) Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
															"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/price",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"price"
													]
												}
											},
											"response": []
										},
										{
											"name": "[CB] NDC payload",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
															"    pm.response.to.have.header(\"x-request-id\");\r",
															"    pm.response.to.have.header(\"ConversationId\");\r",
															"})"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"birthDate\": \"1971-02-23\",\n                    \"gender\": \"FEMALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    },\n    \"agency\": {\n        \"agencyCustomerNumber\": \"2300104\"\n    }\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"createBooking"
													]
												},
												"description": "### <br>"
											},
											"response": []
										},
										{
											"name": "Offers GetSeats",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"const offers = jsonData.response.aLaCarteOffer.aLaCarteOfferItems;\r",
															"const numberOfPaxes = 2;\r",
															"\r",
															"var seatOffersID = [];\r",
															"var seatOffersLimit = 0;\r",
															"\r",
															"const seatRows = jsonData.response.seatMaps[0].cabinCompartments[0].seatRows;\r",
															"var seatCounter = numberOfPaxes;\r",
															"\r",
															"for (var z=1; z<=seatCounter; z++) {\r",
															"    pm.environment.unset('seat_offer' + z);\r",
															"    pm.environment.unset('seat_row_passenger_'+ z);\r",
															"    pm.environment.unset('seat_column_passenger_' + z);\r",
															"}\r",
															"\r",
															"for (var i=0; i<offers.length; i++) {\r",
															"    if(offers[i].unitPrice.totalAmount.amount != 0 && seatOffersLimit<seatCounter && offers[i].eligibility.paxRefIDs[0] == `Passenger`+(seatOffersLimit + 1)) {\r",
															"        seatOffersID[seatOffersLimit] = offers[i].offerItemID\r",
															"        pm.environment.set('seat_offer' + (seatOffersLimit + 1), seatOffersID[seatOffersLimit]);\r",
															"        seatOffersLimit++;\r",
															"    }\r",
															"}\r",
															"\r",
															"for (var i=0; i<seatRows.length; i++) {\r",
															"    for (var j=0; j<seatRows[i].seats.length; j++) {\r",
															"        var seat = seatRows[i].seats[j];\r",
															"        var isValidSeat = true;\r",
															"        var isValidOffer = false;\r",
															"        for (var k=0; k<seat.characteristics.length; k++)\r",
															"        {\r",
															"            //console.log(seat.characteristics[k].code);\r",
															"            if(seat.characteristics[k].code == \"1\" || seat.characteristics[k].code == \"1D\" || seat.occupationStatusCode == \"O\") {\r",
															"                isValidSeat = false;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"        for (var l=0; l<seat.offerItemRefIDs.length; l++)\r",
															"        {\r",
															"            //console.log(seatCounter-3, Math.abs(seatCounter-3), seat.offerItemRefIDs[l], seatOffersID[Math.abs(seatCounter-3)], seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-3)])\r",
															"            if(seat.offerItemRefIDs[l] == seatOffersID[Math.abs(seatCounter-numberOfPaxes)]) {\r",
															"                isValidOffer = true;\r",
															"                break;\r",
															"            }\r",
															"        }\r",
															"\r",
															"        if(isValidSeat && isValidOffer)\r",
															"        {\r",
															"            pm.environment.set('seat_column_passenger_' + seatCounter, seat.column);\r",
															"            pm.environment.set('seat_row_passenger_' + seatCounter, seatRows[i].row);\r",
															"            seatCounter--;\r",
															"            console.log(\"Seat saved!\")\r",
															"        }\r",
															"        \r",
															"        if(seatCounter == 0) {\r",
															"            break;\r",
															"        }\r",
															"    }\r",
															"\r",
															"    if(seatCounter == 0) {\r",
															"        console.log(\"All seat data saved!\")\r",
															"        break;\r",
															"    }\r",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "conversation-id-value",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"request\": {\n        \"order\": {\n            \"orderId\": \"{{pnr}}\"\n        }\n    },\n    \"pointOfSale\": {\n        \"agentDutyCode\": \"*\",\n        \"location\": {\n            \"countryCode\": \"PL\",\n            \"cityCode\": \"KRK\"\n        }\n    },\n    \"requestType\": \"orderId\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/offers/getseats",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"offers",
														"getseats"
													]
												}
											},
											"response": []
										},
										{
											"name": "Orders Change /v1 - add seats",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": \"{{pnr}}\",\r\n    \"displayPaymentCardNumbers\": false,\r\n    \"cancelWithRetain\": false,\r\n    \"cancelDocumentAndRetainOrder\": false,\r\n    \"actions\": [],\r\n    \"seatAdds\": [\r\n        {\r\n            \"offerItemId\": \"{{seat_offer1}}\",\r\n            \"passengerRefs\": \"Passenger1\",\r\n            \"row\": \"{{seat_row_passenger_1}}\",\r\n            \"column\": \"{{seat_column_passenger_1}}\"\r\n        },\r\n        {\r\n            \"offerItemId\": \"{{seat_offer2}}\",\r\n            \"passengerRefs\": \"Passenger2\",\r\n            \"row\": \"{{seat_row_passenger_2}}\",\r\n            \"column\": \"{{seat_column_passenger_2}}\"\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/orders/change",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"orders",
														"change"
													]
												}
											},
											"response": []
										},
										{
											"name": "fulfillFlightTickets",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});\r",
															"\r",
															"\r",
															"\r",
															"const jsonData = JSON.parse(responseBody);\r",
															"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
															"\r",
															"if(jsonData.hotels!=undefined)\r",
															"{\r",
															"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
															"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
															"}\r",
															"\r",
															"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text",
														"disabled": true
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"cardTypeCode\": \"AX\",\n            \"cardNumber\": \"{{ndcCreditCardNumber}}\",\n            \"expiryDate\": \"{{ndcCreditCardExpiryDate}}\",\n            \"type\": \"PAYMENTCARD\",\n            \"authentications\": [{\n                \"channelCode\" :\"MO\"\n            }]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"fulfillFlightTickets"
													]
												}
											},
											"response": []
										},
										{
											"name": "Check Flight Tickets for a confirmationId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonData = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set('reshopOfferItemId', jsonData.cancelOffers[0].offerItemId);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Conversation-ID",
														"value": "{{conv_id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"checkFlightTickets"
													]
												}
											},
											"response": []
										},
										{
											"name": "Cancel Booking - cancelAll and void corresponding tickets",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"offerItemId\": \"{{reshopOfferItemId}}\",\n    \"retrieveBooking\": true\n}"
												},
												"url": {
													"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
													"host": [
														"{{rest_endpoint}}"
													],
													"path": [
														"v1",
														"trip",
														"orders",
														"cancelBooking"
													]
												}
											},
											"response": []
										},
										{
											"name": "getBooking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"response is ok\", function () {\r",
															"    pm.response.to.be.ok;\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"response must be valid and have a body\", function () {\r",
															"    // this assertion also checks if a body  exists\r",
															"     pm.response.to.be.json; \r",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "X-Sabre-Group",
														"value": "G7RE",
														"type": "text"
													},
													{
														"key": "X-Sabre-Current-City",
														"value": "G7RE",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
												},
												"url": {
													"raw": "{{getBooking_endpoint}}",
													"host": [
														"{{getBooking_endpoint}}"
													]
												},
												"description": "### <br>"
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Generic Examples",
					"item": [
						{
							"name": "fulfillFlightTickets Two FOPs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 1,\n                \"secondaryFormOfPayment\": 2,\n                \"amountOnSecondFormOfPayment\": \"10.00\"\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"CASH\"\n        },\n        {\n            \"type\": \"CHECK\"\n        },\n        {\n            \"type\": \"MISCELLANEOUS\",\n            \"extendedPayment\": 12,\n            \"miscellaneousCreditCode\": \"PL189947\"\n        },\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{creditCardNumber}}\",\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n            \"expiryDate\": \"{{creditCardExpiryDate}}\",\n            \"manualApprovalCode\": \"12345\"\n        },\n        {\n            \"type\": \"INSTALLMENTS\",\n            \"airlinePlanCode\": \"RG065\",\n            \"installmentAmount\": \"100\",\n            \"numberOfInstallments\": 4,\n            \"netBalance\": \"300.20\"\n        },\n        {\n            \"type\": \"VIRTUAL_CARD\",\n            \"virtualCardCode\": \"SABREVIRTUAL\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://localhost:8180/v1/api/trip/orders/fulfillFlightTickets",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8180",
									"path": [
										"v1",
										"api",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "fulfillFlightTickets with brandedFares",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            },\n            \"ticketingQualifiers\": {\n                \"brandedFares\": [\n                    {\n                        \"brandCode\": \"MAIN\",\n                        \"flights\": [\n                            {\n                                \"itemId\": \"{{flightItemId}}\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{creditCardNumber}}\",\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n            \"expiryDate\": \"{{creditCardExpiryDate}}\",\n            \"type\": \"CHECK\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "fulfillFlightTickets Printer profile",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"profileNumber\": 1\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"CASH\"\n        },\n        {\n            \"type\": \"CHECK\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Workflows",
			"item": [
				{
					"name": "1 - Air NDC Shop, Price Check, Book, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"OTA_AirLowFareSearchRQ\": {\n\t\t\"Version\": \"1\",\n\t\t\"POS\": {\n\t\t\t\"Source\": [{\n\t\t\t\t\t\"PseudoCityCode\": \"{{pcc}}\",\n\t\t\t\t\t\"RequestorID\": {\n\t\t\t\t\t\t\"Type\": \"1\",\n\t\t\t\t\t\t\"ID\": \"1\",\n\t\t\t\t\t\t\"CompanyName\": {\n\t\t\t\t\t\t\t\"Code\": \"TN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"OriginDestinationInformation\": [{\n\t\t\t\t\"RPH\": \"1\",\n\t\t\t\t\"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"DEN\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ABQ\"\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\"RPH\": \"2\",\n\t\t\t\t\"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ABQ\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"DEN\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"TravelPreferences\": {\n\t\t\t\"TPA_Extensions\": {\n\t\t\t\t\"NumTrips\": {\n\t\t\t\t\t\"Number\": 10\n\t\t\t\t},\n\t\t\t\t\"DataSources\": {\n\t\t\t\t\t\"NDC\": \"Enable\",\n\t\t\t\t\t\"ATPCO\": \"Disable\",\n\t\t\t\t\t\"LCC\": \"Disable\"\n\t\t\t\t},\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n\t\t\t}\n\t\t},\n\t\t\"TravelerInfoSummary\": {\n\t\t\t\"AirTravelerAvail\": [{\n\t\t\t\t\t\"PassengerTypeQuantity\": [{\n\t\t\t\t\t\t\t\"Code\": \"ADT\",\n\t\t\t\t\t\t\t\"Quantity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TPA_Extensions\": {\n\t\t\t\"IntelliSellTransaction\": {\n\t\t\t\t\"RequestType\": {\n\t\t\t\t\t\"Name\": \"200ITINS\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/resources)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. Offers Price /v1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}\n"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/book/offer_price), [Resources](https://developer.sabre.com/docs/rest_apis/air/book/offer_price/resources)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n\t\t\t\"customerNumber\": \"1234567\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\"\n      ],\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "4. GetBooking /v1 General",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					]
				},
				{
					"name": "2 - Profiles, Air NDC Shop, Price Check, Book, Cancel",
					"item": [
						{
							"name": "0 - Create Profile",
							"item": [
								{
									"name": "SessionCreateRQ (Stateful ATH) create session and prepare vars Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Generate a unique ID for profile services\r",
													"var uuid = require('uuid');\r",
													"var myUUID = uuid();\r",
													"console.log(myUUID);\r",
													"\r",
													"//cleanup\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')\r",
													"\r",
													"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
													"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
													"\r",
													"console.log(pm.environment.get('filterName'))\r",
													"console.log(pm.environment.get('profileName'))\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Filter[0].$.FilterID;\r",
													"    pm.environment.set('filterId', filterId);\r",
													"});\r",
													"\r",
													"console.log(\"Filter id : \"+pm.environment.get('filterId'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('filterId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Filter CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\" FilterID=\"*\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" FilterName=\"{{filterName}}\" FilterTypeCode=\"TVL\">\r\n\t\t<Profile>\r\n\t\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\"/>\r\n\t\t\t<Traveler>\r\n\t\t\t\t<Customer>\r\n\t\t\t\t\t<PersonName InformationText=\"Info\">\r\n\t\t\t\t\t\t<GivenName>John</GivenName>\r\n\t\t\t\t\t\t<SurName>Kowalski</SurName>\r\n\t\t\t\t\t</PersonName>\r\n\t\t\t\t\t<Telephone>\r\n\t\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t\t</Telephone>\r\n\t\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t\t</Customer>\r\n\t\t\t</Traveler>\r\n\t\t</Profile>\r\n\t</Filter>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.UniqueID;\r",
													"    const profileName = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.ProfileName;\r",
													"    pm.environment.set('profileId', filterId);\r",
													"    pm.environment.set('profileName', profileName);\r",
													"});\r",
													"\r",
													"console.log(\"Profile id : \"+pm.environment.get('profileId'))\r",
													"console.log(\"profileName : \"+pm.environment.get('profileName'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('profileId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Profile CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\">\r\n\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\" ProfileName=\"{{profileName}}\"/>\r\n\t\t<Traveler>\r\n\t\t\t<Customer BirthDate=\"1990-01-01\" GenderCode=\"M\">\r\n\t\t\t\t<PersonName>\r\n\t\t\t\t\t<GivenName>John</GivenName>\r\n\t\t\t\t\t\t<SurName>Smith</SurName>\r\n\t\t\t\t</PersonName>\r\n\t\t\t\t<Telephone>\r\n\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t</Telephone>\r\n\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t</Customer>\r\n\t\t\t<TPA_Extensions>\r\n\t\t\t\t<AssociatedFilters FilterID=\"{{filterId}}\" FilterName=\"{{filterName}}\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\"/>\r\n\t\t\t</TPA_Extensions>\r\n\t\t</Traveler>\r\n\t</Profile>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ  (Stateful ATH) close session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('token')\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "1 - Shop, Price Check, Book, Cancel (NDC)",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "1. Bargain Finder Max /v4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"OTA_AirLowFareSearchRQ\": {\n\t\t\"Version\": \"4\",\n\t\t\"POS\": {\n\t\t\t\"Source\": [{\n\t\t\t\t\t\"PseudoCityCode\": \"{{pcc}}\",\n\t\t\t\t\t\"RequestorID\": {\n\t\t\t\t\t\t\"Type\": \"1\",\n\t\t\t\t\t\t\"ID\": \"1\",\n\t\t\t\t\t\t\"CompanyName\": {\n\t\t\t\t\t\t\t\"Code\": \"TN\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"OriginDestinationInformation\": [{\n\t\t\t\t\"RPH\": \"1\",\n\t\t\t\t\"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ORD\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"LAX\"\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\"RPH\": \"2\",\n\t\t\t\t\"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n\t\t\t\t\"OriginLocation\": {\n\t\t\t\t\t\"LocationCode\": \"LAX\"\n\t\t\t\t},\n\t\t\t\t\"DestinationLocation\": {\n\t\t\t\t\t\"LocationCode\": \"ORD\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"TravelPreferences\": {\n\t\t\t\"TPA_Extensions\": {\n\t\t\t\t\"NumTrips\": {\n\t\t\t\t\t\"Number\": 10\n\t\t\t\t},\n\t\t\t\t\"DataSources\": {\n\t\t\t\t\t\"NDC\": \"Enable\",\n\t\t\t\t\t\"ATPCO\": \"Disable\",\n\t\t\t\t\t\"LCC\": \"Disable\"\n\t\t\t\t},\n                 \"PreferNDCSourceOnTie\": {\n                    \"Value\": true\n                }\n\n\t\t\t}\n\t\t},\n\t\t\"TravelerInfoSummary\": {\n\t\t\t\"AirTravelerAvail\": [{\n\t\t\t\t\t\"PassengerTypeQuantity\": [{\n\t\t\t\t\t\t\t\"Code\": \"ADT\",\n\t\t\t\t\t\t\t\"Quantity\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"TPA_Extensions\": {\n\t\t\t\"IntelliSellTransaction\": {\n\t\t\t\t\"RequestType\": {\n\t\t\t\t\t\"Name\": \"200ITINS\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/resources)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "2. Offers Price /v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}\n"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/book/offer_price), [Resources](https://developer.sabre.com/docs/rest_apis/air/book/offer_price/resources)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "3. createBooking - ProfileId",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"profiles\": [\n        {\n            \"uniqueId\": \"{{profileId}}\",\n            \"profileTypeCode\": \"TVL\",\n            \"domainId\": \"{{pcc}}\"\n        }\n    ],\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "4. Cancel Booking /v1 Cancel All",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "3 - Air Shop, Book, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"WAW\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - ATPCO payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentType\": \"FACILITATION_DOCUMENT\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Kowalski\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Mrozicki\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{oMarketingAirline}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"remarks\": [\n        {\n            \"type\": \"HISTORICAL\",\n            \"text\": \"ASD/MG/PNR\"\n        }\n    ],\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "4 - Profiles, Air Shop, Book, Cancel",
					"item": [
						{
							"name": "0 - Create Profile",
							"item": [
								{
									"name": "0. SessionCreateRQ (Stateful ATH) create session and prepare vars Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Generate a unique ID for profile services\r",
													"var uuid = require('uuid');\r",
													"var myUUID = uuid();\r",
													"console.log(myUUID);\r",
													"\r",
													"//cleanup\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')\r",
													"\r",
													"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
													"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
													"\r",
													"console.log(pm.environment.get('filterName'))\r",
													"console.log(pm.environment.get('profileName'))\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Filter[0].$.FilterID;\r",
													"    pm.environment.set('filterId', filterId);\r",
													"});\r",
													"\r",
													"console.log(\"Filter id : \"+pm.environment.get('filterId'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('filterId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Filter CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\" FilterID=\"*\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" FilterName=\"{{filterName}}\" FilterTypeCode=\"TVL\">\r\n\t\t<Profile>\r\n\t\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\"/>\r\n\t\t\t<Traveler>\r\n\t\t\t\t<Customer>\r\n\t\t\t\t\t<PersonName InformationText=\"Info\">\r\n\t\t\t\t\t\t<GivenName>Pawel</GivenName>\r\n\t\t\t\t\t\t<SurName>Mrozicki</SurName>\r\n\t\t\t\t\t</PersonName>\r\n\t\t\t\t\t<Telephone>\r\n\t\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t\t</Telephone>\r\n\t\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t\t</Customer>\r\n\t\t\t</Traveler>\r\n\t\t</Profile>\r\n\t</Filter>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EPS_EXT_ProfileCreateRQ (Stateful ATH) create profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const xml2js = require('xml2js');\r",
													"\r",
													"\r",
													"// Parse response and remove namespaces (prefixes)\r",
													"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
													"const parseString = xml2js.parseString;\r",
													"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
													"\r",
													"parseString(responseBody, parseOptions, (err, result) => {\r",
													"    const filterId = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.UniqueID;\r",
													"    const profileName = result.Envelope.Body[0].Sabre_OTA_ProfileCreateRS[0].Profile[0].$.ProfileName;\r",
													"    pm.environment.set('profileId', filterId);\r",
													"    pm.environment.set('profileName', profileName);\r",
													"});\r",
													"\r",
													"console.log(\"Profile id : \"+pm.environment.get('profileId'))\r",
													"console.log(\"profileName : \"+pm.environment.get('profileName'))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('profileId')"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\r\n\r\n<Sabre_OTA_ProfileCreateRQ xmlns=\"http://www.sabre.com/eps/schemas\" Version=\"6.55\">\r\n\t<Profile CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\">\r\n\t\t<TPA_Identity ClientCode=\"TN\" ClientContextCode=\"SBS\" UniqueID=\"*\" ProfileTypeCode=\"TVL\" DomainID=\"{{pcc}}\" ProfileName=\"{{profileName}}\"/>\r\n\t\t<Traveler>\r\n\t\t\t<Customer BirthDate=\"1990-01-01\" GenderCode=\"M\">\r\n\t\t\t\t<PersonName>\r\n\t\t\t\t\t<GivenName>John</GivenName>\r\n\t\t\t\t\t\t<SurName>Smith</SurName>\r\n\t\t\t\t</PersonName>\r\n\t\t\t\t<Telephone>\r\n\t\t\t\t\t<FullPhoneNumber>6826051000</FullPhoneNumber>\r\n\t\t\t\t</Telephone>\r\n\t\t\t\t<Email EmailAddress=\"Test.Create.Booking@Sabre.com\"/>\r\n\t\t\t</Customer>\r\n\t\t\t<TPA_Extensions>\r\n\t\t\t\t<AssociatedFilters FilterID=\"{{filterId}}\" FilterName=\"{{filterName}}\" DomainID=\"{{pcc}}\" ClientCode=\"TN\" ClientContextCode=\"SBS\" CreateDateTime=\"{{start_date}}T00:00:00\" UpdateDateTime=\"{{start_date}}T00:00:00\"/>\r\n\t\t\t</TPA_Extensions>\r\n\t\t</Traveler>\r\n\t</Profile>\r\n</Sabre_OTA_ProfileCreateRQ>\r\n\r\n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "SessionCloseRQ  (Stateful ATH) close session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//cleanup\r",
													"pm.environment.unset('token')\r",
													"pm.environment.unset('filterName')\r",
													"pm.environment.unset('profileName')"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/xml"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
										},
										"url": {
											"raw": "{{soap_endpoint}}",
											"host": [
												"{{soap_endpoint}}"
											]
										},
										"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "1 - Shop, Book, Cancel (ATPCO)",
							"item": [
								{
									"name": "0. REST Authorize ATK Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "1. Shop (BFM)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"",
													"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"KRK\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"WAW\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "2. createBooking - ProfileId",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"profiles\": [\n        {\n            \"profileName\": \"Tomek\",\n            \"profileTypeCode\": \"TVL\",\n            \"domainId\": \"{{pcc}}\"\n        }\n    ],\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{oFlightNumber}},\n                \"airlineCode\": \"{{oMarketingAirline}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "3. Cancel Booking /v1 Cancel All",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"cancelBooking"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "5 - Air LCC Shop, Book, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LON\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"MAD\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"U2\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - LCC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Irvine\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t},\n        {\n\t\t\t\"givenName\": \"Martin\",\n\t\t\t\"surname\": \"Irvine\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Fulfill (EnhancedAirTicket)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									},
									{
										"key": "Diagnostics",
										"value": "CLIENT",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{hardcopy}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"{{country_code}}\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"VI\",\n                                \"CardSecurityCode\": \"{{lccCardSecurityCode}}\",\n                                \"ExpireDate\": \"{{lccCreditCardExpiryDate}}\",\n                                \"Number\": {{lccCreditCardNumber}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            },\n            \"GhostTicketCheck\": {\n                \"waitInterval\": 1000,\n                \"numAttempts\": 3\n            }\n        }\n    }\n}\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/fulfill/enhanced_air_ticket), [Resources](https://developer.sabre.com/docs/rest_apis/air/fulfill/enhanced_air_ticket/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "6 - Air Shop, Book, Fulfill, Cancel + Void",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"TUL\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - ATPCO payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{oMarketingAirline}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Enhanced Air Ticket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Diagnostics",
										"value": "CLIENT",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{hardcopy}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"{{country_code}}\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"AX\",\n                                \"ExpireDate\": \"{{creditCardExpiryDate}}\",\n                                \"Number\": {{creditCardNumberAX}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "3. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Check ticket rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "U9PK",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tickets\": [\n        {\n            \"number\": \"{{tkt}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Cancel Booking /v1 Cancel All + VOID tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "6. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "7 - Air Shop, Book, Fulfill, Void, Display, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [{\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [{\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"ORD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAS\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n                \"MaxStopsQuantity\": 0, \n            \t\t\t\"VendorPref\": [\n\t\t\t\t{\n\t\t\t\t\t\"Code\" : \"AA\"\n\t\t\t\t}\n\t\t\t],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n\n \n\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [{\n                    \"PassengerTypeQuantity\": [{\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1970-01-23\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t},\n        {\n\t\t\t\"givenName\": \"Janice\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"All\",\n                \"middleName\": \"Janice\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"2000-01-23\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Enhanced Air Ticket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{hardcopy}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"{{country_code}}\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"VI\",\n                                \"ExpireDate\": \"{{creditCardExpiryDate}}\",\n                                \"Number\": {{creditCardNumber}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "3. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"ticket1\", jsonData.flightTickets[0].number);",
											"pm.environment.set(\"ticket2\", jsonData.flightTickets[1].number);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Check Flight Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\"\n      },\n      {\n        \"number\": \"{{tkt2}}\"\n      }\n  ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "6. Void Flight Tickets - with ALLOW_PARTIAL_CANCEL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n    \"{{tkt}}\",\n    \"{{tkt2}}\"\n  ],\n  \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"  \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/voidFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"voidFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "7. GetBooking  - Display Flight Tickets only",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n    \"returnOnly\":\r\n  [ \"TICKETS\"]\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "8. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "8 - Air Shop, Book, Fulfill, Refund, Display, Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SFO\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"FlexibleFares\": {\n                    \"FareParameters\": [\n                        {\n                            \"ExcludeRestricted\": {\n                                \"Ind\": true\n                            }\n                        }\n                    ]\n                },\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"01234567890\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"All\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"+123456\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. Enhanced Air Ticket",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"{{hardcopy}}\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"PL\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"VI\",\n                                \"ExpireDate\": \"{{lccCreditCardExpiryDate}}\",\n                                \"Number\": {{lccCreditCardNumber}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "3. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"ticket1\", jsonData.flightTickets[0].number);",
											"pm.environment.set(\"ticket2\", jsonData.flightTickets[1].number);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Check Flight Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\"\n      },\n      {\n        \"number\": \"{{tkt2}}\"\n      }\n  ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Refund Flight Tickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\": [\n      {\n        \"number\": \"{{tkt}}\"\n      },\n      {\n        \"number\": \"{{tkt2}}\"\n      }\n  ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/refundFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"refundFlightTickets"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "6. GetBooking  - Display Flight Tickets only",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\",\r\n    \"returnOnly\":\r\n  [ \"TICKETS\"]\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "7. Cancel Booking /v1 Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "9 - Hotel Shop, Book,  Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Get Hotel Avail /v3.0.0 Sabre GDS Rate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"GetHotelAvailRQ\": {\r\n        \"SearchCriteria\": {\r\n            \"OffSet\": 1,\r\n            \"SortBy\": \"TotalRate\",\r\n            \"SortOrder\": \"ASC\",\r\n            \"PageSize\": 20,\r\n            \"TierLabels\": false,\r\n            \"GeoSearch\": {\r\n                \"GeoRef\": {\r\n                    \"Radius\": 200,\r\n                    \"UOM\": \"MI\",\r\n                    \"RefPoint\": {\r\n                        \"Value\": \"ORD\",\r\n                        \"ValueContext\": \"CODE\",\r\n                        \"RefPointType\": \"6\"\r\n                    }\r\n                }\r\n            },\r\n            \"RateInfoRef\": {\r\n                \"ConvertedRateInfoOnly\": false,\r\n                \"CurrencyCode\": \"USD\",\r\n                \"BestOnly\": \"2\",\r\n                \"PrepaidQualifier\": \"IncludePrepaid\",\r\n                \"StayDateRange\": {\r\n                    \"StartDate\": \"{{start_date}}\",\r\n                    \"EndDate\": \"{{end_date}}\"\r\n                },\r\n                \"Rooms\": {\r\n                    \"Room\": [\r\n                        {\r\n                            \"Index\": 1,\r\n                            \"Adults\": 2,\r\n                            \"Children\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                \"InfoSource\": \"100\"\r\n            },\r\n            \"HotelPref\": {\r\n                \"SabreRating\": {\r\n                    \"Min\": \"3\",\r\n                    \"Max\": \"5\"\r\n                }\r\n            },\r\n            \"ImageRef\": {\r\n                \"Type\": \"MEDIUM\",\r\n                \"LanguageCode\": \"EN\"\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3.0.0/get/hotelavail",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3.0.0",
										"get",
										"hotelavail"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail), [Resources](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Get Hotel Avail /v3.0.0 Latitude Longitude Warsaw",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"GetHotelAvailRQ\": {\r\n        \"SearchCriteria\": {\r\n            \"OffSet\": 1,\r\n            \"SortBy\": \"TotalRate\",\r\n            \"SortOrder\": \"ASC\",\r\n            \"PageSize\": 20,\r\n            \"TierLabels\": false,\r\n            \"GeoSearch\": {\r\n                \"GeoRef\": {\r\n                    \"Radius\": 200,\r\n                    \"UOM\": \"MI\",\r\n                    \"GeoCode\": {\r\n                        \"Latitude\": 52.2317,\r\n                        \"Longitude\": 21.0061\r\n                    }\r\n                },\r\n                \"GeoAttributes\": {\r\n                    \"Attributes\": [\r\n                        {\r\n                            \"Name\": \"LOCALAREA\",\r\n                            \"Value\": \"WARSAW AREA\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            \"RateInfoRef\": {\r\n                \"ConvertedRateInfoOnly\": false,\r\n                \"CurrencyCode\": \"USD\",\r\n                \"BestOnly\": \"2\",\r\n                \"PrepaidQualifier\": \"IncludePrepaid\",\r\n                \"StayDateRange\": {\r\n                    \"StartDate\": \"{{start_date}}\",\r\n                    \"EndDate\": \"{{end_date}}\"\r\n                },\r\n                \"Rooms\": {\r\n                    \"Room\": [\r\n                        {\r\n                            \"Index\": 1,\r\n                            \"Adults\": 2,\r\n                            \"Children\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                \"InfoSource\": \"100\"\r\n            },\r\n            \"HotelPref\": {\r\n                \"SabreRating\": {\r\n                    \"Min\": \"3\",\r\n                    \"Max\": \"5\"\r\n                }\r\n            },\r\n            \"ImageRef\": {\r\n                \"Type\": \"MEDIUM\",\r\n                \"LanguageCode\": \"EN\"\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3.0.0/get/hotelavail",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3.0.0",
										"get",
										"hotelavail"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail), [Resources](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Get Hotel Avail /v3.0.0 Latitude Longitude Krakow",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"GetHotelAvailRQ\": {\r\n        \"SearchCriteria\": {\r\n            \"OffSet\": 1,\r\n            \"SortBy\": \"TotalRate\",\r\n            \"SortOrder\": \"ASC\",\r\n            \"PageSize\": 20,\r\n            \"TierLabels\": false,\r\n            \"GeoSearch\": {\r\n                \"GeoRef\": {\r\n                    \"Radius\": 200,\r\n                    \"UOM\": \"MI\",\r\n                    \"GeoCode\": {\r\n                        \"Latitude\": 50.0541492,\r\n                        \"Longitude\": 19.9353576\r\n                    }\r\n                },\r\n                \"GeoAttributes\": {\r\n                    \"Attributes\": [\r\n                        {\r\n                            \"Name\": \"LOCALAREA\",\r\n                            \"Value\": \"CRACOW AREA\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            \"RateInfoRef\": {\r\n                \"ConvertedRateInfoOnly\": false,\r\n                \"CurrencyCode\": \"USD\",\r\n                \"BestOnly\": \"2\",\r\n                \"PrepaidQualifier\": \"IncludePrepaid\",\r\n                \"StayDateRange\": {\r\n                    \"StartDate\": \"{{start_date}}\",\r\n                    \"EndDate\": \"{{end_date}}\"\r\n                },\r\n                \"Rooms\": {\r\n                    \"Room\": [\r\n                        {\r\n                            \"Index\": 1,\r\n                            \"Adults\": 2,\r\n                            \"Children\": 0\r\n                        }\r\n                    ]\r\n                },\r\n                \"InfoSource\": \"100\"\r\n            },\r\n            \"HotelPref\": {\r\n                \"SabreRating\": {\r\n                    \"Min\": \"3\",\r\n                    \"Max\": \"5\"\r\n                }\r\n            },\r\n            \"ImageRef\": {\r\n                \"Type\": \"MEDIUM\",\r\n                \"LanguageCode\": \"EN\"\r\n            }\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3.0.0/get/hotelavail",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3.0.0",
										"get",
										"hotelavail"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail), [Resources](https://developer.sabre.com/docs/rest_apis/hotel/search/get_hotel_avail/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. Hotel Price Check /v3.0.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"HotelPriceCheckRQ\": {\r\n    \"RateInfoRef\": {\r\n      \"RateKey\": \"{{rate_key}}\"\r\n    }\r\n  }\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3.0.0/hotel/pricecheck",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3.0.0",
										"hotel",
										"pricecheck"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://beta.developer.sabre.com/docs/rest_apis/hotel/search/hotel_price_check), [Resources](https://beta.developer.sabre.com/docs/rest_apis/hotel/search/hotel_price_check/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 10\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    },\n    {\n      \"givenName\": \"Mary\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"hotel\": {\n    \"useCsl\": true,\n    \"bookingKey\": \"{{booking_key}}\",\n    \"corporateDiscountCode\": 6878700,\n    \"rooms\": [\n      {\n        \"isSmoking\": true,\n        \"bedTypeCode\": 3,\n        \"physicalDisabilityCode\": 3,\n        \"travelerIndices\": [\n          1,2\n        ]\n      }\n    ],\n    \"specialInstruction\": \"Need a wi-fi in the room.\",\n    \"paymentPolicy\": \"DEPOSIT\",\n    \"formOfPayment\": 1\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"{{creditCardNumber}}\",\n        \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n        \"expiryDate\": \"{{creditCardExpiryDate}}\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      },\n      {\n        \"type\": \"VIRTUAL_CARD\",\n        \"virtualCard\": {\n          \"customerAccountCode\": \"John\",\n          \"agencyEmail\": \"john@smith.family.priv\",\n          \"hotelFax\": \"012154654\",\n          \"hotelName\": \"Ilia Hotel and Luxury Suites\",\n          \"roomType\": \"2 double beds\",\n          \"roomDescription\": \"Deluxe Room, 2 Double Beds\",\n          \"rateAmount\": {\n            \"amount\": \"100.00\",\n            \"currencyCode\": \"USD\"\n          },\n          \"virtualCardCharges\": [\n            \"Breakfast\"\n          ]\n        }\n      },\n      {\n        \"type\": \"AGENCY_NAME\",\n        \"agencyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      },\n      {\n        \"type\": \"AGENCY_IATA\",\n        \"agencyIataNumber\": \"129345738\"\n      },\n      {\n        \"type\": \"CORPORATE\",\n        \"corporateId\": \"CC006\"\n      },\n      {\n        \"type\": \"COMPANY_NAME\",\n        \"companyAddress\": {\n          \"name\": \"John Smith\",\n          \"street\": \"1230 Ellen Ave, apt 10\",\n          \"city\": \"Dallas\",\n          \"stateProvince\": \"TX\",\n          \"postalCode\": \"75063\",\n          \"countryCode\": \"US\"\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. cancelBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "10 - Vehicle Shop, Book,  Cancel",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "0. SessionCreateRQ 1.0.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2021.01.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n        <SessionCreateRQ returnContextID=\"true\" Version=\"1.0.0\" xmlns=\"http://www.opentravel.org/OTA/2002/11\"/>\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/session_management/create_session), [Resources](https://developer.sabre.com/docs/read/soap_apis/session_management/create_session/resources)</b>\n\n- SessionCreateRQ v1.0.0 is the traditional method for authentication & authorization of **Stateful Sabre SOAP APIs**. \n- v1.0.0 requires the standard authentication parameters: username, password, organization & domain (see [Password Management](https://developer.sabre.com/guides/travel-agency/developer-guides/password-management) if you need to reset your password).\n- SessionCreateRQ v2.0.0 has been enhanced to provide better logging/tracking by requiring 2 additional parameters: clientId + clientSecret (see [Client IDs](https://developer.sabre.com/guides/travel-agency/developer-guides/sabre-api-client-ids) for further references).\n- Be mindful of these differences when choosing which version to use.\n<br/><br/>\n*note:* The below example depicts a **v1.0.0** request where only the 4 standard security attributes are required. <br/>\nIf you have successfully imported the environment file associated with this collection, you will have the following variables available for you to add your credentials: _{{username}}_, _{{password}}_, _{{pcc}}_, _{{client_id}}_ & _{{client_secret}}_.<br/><br/>\nThe general script logic in this collection will take the values you define in these variables and will use them in the execution of this service.\nUpon successfull execution, the corresponding token will be stored in a _{{token}}_ variable and will be automatically used in subsequent API calls. With the goal of making your life easier :)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetVehAvailRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const xml2js = require('xml2js');\r",
											"\r",
											"// Parse response and remove namespaces (prefixes)\r",
											"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
											"const parseString = xml2js.parseString;\r",
											"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
											"\r",
											"parseString(responseBody, parseOptions, (err, result) => {\r",
											"    const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].VehRentalRate[0].$.RateKey;\r",
											"    // const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].ConvertedVehRentalRate[0].$.RateKey;\r",
											"    pm.environment.set('carRateKey', rateKey);\r",
											"});\r",
											"\r",
											"console.log(\"Car Rate Key : \"+pm.environment.get('carRateKey'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\r\n\r\n<GetVehAvailRQ xmlns=\"http://services.sabre.com/car/avail/v2\" version=\"2.0.0\">\r\n    <SearchCriteria PickUpDate=\"{{start_date}}\" ReturnDate=\"{{end_date}}\" PickUpTime=\"10:30\" ReturnTime=\"16:30\" SortBy=\"Price\" SortOrder=\"ASC\">\r\n        <AirportRef>\r\n            <PickUpLocation LocationCode=\"MIA\"/>\r\n            <ReturnLocation LocationCode=\"MCO\"/>\r\n        </AirportRef>\r\n        <VendorPrefs>\r\n            <VendorPref Code=\"ZE\" />\r\n            <VendorPref Code=\"ZI\" />\r\n            <VendorPref Code=\"ET\" />\r\n        </VendorPrefs>\r\n        <RatePrefs ConvertedRateInfoOnly=\"false\" SupplierCurrencyOnly=\"true\"/>\r\n        <VehPrefs>\r\n            <VehPref>\r\n                <VehType>ECAR</VehType>\r\n            </VehPref>\r\n        </VehPrefs>\r\n        <LocPolicyRef Include=\"true\"/>\r\n        <ImageRef>\r\n            <Image Type=\"ORIGINAL\"/>\r\n        </ImageRef>\r\n    </SearchCriteria>\r\n</GetVehAvailRQ>\r\n\r\n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "VehPriceCheckRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const xml2js = require('xml2js');\r",
											"\r",
											"// Parse response and remove namespaces (prefixes)\r",
											"// Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs\r",
											"const parseString = xml2js.parseString;\r",
											"const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };\r",
											"\r",
											"parseString(responseBody, parseOptions, (err, result) => {\r",
											"    const bookingKey = result.Envelope.Body[0].VehPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;\r",
											"    pm.environment.set('carBookingKey', bookingKey);\r",
											"});\r",
											"\r",
											"console.log(\"Car Booking Key : \"+pm.environment.get('carBookingKey'))"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\r\n\r\n\r\n<VehPriceCheckRQ xmlns=\"http://services.sabre.com/car/pricecheck/v1_0_0\" version=\"1.0.0\">\r\n    <VehRateInfoRef RateKey=\"{{car_rate_key}}\"/>\r\n</VehPriceCheckRQ>\r\n\r\n\r\n\r\n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"passed and returned values of x-request-id and ConversationId must be equal\", function () {\r",
											"    pm.expect(pm.response.headers.get('x-request-id')).to.eql('dnjas82bd102bd912requestid');\r",
											"    pm.expect(pm.response.headers.get('ConversationId')).to.eql('dnjas82bd102bd912conversationid');\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "x-request-id",
										"value": "dnjas82bd102bd912requestid",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "dnjas82bd102bd912conversationid",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agency\": {\n    \"address\": {\n      \"name\": \"John Smith\",\n      \"street\": \"1230 Ellen Ave, apt 11\",\n      \"city\": \"Dallas\",\n      \"stateProvince\": \"TX\",\n      \"postalCode\": \"75063\",\n      \"countryCode\": \"US\",\n      \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n    },\n    \"agencyCustomerNumber\": \"1234567\",\n    \"ticketingPolicy\": \"TODAY\"\n  },\n  \"travelers\": [\n    {\n      \"givenName\": \"John\",\n      \"surname\": \"Kowalski\",\n      \"passengerCode\": \"ADT\"\n    }\n  ],\n  \"contactInfo\": {\n    \"emails\": [\n      \"travel@sabre.com\",\n      \"travel2@sabre.com\"\n    ],\n    \"phones\": [\n      \"+123456\"\n    ]\n  },\n  \"car\": {\n    \"bookingKey\": \"{{carBookingKey}}\"\n  },\n  \"payment\": {\n    \"formsOfPayment\": [\n      {\n        \"type\": \"PAYMENTCARD\",\n        \"cardTypeCode\": \"VI\",\n        \"cardNumber\": \"{{creditCardNumber}}\",\n        \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n        \"expiryDate\": \"{{creditCardExpiryDate}}\",\n        \"cardHolder\": {\n          \"givenName\": \"John\",\n          \"surname\": \"Smith\",\n          \"email\": \"john@smith.family.priv\",\n          \"phone\": \"+1-555-123-4567\",\n          \"address\": {\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n          }\n        }\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. cancelBooking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "11 - NDC Multi Adult Travelers - 3 travelers with return flight",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max /v4 (Stateless ATK) SIN, SYD",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
											"",
											"",
											"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
											"",
											"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
											"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
											"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
											"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
											"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
											"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
											"",
											" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
											" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
											" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Offers Price /v1 (Stateless ATK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
											"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
											"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "conversation-id-value",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateBooking NDC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
											"    pm.response.to.have.header(\"x-request-id\");\r",
											"    pm.response.to.have.header(\"ConversationId\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 5000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\"\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "getBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "12 - NDC Multi Adult Travelers - 3 travelers with return flight  extra contact information",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max /v4 (Stateless ATK) SIN, SYD",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
											"",
											"",
											"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
											"",
											"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
											"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
											"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
											"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
											"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
											"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
											"",
											" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
											" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
											" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Offers Price /v1 (Stateless ATK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
											"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
											"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "conversation-id-value",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateBooking NDC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
											"    pm.response.to.have.header(\"x-request-id\");\r",
											"    pm.response.to.have.header(\"ConversationId\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "getBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "13 - NDC - Extra contact information - identity documents (single traveler) -  DOCO (VISA, KTN, RA, PASSPORT)",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max /v3 (Stateless ATK) DFW, LAX",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
											"",
											"",
											"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
											"",
											"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
											"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
											"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
											"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
											"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
											"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
											"",
											" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
											" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
											" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Offers Price /v1 (Stateless ATK)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "conversation-id-value",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateBooking NDC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
											"    pm.response.to.have.header(\"x-request-id\");\r",
											"    pm.response.to.have.header(\"ConversationId\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "ConversationId",
										"value": "conversation-id-value",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"UNDEFINED\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "getBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "14 - NDC Cancel  order and void corresponding flight tickets",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
											"",
											"",
											"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
											"",
											"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
											"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
											"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
											"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
											"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
											"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
											"",
											" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
											" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
											" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"LAX\"\n                },\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. Offers Price /v1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "conversation-id-value",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. createBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
											"    pm.response.to.have.header(\"x-request-id\");\r",
											"    pm.response.to.have.header(\"ConversationId\");\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 5000,\n\t\"flightOffer\": {\n\t\t\"offerId\": \"{{price_offer_id}}\",\n\t\t\"selectedOfferItems\": [\n\t\t\t\"{{price_offer_item_id}}\"\n\t\t]\n\t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"id\": \"{{price_passenger_id}}\",\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Smith\",\n\t\t\t\"birthDate\": \"1980-12-02\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"age\": 43,\n                        \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2029-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA \",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\"\n      ],\n      \"phones\": [\n        \"123456\"\n      ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"payment\": {\n                \"primaryFormOfPayment\": 2\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"CASH\"\n        },\n        {\n            \"cardTypeCode\": \"AX\",\n            \"cardNumber\": \"{{ndcCreditCardNumber}}\",\n            \"expiryDate\": \"{{ndcCreditCardExpiryDate}}\",\n            \"type\": \"PAYMENTCARD\",\n            \"authentications\": [{\n                \"channelCode\" :\"MO\"\n            }]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "5. getBooking - assert that order is fulfilled",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"\r",
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"Flight object should be removed after cancelation\", function () {\r",
											"    pm.expect(response).not.to.have.property('flights');\r",
											"});\r",
											"\r",
											"response.flightTickets.forEach(function(flights) {\r",
											"\r",
											"    pm.test(\"All flight tickets should have Voided status name\", function () {\r",
											"        let ticketStatusName = flights.ticketStatusName;\r",
											"        pm.expect(ticketStatusName).to.eql('Voided');\r",
											"        });\r",
											"\r",
											"    pm.test(\"All flight tickets should have TV status code\", function () {\r",
											"        let ticketStatusCode = flights.ticketStatusCode;\r",
											"        pm.expect(ticketStatusCode).to.eql('OV');\r",
											"        });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "U9PK",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "7. checkFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"\r",
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"let offerItemId = response.cancelOffers[0].offerItemId;\r",
											"console.log(response.cancelOffers[0].offerItemId + \" <- offer Item Id\");\r",
											"postman.setEnvironmentVariable(\"offerItemId\", offerItemId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "9. cancelBooking - cancelAll and void corresponding tickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"cancelAll\": true,\n    \"offerItemId\": \"{{offerItemId}}\",\n    \"retrieveBooking\": false,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "10. getBooking - assert that order is cancelled and tickets are voided",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"\r",
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"Flight object should be removed after cancelation\", function () {\r",
											"    pm.expect(response).not.to.have.property('flights');\r",
											"});\r",
											"\r",
											"response.flightTickets.forEach(function(flights) {\r",
											"\r",
											"    pm.test(\"All flight tickets should have Voided status name\", function () {\r",
											"        let ticketStatusName = flights.ticketStatusName;\r",
											"        pm.expect(ticketStatusName).to.eql('Voided');\r",
											"        });\r",
											"\r",
											"    pm.test(\"All flight tickets should have TV status code\", function () {\r",
											"        let ticketStatusCode = flights.ticketStatusCode;\r",
											"        pm.expect(ticketStatusCode).to.eql('OV');\r",
											"        });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "U9PK",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "15 - NDC All supported airlines",
					"item": [
						{
							"name": "AA airline",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
													"",
													"",
													"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
													"",
													"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
													"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
													"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
													"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
													"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
													"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
													"",
													" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
													" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
													" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
													"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
													"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking NDC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
													"    pm.response.to.have.header(\"x-request-id\");\r",
													"    pm.response.to.have.header(\"ConversationId\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "ConversationId",
												"value": "conversation-id-value",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 53,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"SECURE_FLIGHT_PASSENGER_DATA\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 52,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"givenName\": \"Jill\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"placeOfBirth\": \"WAW\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"FEMALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 51,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2088-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1983-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "getBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('airline_code', 'AA');",
											"pm.environment.set('from_airport_code', 'DFW');",
											"pm.environment.set('to_airport_code', 'LAX');"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "QF airline",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
													"",
													"",
													"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
													"",
													"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
													"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
													"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
													"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
													"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
													"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
													"",
													" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
													" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
													" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
													"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
													"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking NDC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
													"    pm.response.to.have.header(\"x-request-id\");\r",
													"    pm.response.to.have.header(\"ConversationId\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 53,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 52,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"givenName\": \"Jill\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"placeOfBirth\": \"WAW\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"FEMALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 51,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2088-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1983-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "getBooking Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('airline_code', 'QF');",
											"pm.environment.set('from_airport_code', 'SYD');",
											"pm.environment.set('to_airport_code', 'ADL');"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "UA airline",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
													"",
													"",
													"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
													"",
													"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
													"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
													"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
													"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
													"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
													"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
													"",
													" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
													" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
													" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
													"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
													"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking NDC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
													"    pm.response.to.have.header(\"x-request-id\");\r",
													"    pm.response.to.have.header(\"ConversationId\");\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 53,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2026-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 52,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"givenName\": \"Jill\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"gender\": \"MALE\"\n                },\n\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 51,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2088-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1983-12-02\",\n                    \"gender\": \"MALE\"\n                },\n\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "getBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('airline_code', 'UA');",
											"pm.environment.set('from_airport_code', 'IAH');",
											"pm.environment.set('to_airport_code', 'DFW');"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "QR airline",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
													"",
													"",
													"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
													"",
													"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
													"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
													"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
													"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
													"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
													"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
													"",
													" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
													" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
													" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
													"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
													"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking NDC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
													"    pm.response.to.have.header(\"x-request-id\");\r",
													"    pm.response.to.have.header(\"ConversationId\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 53,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 52,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"givenName\": \"Jill\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"placeOfBirth\": \"WAW\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"FEMALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 51,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2088-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1983-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "getBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('airline_code', 'QR');",
											"pm.environment.set('from_airport_code', 'DFW');",
											"pm.environment.set('to_airport_code', 'DOH');"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "SQ airline",
							"item": [
								{
									"name": "0. REST Authorize ATK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic {{secret}}",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "grant_type=client_credentials"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v2/auth/token",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v2",
												"auth",
												"token"
											]
										},
										"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Bargain Finder Max /v3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const itinNumber = 0;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
													"",
													"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
													"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
													"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
													"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
													"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
													"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
													"",
													"",
													"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
													"",
													"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
													"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
													"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
													"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
													"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
													"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
													"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
													"",
													" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
													" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
													" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "{{conv_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 3\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v4/offers/shop",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v4",
												"offers",
												"shop"
											]
										},
										"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
									},
									"response": []
								},
								{
									"name": "Offers Price /v1 (Stateless ATK)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
													"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
													"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[2].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Conversation-ID",
												"value": "conversation-id-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/offers/price",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"offers",
												"price"
											]
										}
									},
									"response": []
								},
								{
									"name": "CreateBooking NDC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});\r",
													"\r",
													"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
													"    pm.response.to.have.header(\"x-request-id\");\r",
													"    pm.response.to.have.header(\"ConversationId\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"asynchronousUpdateWaitTime\": 3000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 53,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\",\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 52,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2025-07-09\",\n                    \"issuingCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"givenName\": \"Jill\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"CA\",\n                    \"residenceCountryCode\": \"CA\",\n                    \"placeOfBirth\": \"WAW\",\n                    \"birthDate\": \"1981-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"FEMALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"CA\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"age\": 51,\n            \"loyaltyPrograms\": [\n                {\n                    \"supplierCode\": \"AA\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"tierLevel\": 3,\n                    \"receiverCode\": \"AA\"\n                },\n                {\n                    \"supplierCode\": \"OM\",\n                    \"programType\": \"FREQUENT_FLYER\",\n                    \"programNumber\": \"{{$randomBankAccount}}\",\n                    \"receiverCode\": \"OM\"\n                }\n            ],\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2088-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"givenName\": \"Jack\",\n                    \"surname\": \"Smith\",\n                    \"birthDate\": \"1983-12-02\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"VISA\",\n                    \"hostCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"PL\",\n                    \"placeOfBirth\": \"KRK\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"placeOfIssue\": \"PL\",\n                    \"issueDate\": \"2021-12-02\",\n                    \"expiryDate\": \"2050-07-09\",\n                    \"gender\": \"MALE\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"KNOWN_TRAVELER_NUMBER\",\n                    \"issuingCountryCode\": \"US\"\n                },\n                {\n                    \"documentNumber\": \"{{$randomBankAccount}}\",\n                    \"documentType\": \"REDRESS_NUMBER\",\n                    \"issuingCountryCode\": \"NL\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"createBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								},
								{
									"name": "getBooking",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is ok\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"response must be valid and have a body\", function () {\r",
													"    // this assertion also checks if a body  exists\r",
													"     pm.response.to.be.json; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											},
											{
												"key": "X-Sabre-Group",
												"value": "G7RE",
												"type": "text"
											},
											{
												"key": "X-Sabre-Current-City",
												"value": "G7RE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
										},
										"url": {
											"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
											"host": [
												"{{rest_endpoint}}"
											],
											"path": [
												"v1",
												"trip",
												"orders",
												"getBooking"
											]
										},
										"description": "### <br>"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('airline_code', 'SQ');",
											"pm.environment.set('from_airport_code', 'SIN');",
											"pm.environment.set('to_airport_code', 'LAX');"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"const flightsCombinationsNdcSupported = [",
									"    {",
									"        airlineCode: 'AA',",
									"        fromAirportCode: 'DFW',",
									"        toAirportCode: 'LAX'",
									"    }, ",
									"",
									"    {",
									"        airlineCode: 'QF',",
									"        fromAirportCode: 'SYD',",
									"        toAirportCode: 'ADL'",
									"    }, ",
									"    {",
									"        airlineCode: 'UA',",
									"        fromAirportCode: 'IAH',",
									"        toAirportCode: 'DFW'",
									"    },",
									"    {",
									"        airlineCode: 'QR',",
									"        fromAirportCode: 'DIA',",
									"        toAirportCode: 'MLE'",
									"    },",
									"    {",
									"        airlineCode: 'SQ',",
									"        fromAirportCode: 'HKG',",
									"        toAirportCode: 'CGK'",
									"    },",
									"    {",
									"        airlineCode: 'TA',",
									"        fromAirportCode: 'MGA',",
									"        toAirportCode: 'MIA'",
									"    },",
									"    {",
									"        airlineCode: 'AV',",
									"        fromAirportCode: 'MDE',",
									"        toAirportCode: 'BOG'",
									"    }",
									"",
									"];",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const action = request.url;",
									"",
									"if (action.includes(\"getBooking\") && pm.environment.get('isGetBookingResponseValid')) {",
									"",
									"    let response = pm.response.json();",
									"    assertions.assertThatArrayLengthIsAsExpected(response.travelers, 3, \"travelers\");",
									"",
									"    assertions.assertThatArrayLengthIsAsExpected(response.flights, 2, \"flights\");",
									"",
									"    let expectedAirlineCode = pm.environment.get('airline_code');",
									"    response.flights.forEach(function (flight) {",
									"        pm.test(\"All flight should be with \" + expectedAirlineCode + \" airline code\", function () {",
									"            pm.expect(flight.airlineCode).to.equal(expectedAirlineCode);",
									"        });",
									"    });",
									"",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "16 - ATPCO - Check if the ticket is refundable and/or exchangeable",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"DFW\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SFO\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"FlexibleFares\": {\n                    \"FareParameters\": [\n                        {\n                            \"Cabin\": {\n                                \"Type\": \"J\"\n                            }\n                        },\n                        {\n                            \"ExcludeRestricted\": {\n                                \"Ind\": true\n                            }\n                        }\n                    ]\n                },\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - ATPCO payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"John\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Kowalski\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"+1-555-123-4567\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"givenName\": \"All\",\n            \"surname\": \"Kowalski\",\n            \"birthDate\": \"2000-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"01234567890\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"2024-07-09\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"All\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"Kowalski\",\n                    \"birthDate\": \"1980-12-02\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"{{$randomPhoneNumberExt}}\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{oMarketingAirline}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"marriageGroup\": false,\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{creditCardNumber}}\",\n                \"cardSecurityCode\": \"{{cardSecurityCode}}\",\n                \"expiryDate\": \"{{creditCardExpiryDate}}\",\n                \"cardHolder\": {\n                    \"givenName\": \"John\",\n                    \"surname\": \"Smith\",\n                    \"email\": \"john@smith.family.priv\",\n                    \"phone\": \"+1-555-123-4567\",\n                    \"address\": {\n                        \"street\": \"1230 Ellen Ave, apt 10\",\n                        \"city\": \"Dallas\",\n                        \"stateProvince\": \"TX\",\n                        \"postalCode\": \"75063\",\n                        \"countryCode\": \"US\"\n                    }\n                }\n            },\n            {\n                \"type\": \"CASH\"\n            },\n            {\n                \"type\": \"CHECK\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"pm.environment.set('tkt', jsonData.flightTickets[0].number);\r",
											"pm.environment.set('tkt2', jsonData.flightTickets[1].number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Check ticket rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "U9PK",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tickets\": [\n        {\n            \"number\": \"{{tkt}}\"\n        },\n        {\n            \"number\": \"{{tkt2}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "6. Cancel Booking and void ticket",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "17 - ATPCO - Check if the ticket is refundable and override refund commission",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"MaxStopsQuantity\": 0,\n            \"TPA_Extensions\": {\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n            },\n            \"VendorPref\": [\n                {\n                    \"Code\": \"AA\",\n                    \"PreferLevel\": \"Preferred\"\n                }\n            ]\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. createBooking - ATPCO payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"John\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"1970-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"0123456789\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"John\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t},\n        {\n\t\t\t\"givenName\": \"All\",\n\t\t\t\"surname\": \"Kowalski\",\n\t\t\t\"birthDate\": \"2000-01-23\",\n\t\t\t\"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n            {\n                \"documentNumber\": \"01234567890\",\n                \"documentType\": \"PASSPORT\",\n                \"expiryDate\": \"2024-07-09\",\n                \"issuingCountryCode\": \"US\",\n                \"residenceCountryCode\": \"US\",\n                \"givenName\": \"All\",\n                \"middleName\": \"Jack\",\n                \"surname\": \"Kowalski\",\n                \"birthDate\": \"1980-12-02\",\n                \"gender\": \"MALE\"\n            }\n            ]\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n      \"emails\": [\n        \"travel@sabre.com\",\n\t\t\"travel2@sabre.com\"\n      ],\n      \"phones\": [\n        \"{{$randomPhoneNumberExt}}\"\n      ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n\t\t\t{\n\t\t\t\t\"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{oMarketingAirline}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n\t\t\t\t\"bookingClass\": \"Y\",\n\t\t\t\t\"marriageGroup\": false,\n\t\t\t\t\"flightStatusCode\": \"NN\"\n\t\t\t}\n\t\t],\n        \"flightPricing\": [\n        {\n        }\n    ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n        \"name\": \"John Smith\",\n        \"street\": \"1230 Ellen Ave, apt 10\",\n        \"city\": \"Dallas\",\n        \"stateProvince\": \"TX\",\n        \"postalCode\": \"75063\",\n        \"countryCode\": \"US\"\n        }\n  } \n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. fulfillFlightTickets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"const jsonData = JSON.parse(responseBody);\r",
											"pm.environment.set('bookingSignature', jsonData.bookingSignature);\r",
											"\r",
											"if(jsonData.hotels!=undefined)\r",
											"{\r",
											"    pm.environment.set('hotelId', jsonData.hotels[0].itemId)\r",
											"    console.log(\"Hotel Id : \"+pm.environment.get('hotelId'));\r",
											"}\r",
											"\r",
											"console.log(\"Booking Signature : \"+pm.environment.get('bookingSignature'));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "G7RE",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"fulfillments\": [\n        {\n            \"ticketingQualifiers\": {\n                \"priceQuoteRecordIds\": [\n                    \"1\"\n                ]\n            },\n            \"payment\": {\n                \"primaryFormOfPayment\": 1\n            }\n        }\n    ],\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"{{hardcopy}}\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"{{country_code}}\"\n            }\n        }\n    ],\n    \"formsOfPayment\": [\n        {\n            \"type\": \"PAYMENTCARD\",\n            \"cardTypeCode\": \"VI\",\n            \"cardNumber\": \"{{lccCreditCardNumber}}\",\n            \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n            \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/fulfillFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"fulfillFlightTickets"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. GetBooking  - Display",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"pm.environment.set('tkt', jsonData.flightTickets[0].number);\r",
											"pm.environment.set('tkt2', jsonData.flightTickets[1].number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"confirmationId\": \"{{pnr}}\"\r\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "5. Check ticket rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									},
									{
										"key": "X-Sabre-Group",
										"value": "U9PK",
										"type": "text"
									},
									{
										"key": "X-Sabre-Current-City",
										"value": "U9PK",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tickets\": [\n        {\n            \"number\": \"{{tkt}}\",\n            \"refundQualifiers\": {\n                \"overrideCancelFee\": \"0.00\",\n                \"commissionAmount\": \"15.00\"\n            }\n        },\n        {\n            \"number\": \"{{tkt2}}\",\n            \"refundQualifiers\": {\n                \"overrideCancelFee\": \"0.00\",\n                \"commissionAmount\": \"15.00\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/checkFlightTickets",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"checkFlightTickets"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "6. Cancel Booking and void ticket",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "18 - NDC Multiple traveler types (Adult+Child)",
					"item": [
						{
							"name": "0. REST Authorize ATK Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
											" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
											" pm.environment.set('shop_offer_passenger_item_id_adt', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
											"",
											"  pm.environment.set('shop_offer_passenger_item_id_cnn', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[1].passengerInfo.offerItemId);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        },\n                        {\n                            \"Code\": \"CNN\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "2. Offers Price /v1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set('price_passenger_id1', jsonData.response.offers[0].offerItems[0].passengers[0].id);\r",
											"pm.environment.set('price_passenger_id2', jsonData.response.offers[0].offerItems[1].passengers[0].id);\r",
											"pm.environment.set('price_passenger_id3', jsonData.response.offers[0].offerItems[0].passengers[1].id);\r",
											"\r",
											"pm.environment.set('price_offer_id', jsonData.response.offers[0].id);\r",
											"pm.environment.set('price_offer_item_id_adt', jsonData.response.offers[0].offerItems[0].id);\r",
											"pm.environment.set('price_offer_item_id_cnn', jsonData.response.offers[0].offerItems[1].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "conversation-id-value",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id_adt}}\",\n                \"{{shop_offer_passenger_item_id_cnn}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. CreateBooking NDC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is ok\", function () {\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"response must be valid and have a body\", function () {\r",
											"    // this assertion also checks if a body  exists\r",
											"     pm.response.to.be.json; \r",
											"});\r",
											"\r",
											"pm.test(\"response must include x-request-id and ConversationId\", function () {\r",
											"    pm.response.to.have.header(\"x-request-id\");\r",
											"    pm.response.to.have.header(\"ConversationId\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asynchronousUpdateWaitTime\": 5000,\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id_adt}}\",\n            \"{{price_offer_item_id_cnn}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"2019-02-23\",\n            \"passengerCode\": \"CNN\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. getBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					]
				},
				{
					"name": "19 - ATPCO - Air search, Ancillaries, Book",
					"item": [
						{
							"name": "0. REST Authorize ATK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const itinNumber = 0;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"pm.environment.set(\"FlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"ResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"DepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"DepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"ArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"MarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"OperatingAirline\", outboundData.carrier.operating);",
											"",
											"",
											"var returnFlightData = jsonData.groupedItineraryResponse.scheduleDescs[1];",
											"",
											"pm.environment.set(\"rFlightNumber\", returnFlightData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"rResBookDesigCode\", returnFlightData.ResBookDesigCode);",
											"pm.environment.set(\"rDepartureTime\", returnFlightData.departure.time.substring(0, 5));",
											"pm.environment.set(\"rDepartureAirport\", returnFlightData.departure.airport);",
											"pm.environment.set(\"rArrivalAirport\", returnFlightData.arrival.airport);",
											"pm.environment.set(\"rMarketingAirline\", returnFlightData.carrier.marketing);",
											"pm.environment.set(\"rOperatingAirline\", returnFlightData.carrier.operating);",
											"",
											" pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
											" pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
											" pm.environment.set('shop_offer_passenger_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"RPH\": \"0\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{airline_code}}\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"50ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetAncillaryOffersRQ 3.1.0",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//change anciallary seq num to get diff ancillary\r",
											"pm.environment.set('ancillarySeqNum', 0);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\r\n\r\n<gao:GetAncillaryOffersRQ version=\"3.1.0\" xmlns:anc=\"http://services.sabre.com/merch/ancillary/v03\" xmlns:flt=\"http://services.sabre.com/merch/flight/v03\" xmlns:gao=\"http://services.sabre.com/merch/ancillary/offer/v03\" xmlns:itin=\"http://services.sabre.com/merch/itinerary/v03\" xmlns:pax=\"http://services.sabre.com/merch/passenger/v03\">\r\n    <gao:RequestType>payload</gao:RequestType>\r\n    <gao:RequestMode>booking</gao:RequestMode>\r\n    <gao:QueryByItinerary>\r\n        <gao:QueryPassengerItinerary>\r\n            <gao:Passenger id=\"pax_1\" type=\"ADT\">\r\n                <pax:PersonName>\r\n                    <pax:First>John</pax:First>\r\n                    <pax:Last>Smith</pax:Last>\r\n                </pax:PersonName>\r\n            </gao:Passenger>\r\n            <gao:PassengerItinerary>\r\n                <gao:PassengerSegment segmentRef=\"seg_1\">\r\n                    <itin:FareBreakAssociation FareInfoRef=\"fare_1\"/>\r\n                </gao:PassengerSegment>\r\n            </gao:PassengerItinerary>\r\n        </gao:QueryPassengerItinerary>\r\n\r\n        <gao:Segment id=\"seg_1\">\r\n            <itin:FlightDetail id=\"flight_1\">\r\n                <flt:Airline>{{airline_code}}</flt:Airline>\r\n                <flt:FlightNumber>{{flight_number}}</flt:FlightNumber>\r\n                <flt:DepartureAirport>{{from_airport_code}}</flt:DepartureAirport>\r\n                <flt:DepartureDate>{{start_date}}</flt:DepartureDate>\r\n                <flt:DepartureTime>06:15:00</flt:DepartureTime>\r\n                <flt:ArrivalAirport>{{to_airport_code}}</flt:ArrivalAirport>\r\n                <flt:ClassOfService>Y</flt:ClassOfService>\r\n            </itin:FlightDetail>\r\n        </gao:Segment>\r\n        <gao:FareInfo id=\"fare_1\">\r\n            <FareBasisCode>VLRV2NL</FareBasisCode>\r\n        </gao:FareInfo>\r\n    </gao:QueryByItinerary>\r\n</gao:GetAncillaryOffersRQ>\r\n\r\n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/air/search/get_ancillary_offers), [Resources](https://developer.sabre.com/docs/read/soap_apis/air/search/get_ancillary_offers/resources), [Legacy Versions](https://developer.sabre.com/docs/read/soap_apis/air/search/get_ancillary_offers/legacy)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. CreateBooking - with ancillaries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"ancillaries\": [\n                {\n                    \"reasonForIssuance\": \"{{ancillaryReasonForIssuance}}\",\n                    \"subcode\": \"{{ancillarySubCode}}\",\n                    \"airlineCode\": \"{{airline_code}}\",\n                    \"electronicMiscellaneousDocumentType\": \"{{ancillaryElectronicMiscDocType}}\",\n                    \"basePrice\": \"{{ancillaryBasePrice}}\",\n                    \"currencyCode\": \"{{ancillaryCurrencyCode}}\",\n                    \"groupCode\": \"{{ancillaryGroup}}\",\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": {{flight_number}},\n                \"airlineCode\": \"{{airline_code}}\",\n                \"fromAirportCode\": \"{{from_airport_code}}\",\n                \"toAirportCode\": \"{{to_airport_code}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"22:30\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\"\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"baggageAllowance\": [\n                    {\n                        \"totalWeightInKilograms\": 23,\n                        \"baggagePieces\": 1,\n                        \"flightIndices\": [\n                            1\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. GetBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('airline_code', 'EY');",
									"pm.environment.set('from_airport_code', 'AMS');",
									"pm.environment.set('to_airport_code', 'AUH');",
									"",
									"// pm.environment.set('airline_code', 'LH');",
									"// pm.environment.set('from_airport_code', 'FRA');",
									"// pm.environment.set('to_airport_code', 'LHR');",
									"",
									"// pm.environment.set('airline_code', 'UA');",
									"// pm.environment.set('from_airport_code', 'IAH');",
									"// pm.environment.set('to_airport_code', 'DFW');",
									"",
									"// pm.environment.set('airline_code', 'AA');",
									"// pm.environment.set('from_airport_code', 'DFW');",
									"// pm.environment.set('to_airport_code', 'LAX');",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "20 - LCC - Air Search, Ancillaries, Book",
					"item": [
						{
							"name": "SessionCreateRQ 1.0.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>AA</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "1. Shop (BFM)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);",
											"",
											"const outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"N87F\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{lcc_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetAncillaryOffersRQ 3.1.0 - to get diff ancillary check pre-request script tab",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//change anciallary seq num to get diff ancillary\r",
											"pm.environment.set('ancillarySeqNum', 0);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const xml2js = require('xml2js');\r",
											"const parseString = xml2js.parseString;\r",
											"const parseOptions = {tagNameProcessors: [xml2js.processors.stripPrefix]};\r",
											"\r",
											"parseString(responseBody, parseOptions, (err, result) => {\r",
											"    const ancillarySeqNum = pm.environment.get('ancillarySeqNum');\r",
											"\r",
											"    const BASE_ANCILLARY = result.Envelope.Body[0].GetAncillaryOffersRS[0].AncillaryDefinition[ancillarySeqNum];\r",
											"    const ancillaryId = BASE_ANCILLARY.$.id;\r",
											"    const ancillarySubCode = BASE_ANCILLARY.SubCode[0];\r",
											"    const ancillaryVendor = BASE_ANCILLARY.Vendor[0];\r",
											"    const ancillarySpecialService = BASE_ANCILLARY.SpecialService[0];\r",
											"    const ancillaryGroup = BASE_ANCILLARY.Group[0];\r",
											"    const ancillaryElectronicMiscDocType = BASE_ANCILLARY.ElectronicMiscDocType[0]._;\r",
											"    const ancillaryCommercialName = BASE_ANCILLARY.CommercialName[0];\r",
											"    const ancillaryReasonForIssuance = BASE_ANCILLARY.ReasonForIssuance[0]._;\r",
											"    const ancillaryBasePrice = result.Envelope.Body[0].GetAncillaryOffersRS[0].Offers[ancillarySeqNum].AncillaryFee[0].TotalBaseEquiv[0].Amount[0]._;\r",
											"    const ancillaryCurrencyCode = result.Envelope.Body[0].GetAncillaryOffersRS[0].Offers[ancillarySeqNum].AncillaryFee[0].TotalBaseEquiv[0].Amount[0].$.currency;\r",
											"\r",
											"    console.log(\"ancillaryCommercialName: \" + ancillaryCommercialName);\r",
											"    console.log(\"ancillarySpecialService: \" + ancillarySpecialService);\r",
											"    console.log(\"ancillaryId: \" + ancillaryId);\r",
											"    console.log(\"ancillarySubCode: \" + ancillarySubCode);\r",
											"    console.log(\"ancillaryVendor: \" + ancillaryVendor);\r",
											"    console.log(\"ancillaryGroup: \" + ancillaryGroup);\r",
											"    console.log(\"ancillaryElectronicMiscDocType: \" + ancillaryElectronicMiscDocType);\r",
											"    console.log(\"ancillaryReasonForIssuance: \" + ancillaryReasonForIssuance);\r",
											"    console.log(\"ancillaryBasePrice: \" + ancillaryBasePrice);\r",
											"    console.log(\"ancillaryCurrencyCode: \" + ancillaryCurrencyCode);\r",
											"\r",
											"    pm.environment.set('ancillaryId', ancillaryId);\r",
											"    pm.environment.set('ancillarySpecialService', ancillarySpecialService);\r",
											"    pm.environment.set('ancillaryReasonForIssuance', ancillaryReasonForIssuance);\r",
											"    pm.environment.set('ancillarySubCode', ancillarySubCode);\r",
											"    pm.environment.set('ancillaryVendor', ancillaryVendor);\r",
											"    pm.environment.set('ancillaryGroup', ancillaryGroup);\r",
											"    pm.environment.set('ancillaryElectronicMiscDocType', ancillaryElectronicMiscDocType);\r",
											"    pm.environment.set('ancillaryBasePrice', ancillaryBasePrice);\r",
											"    pm.environment.set('ancillaryCurrencyCode', ancillaryCurrencyCode);\r",
											"    pm.environment.set(\"ancillaryCommercialName\", ancillaryCommercialName);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\r\n\r\n<ns9:GetAncillaryOffersRQ xmlns:ns2=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:ns1=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns4=\"http://www.w3.org/1999/xlink\" xmlns:ns3=\"http://www.ebxml.org/namespaces/messageHeader\" xmlns:ns6=\"http://schemas.xmlsoap.org/ws/2002/12/secext\" xmlns:ns5=\"urn:schemas-sabre-com:soap-header-debug\" xmlns:ns8=\"http://services.sabre.com/STL_Payload/v02_01\" xmlns:ns13=\"http://services.sabre.com/merch/request/v03\" xmlns:ns9=\"http://services.sabre.com/merch/ancillary/offer/v03\" xmlns:ns12=\"http://services.sabre.com/merch/baggage/v03\" xmlns:ns11=\"http://services.sabre.com/merch/common/v03\" xmlns:ns10=\"http://services.sabre.com/merch/ancillary/v03\" xmlns:ns16=\"http://services.sabre.com/merch/flight/v03\" xmlns:ns15=\"http://services.sabre.com/merch/itinerary/v03\" xmlns:ns14=\"http://services.sabre.com/merch/passenger/v03\" version=\"3.0.0\">\r\n  <ns9:RequestType>payload</ns9:RequestType>\r\n  <ns9:RequestMode>booking</ns9:RequestMode>\r\n  <ns9:ClientContext clientType=\"nSRW\">\r\n  </ns9:ClientContext>\r\n  <ns9:QueryByItinerary>\r\n    <ns9:QueryPassengerItinerary>\r\n      <ns9:Passenger id=\"p1\" type=\"ADT\"/>\r\n      <ns9:PassengerItinerary>\r\n        <ns9:PassengerSegment segmentRef=\"seg_1\"/>\r\n      </ns9:PassengerItinerary>\r\n    </ns9:QueryPassengerItinerary>\r\n    <ns9:Segment id=\"seg_1\">\r\n      <ns15:FlightDetail id=\"flight_1\">\r\n        <ns16:Airline>U2</ns16:Airline>\r\n        <ns16:FlightNumber>{{oFlightNumber}}</ns16:FlightNumber>\r\n        <ns16:DepartureAirport>{{oDepartureAirport}}</ns16:DepartureAirport>\r\n        <ns16:DepartureDate>{{start_date}}</ns16:DepartureDate>\r\n        <ns16:DepartureTime>{{oDepartureTime}}</ns16:DepartureTime>\r\n        <ns16:ArrivalAirport>{{oArrivalAirport}}</ns16:ArrivalAirport>\r\n        <ns16:OperatingAirline>U2</ns16:OperatingAirline>\r\n        <ns16:OperatingFlightNumber>{{oFlightNumber}}</ns16:OperatingFlightNumber>\r\n        <ns16:ClassOfService>Y</ns16:ClassOfService>\r\n        <ns16:BookingStatus>PN</ns16:BookingStatus>\r\n      </ns15:FlightDetail>\r\n    </ns9:Segment>\r\n  </ns9:QueryByItinerary>\r\n</ns9:GetAncillaryOffersRQ>\r\n\r\n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/read/soap_apis/air/search/get_ancillary_offers), [Resources](https://developer.sabre.com/docs/read/soap_apis/air/search/get_ancillary_offers/resources), [Legacy Versions](https://developer.sabre.com/docs/read/soap_apis/air/search/get_ancillary_offers/legacy)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "3. CreateBooking - with ancillaries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"{{$randomFirstName}}\",\n            \"surname\": \"{{$randomLastName}}\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"specialServices\": [\n                {\n                    \"code\": \"{{ancillarySpecialService}}\"\n                }\n            ],\n            \"ancillaries\": [\n                {\n                    \"reasonForIssuance\": \"{{ancillaryReasonForIssuance}}\",\n                    \"subcode\": \"{{ancillarySubCode}}\",\n                    \"airlineCode\": \"U2\",\n                    \"electronicMiscellaneousDocumentType\": \"{{ancillaryElectronicMiscDocType}}\",\n                    \"basePrice\": \"{{ancillaryBasePrice}}\",\n                    \"currencyCode\": \"{{ancillaryCurrencyCode}}\",\n                    \"groupCode\": \"{{ancillaryGroup}}\",\n                    \"flightApplicabilityType\": \"Single\",\n                    \"specialServiceIndex\": 1,\n                    \"commercialName\": \"{{ancillaryCommercialName}}\",\n                    \"vendorCode\": \"{{ancillaryVendor}}\",\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n                \"airlineCode\": \"{{lcc_airline_code}}\",\n                \"fromAirportCode\": \"{{oDepartureAirport}}\",\n                \"toAirportCode\": \"{{oArrivalAirport}}\",\n                \"departureDate\": \"{{start_date}}\",\n                \"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n            }\n        ],\n        \"flightPricing\": [\n            {}\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"VI\",\n                \"cardNumber\": \"{{lccCreditCardNumber}}\",\n                \"cardSecurityCode\": \"{{lccCardSecurityCode}}\",\n                \"expiryDate\": \"{{lccCreditCardExpiryDate}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "4. GetBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "SessionCloseRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('lcc_airline_code', 'U2');\r",
									"pm.environment.set('lcc_second_airline_code', 'FR');\r",
									"pm.environment.set('atpco_airline_code', 'AA');\r",
									"pm.environment.set('ndc_airline_code', 'QF');\r",
									"\r",
									"pm.environment.set('from_airport_code', 'LON');\r",
									"pm.environment.set('to_airport_code', 'MAD');\r",
									"\r",
									"pm.environment.set('lcc_tests', true);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "21 - LCC - Check, Refund Booking",
					"item": [
						{
							"name": "REST Authorize",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic {{secret}}",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v2/auth/token",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v2",
										"auth",
										"token"
									]
								},
								"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "SessionCreateRQ 1.0.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>AA</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max with repeat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var maxNumberOfTries = 10;",
											"var jsonData = JSON.parse(responseBody);",
											"var itineraryCount = jsonData.groupedItineraryResponse.statistics.itineraryCount;",
											"var tries = parseInt(pm.environment.get(\"collection_tries\") || \"0\", 10);",
											"",
											"if (itineraryCount > 0) {",
											"    assignVariables();",
											"} else if (tries >= maxNumberOfTries) {",
											"    pm.test(\"Check if the maximum number of attempts has been exceeded\", () => {",
											"        postman.setNextRequest(null);",
											"        pm.expect.fail(`Maximum number of attempts (${maxNumberOfTries}) exceeded`);",
											"    });",
											"} else {",
											"    pm.environment.set(\"collection_tries\", tries + 1);",
											"    postman.setNextRequest(request.name);",
											"}",
											"",
											"function assignVariables() {",
											"    pm.environment.unset(\"collection_tries\");",
											"",
											"    console.log(\"Set flight data variables\");",
											"    var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"    pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"    pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"    pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"    pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"    pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"    pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"    pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"}",
											"",
											"pm.test(\"itineraryCount is greater than 0\", () => {",
											"    pm.expect(itineraryCount, \"Expected itineraryCount to be greater than 0\").to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (!pm.environment.get(\"collection_tries\")) {\r",
											"    pm.environment.set(\"collection_tries\", 0);\r",
											"}\r",
											"\r",
											"var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);\r",
											"\r",
											"let moment = require('moment')\r",
											"var temp_start_date = moment(pm.environment.get(\"start_date\"),\"YYYY-MM-DD\").add(tries, 'day').format(\"YYYY-MM-DD\");\r",
											"console.log(\"Set temp_start_date to: \" + temp_start_date);\r",
											"pm.environment.set(\"temp_start_date\", temp_start_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{temp_start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{lcc_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "CreateBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"booking was successfully created\", () => {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson).to.have.property(\"confirmationId\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"agency\": {\n\t\t\"address\": {\n\t\t\t\"name\": \"John Smith\",\n\t\t\t\"street\": \"1230 Ellen Ave, apt 10\",\n\t\t\t\"city\": \"Dallas\",\n\t\t\t\"stateProvince\": \"TX\",\n\t\t\t\"postalCode\": \"75063\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n\t\t},\n\t\t\"agencyCustomerNumber\": \"1234567\",\n\t\t\"ticketingPolicy\": \"TODAY\"\n  \t},\n\t\"travelers\": [\n\t\t{\n\t\t\t\"givenName\": \"{{$randomFirstName}}\",\n\t\t\t\"surname\": \"{{$randomLastName}}\",\n\t\t\t\"birthDate\": \"1983-08-11\",\n\t\t\t\"passengerCode\": \"ADT\"\n\t\t}\n\t],\n\t\"contactInfo\":\n    {\n        \"emails\": [\n            \"travel@sabre.com\",\n\t\t    \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n\t\"flightDetails\": {\n\t\t\"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{lcc_airline_code}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{temp_start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n            }\n\t\t],\n        \"flightPricing\": [\n            {\n            }\n        ]\n\t},\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"{{first_card_code}}\",\n                \"cardNumber\": \"{{first_card_number}}\",\n                \"cardSecurityCode\": \"{{first_security_card_code}}\",\n                \"expiryDate\": \"{{first_expire_date}}\"\n            }\n        ]\n    } \n}"
								},
								"url": {
									"raw": "{{createBooking_endpoint}}",
									"host": [
										"{{createBooking_endpoint}}"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "Fulfill (EnhancedAirTicket)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body contains complete status string\", () => {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect('Complete').to.eql(responseJson.AirTicketRS.ApplicationResults.status);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									},
									{
										"key": "Diagnostics",
										"value": "CLIENT",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"E52405\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"AT\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"{{first_card_code}}\",\n                                \"CardSecurityCode\": \"{{first_security_card_code}}\",\n                                \"ExpireDate\": \"{{first_expire_date}}\",\n                                \"Number\": {{first_card_number}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/fulfill/enhanced_air_ticket), [Resources](https://developer.sabre.com/docs/rest_apis/air/fulfill/enhanced_air_ticket/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetBooking - before refund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Save response as environment variable\", function () {\r",
											"    pm.environment.set('getBookingBeforeRefund', pm.response.json());\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of travelers\", function () {\r",
											"    pm.expect(jsonData.travelers.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of flights\", function () {\r",
											"    pm.expect(jsonData.flights.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of journeys\", function () {\r",
											"    pm.expect(jsonData.journeys.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of segments\", function () {\r",
											"    pm.expect(jsonData.allSegments.length).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of special services\", function () {\r",
											"    pm.expect(jsonData.specialServices.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of accounting items\", function () {\r",
											"    pm.expect(jsonData.accountingItems.length).to.eql(3);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "CheckFlightTickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{checkFlightTickets_endpoint}}",
									"host": [
										"{{checkFlightTickets_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Booking with Refund",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"flightTicketOperation\": \"REFUND\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\",\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{cancelBooking_endpoint}}",
									"host": [
										"{{cancelBooking_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetBooking - after refund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"const getBookingBeforeRefund = pm.environment.get(\"getBookingBeforeRefund\");\r",
											"\r",
											"pm.test(\"Check number of travelers\", function () {\r",
											"    pm.expect(jsonData.travelers.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if there is any `flights` object\", function () {\r",
											"    pm.expect(jsonData).to.not.have.property('flights');\r",
											"});\r",
											"\r",
											"pm.test(\"Check if there is any `journeys` object\", function () {\r",
											"    pm.expect(jsonData).to.not.have.property('journeys');\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of remarks\", function () {\r",
											"    pm.expect(jsonData.remarks.length).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of segments\", function () {\r",
											"    pm.expect(jsonData.allSegments.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of special services\", function () {\r",
											"    pm.expect(jsonData.specialServices.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of accounting items\", function () {\r",
											"    pm.expect(jsonData.accountingItems.length).to.eql(3);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "SessionCloseRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
							},
							"response": []
						}
					]
				},
				{
					"name": "22 - LCC + ATPCO - Check, Refund Booking",
					"item": [
						{
							"name": "SessionCreateRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>AA</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max with repeat - get start flight number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var maxNumberOfTries = 10;",
											"var jsonData = JSON.parse(responseBody);",
											"var itineraryCount = jsonData.groupedItineraryResponse.statistics.itineraryCount;",
											"var tries = parseInt(pm.environment.get(\"collection_tries\") || \"0\", 10);",
											"",
											"if (itineraryCount > 0) {",
											"    assignVariables();",
											"} else if (tries >= maxNumberOfTries) {",
											"    pm.test(\"Check if the maximum number of attempts has been exceeded\", () => {",
											"        postman.setNextRequest(null);",
											"        pm.expect.fail(`Maximum number of attempts (${maxNumberOfTries}) exceeded`);",
											"    });",
											"} else {",
											"    pm.environment.set(\"collection_tries\", tries + 1);",
											"    postman.setNextRequest(request.name);",
											"}",
											"",
											"function assignVariables() {",
											"    pm.environment.unset(\"collection_tries\");",
											"",
											"    console.log(\"Set flight data variables\");",
											"    var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"    pm.environment.set(\"oFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"    pm.environment.set(\"oResBookDesigCode\", outboundData.ResBookDesigCode);",
											"    pm.environment.set(\"oDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"    pm.environment.set(\"oDepartureAirport\", outboundData.departure.airport);",
											"    pm.environment.set(\"oArrivalAirport\", outboundData.arrival.airport);",
											"    pm.environment.set(\"oMarketingAirline\", outboundData.carrier.marketing);",
											"    pm.environment.set(\"oOperatingAirline\", outboundData.carrier.operating);",
											"}",
											"",
											"pm.test(\"itineraryCount is greater than 0\", () => {",
											"    pm.expect(itineraryCount, \"Expected itineraryCount to be greater than 0\").to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (!pm.environment.get(\"collection_tries\")) {\r",
											"    pm.environment.set(\"collection_tries\", 0);\r",
											"}\r",
											"\r",
											"var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);\r",
											"\r",
											"let moment = require('moment')\r",
											"var temp_start_date = moment(pm.environment.get(\"start_date\"),\"YYYY-MM-DD\").add(tries, 'day').format(\"YYYY-MM-DD\");\r",
											"console.log(\"Set temp_start_date to: \" + temp_start_date);\r",
											"pm.environment.set(\"temp_start_date\", temp_start_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{temp_start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{from_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{lcc_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Enable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max with repeat - get return flight number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var maxNumberOfTries = 10;",
											"var jsonData = JSON.parse(responseBody);",
											"var itineraryCount = jsonData.groupedItineraryResponse.statistics.itineraryCount;",
											"var tries = parseInt(pm.environment.get(\"collection_tries\") || \"0\", 10);",
											"",
											"if (itineraryCount > 0) {",
											"    assignVariables();",
											"} else if (tries >= maxNumberOfTries) {",
											"    pm.test(\"Check if the maximum number of attempts has been exceeded\", () => {",
											"        postman.setNextRequest(null);",
											"        pm.expect.fail(`Maximum number of attempts (${maxNumberOfTries}) exceeded`);",
											"    });",
											"} else {",
											"    pm.environment.set(\"collection_tries\", tries + 1);",
											"    postman.setNextRequest(request.name);",
											"}",
											"",
											"function assignVariables() {",
											"    pm.environment.unset(\"collection_tries\");",
											"",
											"    console.log(\"Set flight data variables\");",
											"    var outboundData = jsonData.groupedItineraryResponse.scheduleDescs[0];",
											"",
											"    pm.environment.set(\"oReturnFlightNumber\", outboundData.carrier.marketingFlightNumber);",
											"    pm.environment.set(\"oReturnDepartureTime\", outboundData.departure.time.substring(0, 5));",
											"    pm.environment.set(\"oReturnDepartureAirport\", outboundData.departure.airport);",
											"    pm.environment.set(\"oReturnArrivalAirport\", outboundData.arrival.airport);",
											"}",
											"",
											"pm.test(\"itineraryCount is greater than 0\", () => {",
											"    pm.expect(itineraryCount, \"Expected itineraryCount to be greater than 0\").to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (!pm.environment.get(\"collection_tries\")) {\r",
											"    pm.environment.set(\"collection_tries\", 0);\r",
											"}\r",
											"\r",
											"var tries = parseInt(pm.environment.get(\"collection_tries\"), 10);\r",
											"\r",
											"let moment = require('moment')\r",
											"var temp_return_date = moment(pm.environment.get(\"end_date\"),\"YYYY-MM-DD\").add(tries, 'day').format(\"YYYY-MM-DD\");\r",
											"console.log(\"Set temp_return_date to: \" + temp_return_date);\r",
											"pm.environment.set(\"temp_return_date\", temp_return_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"1\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"RPH\": \"1\",\n                \"DepartureDateTime\": \"{{temp_return_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"{{to_airport_code}}\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"HKG\"\n                }\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"{{atpco_airline_code}}\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 10\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Disable\",\n                    \"ATPCO\": \"Enable\",\n                    \"LCC\": \"Disable\"\n                },\n                \"PreferNDCSourceOnTie\": {\n                    \"Value\": false\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ]\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"100ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v3/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v3",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "CreateBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"booking was successfully created\", () => {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson).to.have.property(\"confirmationId\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.variables.set(\"randomFirstName\", pm.variables.replaceIn('{{$randomFirstName}}'));\r",
											"pm.variables.set(\"randomLastName\", pm.variables.replaceIn('{{$randomLastName}}'));\r",
											"\r",
											"if (pm.environment.get(\"request_execution_delay_enabled\")) {\r",
											"    setTimeout(function() {}, parseInt(pm.environment.get(\"request_execution_delay\"), 10));\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"agency\": {\n        \"address\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\",\n            \"countryCode\": \"US\",\n            \"freeText\": \"John Smith\\n1230 Ellen Ave, apt 10\\nDallas, TX 75063\\nUS\"\n        },\n        \"agencyCustomerNumber\": \"1234567\",\n        \"ticketingPolicy\": \"TODAY\"\n    },\n    \"travelers\": [\n        {\n            \"givenName\": \"{{randomFirstName}}\",\n\t\t\t\"surname\": \"{{randomLastName}}\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"identityDocuments\": [\n                {\n                    \"documentNumber\": \"0123456789\",\n                    \"documentType\": \"PASSPORT\",\n                    \"expiryDate\": \"{{identityDocumentExpiryDate}}\",\n                    \"issuingCountryCode\": \"US\",\n                    \"residenceCountryCode\": \"US\",\n                    \"givenName\": \"{{randomFirstName}}\",\n                    \"middleName\": \"Jack\",\n                    \"surname\": \"{{randomLastName}}\",\n                    \"birthDate\": \"1970-01-23\",\n                    \"gender\": \"MALE\"\n                }\n            ]\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\",\n            \"travel2@sabre.com\"\n        ],\n        \"phones\": [\n            \"+123456\"\n        ]\n    },\n    \"flightDetails\": {\n        \"flights\": [\n            {\n                \"flightNumber\": \"{{oFlightNumber}}\",\n\t\t\t\t\"airlineCode\": \"{{lcc_airline_code}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oArrivalAirport}}\",\n\t\t\t\t\"departureDate\": \"{{temp_start_date}}\",\n\t\t\t\t\"departureTime\": \"{{oDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"LCC\"\n            },\n            {\n                \"flightNumber\": \"{{oReturnFlightNumber}}\",\n                \"airlineCode\": \"{{atpco_airline_code}}\",\n\t\t\t\t\"fromAirportCode\": \"{{oReturnDepartureAirport}}\",\n\t\t\t\t\"toAirportCode\": \"{{oReturnArrivalAirport}}\",\n                \"departureDate\": \"{{temp_return_date}}\",\n                \"departureTime\": \"{{oReturnDepartureTime}}\",\n                \"bookingClass\": \"Y\",\n                \"flightStatusCode\": \"NN\",\n                \"source\": \"ATPCO\"\n            }\n        ],\n        \"flightPricing\": [\n            {\n                \"qualifiers\": {\n                    \"flightIndices\": [\n                        1\n                    ]\n                }\n            },\n            {\n                \"qualifiers\": {\n                    \"flightIndices\": [\n                        2\n                    ]\n                }\n            }\n        ]\n    },\n    \"payment\": {\n        \"billingAddress\": {\n            \"name\": \"John Smith\",\n            \"street\": \"1230 Ellen Ave, apt 10\",\n            \"city\": \"Dallas\",\n            \"stateProvince\": \"TX\",\n            \"postalCode\": \"75063\"\n        },\n        \"formsOfPayment\": [\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"{{first_card_code}}\",\n                \"cardNumber\": \"{{first_card_number}}\",\n                \"cardSecurityCode\": \"{{first_security_card_code}}\",\n                \"expiryDate\": \"{{first_expire_date}}\"\n            },\n            {\n                \"type\": \"PAYMENTCARD\",\n                \"cardTypeCode\": \"{{second_card_code}}\",\n                \"cardNumber\": \"{{second_card_number}}\",\n                \"cardSecurityCode\": \"{{second_security_card_code}}\",\n                \"expiryDate\": \"{{second_expire_date}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{createBooking_endpoint}}",
									"host": [
										"{{createBooking_endpoint}}"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "Fulfill (EnhancedAirTicket)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (pm.environment.get(\"request_execution_delay_enabled\")) {",
											"    setTimeout(function() {}, parseInt(pm.environment.get(\"request_execution_delay\"), 10));",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body contains complete status string\", () => {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect('Complete').to.eql(responseJson.AirTicketRS.ApplicationResults.status);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									},
									{
										"key": "Diagnostics",
										"value": "CLIENT",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"AirTicketRQ\": {\n        \"DesignatePrinter\": {\n            \"Printers\": {\n                \"Hardcopy\": {\n                    \"LNIATA\": \"E52405\"\n                },\n                \"Ticket\": {\n                    \"CountryCode\": \"AT\"\n                }\n            }\n        },\n        \"Itinerary\": {\n            \"ID\": \"{{pnr}}\"\n        },\n        \"Ticketing\": [\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"{{first_card_code}}\",\n                                \"CardSecurityCode\": \"{{first_security_card_code}}\",\n                                \"ExpireDate\": \"{{first_expire_date}}\",\n                                \"Number\": {{first_card_number}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 1\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            {\n                \"FOP_Qualifiers\": {\n                    \"BasicFOP\": {\n                        \"CC_Info\": {\n                            \"PaymentCard\": {\n                                \"Code\": \"{{second_card_code}}\",\n                                \"CardSecurityCode\": \"{{second_security_card_code}}\",\n                                \"ExpireDate\": \"{{second_expire_date}}\",\n                                \"Number\": {{second_card_number}}\n                            }\n                        }\n                    }\n                },\n                \"PricingQualifiers\": {\n                    \"PriceQuote\": [\n                        {\n                            \"Record\": [\n                                {\n                                    \"Number\": 2\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        ],\n        \"PostProcessing\": {\n            \"EndTransaction\": {\n                \"Source\": {\n                    \"ReceivedFrom\": \"API TEST\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1.3.0/air/ticket",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1.3.0",
										"air",
										"ticket"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/fulfill/enhanced_air_ticket), [Resources](https://developer.sabre.com/docs/rest_apis/air/fulfill/enhanced_air_ticket/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetBooking - before refund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Save response as environment variable\", function () {\r",
											"    pm.environment.set('getBookingBeforeRefund', pm.response.json());\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of travelers\", function () {\r",
											"    pm.expect(jsonData.travelers.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of flights\", function () {\r",
											"    pm.expect(jsonData.flights.length).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of journeys\", function () {\r",
											"    pm.expect(jsonData.journeys.length).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of remarks\", function () {\r",
											"    pm.expect(jsonData.remarks.length).to.eql(8);\r",
											"});\r",
											"\r",
											"// Sometimes the ARNK segment is displayed and sometimes it is not\r",
											"pm.test(\"Check number of segments\", function () {\r",
											"    pm.expect(jsonData.allSegments.length).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of special services\", function () {\r",
											"    pm.expect(jsonData.specialServices.length).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of accounting items\", function () {\r",
											"    pm.expect(jsonData.accountingItems.length).to.eql(4);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (pm.environment.get(\"request_execution_delay_enabled\")) {",
											"    setTimeout(function() {}, parseInt(pm.environment.get(\"request_execution_delay\"), 10));",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "CheckFlightTickets",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"confirmationId\": \"{{pnr}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{checkFlightTickets_endpoint}}",
									"host": [
										"{{checkFlightTickets_endpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Booking with Refund",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"flightTicketOperation\": \"REFUND\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\",\n    \"cancelAll\": true,\n    \"designatePrinters\": [\n        {\n            \"hardcopy\": {\n                \"address\": \"498BF1\"\n            }\n        },\n        {\n            \"ticket\": {\n                \"countryCode\": \"AT\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{cancelBooking_endpoint}}",
									"host": [
										"{{cancelBooking_endpoint}}"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "GetBooking - after refund",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"const getBookingBeforeRefund = pm.environment.get(\"getBookingBeforeRefund\");\r",
											"\r",
											"pm.test(\"Check number of travelers\", function () {\r",
											"    pm.expect(jsonData.travelers.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if there is any `flights` object\", function () {\r",
											"    pm.expect(jsonData).to.not.have.property('flights');\r",
											"});\r",
											"\r",
											"pm.test(\"Check if there is any `journeys` object\", function () {\r",
											"    pm.expect(jsonData).to.not.have.property('journeys');\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of remarks\", function () {\r",
											"    pm.expect(jsonData.remarks.length).to.eql(9);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of segments\", function () {\r",
											"    pm.expect(jsonData.allSegments.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of special services\", function () {\r",
											"    pm.expect(jsonData.specialServices.length).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Check number of accounting items\", function () {\r",
											"    pm.expect(jsonData.accountingItems.length).to.eql(5);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if (pm.environment.get(\"request_execution_delay_enabled\")) {",
											"    setTimeout(function() {}, parseInt(pm.environment.get(\"request_execution_delay\"), 10));",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"getBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "SessionCloseRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{header}}\n\n<SessionCloseRQ>\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCloseRQ>\n        \n{{footer}}"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "Used to close stateful sessions on Sabre's Passenger Sales System"
							},
							"response": []
						}
					]
				},
				{
					"name": "23 - NDC - OSI remarks - Shop, Price Check, Book",
					"item": [
						{
							"name": "SessionCreateRQ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Generate a unique ID for profile services\r",
											"var uuid = require('uuid');\r",
											"var myUUID = uuid();\r",
											"console.log(myUUID);\r",
											"\r",
											"//cleanup\r",
											"pm.environment.unset('filterName')\r",
											"pm.environment.unset('profileName')\r",
											"\r",
											"pm.environment.set('filterName','CreateBookingFilter '+myUUID);\r",
											"pm.environment.set('profileName','CreateBookingProfile '+myUUID);\r",
											"\r",
											"console.log(pm.environment.get('filterName'))\r",
											"console.log(pm.environment.get('profileName'))\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <SOAP-ENV:Header>\n        <MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\">\n            <From>\n                <PartyId>Agency</PartyId>\n            </From>\n            <To>\n                <PartyId>Sabre_API</PartyId>\n            </To>\n            <ConversationId>2019.09.DevStudio</ConversationId>\n            <Action>SessionCreateRQ</Action>\n        </MessageHeader>\n        <Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\">\n            <UsernameToken>\n                <Username>{{username}}</Username>\n                <Password>{{password}}</Password>\n                <Organization>{{pcc}}</Organization>\n                <Domain>DEFAULT</Domain>\n            </UsernameToken>\n        </Security>\n    </SOAP-ENV:Header>\n    <SOAP-ENV:Body>\n    \t\n<SessionCreateRQ returnContextID=\"true\">\n\t<POS>\n\t\t<Source PseudoCityCode=\"{{pcc}}\"/>\n\t</POS>\n</SessionCreateRQ>\n\n    </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>"
								},
								"url": {
									"raw": "{{soap_endpoint}}",
									"host": [
										"{{soap_endpoint}}"
									]
								},
								"description": "Used to create stateful sessions on Sabre's Passenger Sales System\r\nAlso used to set variables for Stateful API's"
							},
							"response": []
						},
						{
							"name": "Bargain Finder Max /v3 (Stateless ATK) SIN, SYD",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody); \r",
											"pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId); \r",
											"pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId); \r",
											"pm.environment.set('shop_offer_passenger_item_id_adt', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId); \r",
											"pm.environment.set('shop_offer_passenger_item_id_cnn', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[1].passengerInfo.offerItemId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OTA_AirLowFareSearchRQ\": {\n        \"Version\": \"4\",\n        \"POS\": {\n            \"Source\": [\n                {\n                    \"PseudoCityCode\": \"{{pcc}}\",\n                    \"RequestorID\": {\n                        \"Type\": \"1\",\n                        \"ID\": \"1\",\n                        \"CompanyName\": {\n                            \"Code\": \"TN\"\n                        }\n                    }\n                }\n            ]\n        },\n        \"OriginDestinationInformation\": [\n            {\n                \"DepartureDateTime\": \"{{start_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"RPH\": \"0\"\n            },\n            {\n                \"DepartureDateTime\": \"{{end_date}}T00:00:00\",\n                \"OriginLocation\": {\n                    \"LocationCode\": \"SYD\"\n                },\n                \"DestinationLocation\": {\n                    \"LocationCode\": \"SIN\"\n                },\n                \"RPH\": \"1\"\n            }\n        ],\n        \"TravelPreferences\": {\n            \"VendorPref\": [\n                {\n                    \"Code\": \"QF\"\n                }\n            ],\n            \"MaxStopsQuantity\": 0,\n            \"CabinPref\": [\n                {\n                    \"PreferLevel\": \"Preferred\",\n                    \"Cabin\": \"Y\"\n                }\n            ],\n            \"TPA_Extensions\": {\n                \"NumTrips\": {\n                    \"Number\": 2\n                },\n                \"DataSources\": {\n                    \"NDC\": \"Enable\",\n                    \"ATPCO\": \"Disable\",\n                    \"LCC\": \"Disable\"\n                }\n            }\n        },\n        \"TravelerInfoSummary\": {\n            \"AirTravelerAvail\": [\n                {\n                    \"PassengerTypeQuantity\": [\n                        {\n                            \"Code\": \"ADT\",\n                            \"Quantity\": 2\n                        },\n                        {\n                            \"Code\": \"CNN\",\n                            \"Quantity\": 1\n                        }\n                    ]\n                }\n            ],\n            \"PriceRequestInformation\": {\n                \"TPA_Extensions\": {\n                    \"BrandedFareIndicators\": {\n                        \"SingleBrandedFare\": true\n                    }\n                }\n            }\n        },\n        \"TPA_Extensions\": {\n            \"IntelliSellTransaction\": {\n                \"RequestType\": {\n                    \"Name\": \"200ITINS\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v4/offers/shop",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v4",
										"offers",
										"shop"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430), [Resources](https://developer.sabre.com/docs/rest_apis/air/search/bargain_finder_max/versions/v430/reference-documentation)</b>\n\n[//]: # \"End\""
							},
							"response": []
						},
						{
							"name": "Offers Price /v1 (Stateless ATK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set('price_offer_item_id_adt', jsonData.response.offers[0].offerItems[0].id);\r",
											"pm.environment.set('price_offer_item_id_cnn', jsonData.response.offers[0].offerItems[1].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "conversation-id-value",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": [\n        {\n            \"offerItemId\": [\n                \"{{shop_offer_passenger_item_id_adt}}\",\n                \"{{shop_offer_passenger_item_id_cnn}}\"\n            ]\n        }\n    ],\n    \"params\": {\n        \"formOfPayment\": [\n            {\n                \"binNumber\": \"545251\",\n                \"subCode\": \"FDA\",\n                \"cardType\" : \"MC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/offers/price",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"offers",
										"price"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateBooking NDC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flightOffer\": {\n        \"offerId\": \"{{price_offer_id}}\",\n        \"selectedOfferItems\": [\n            \"{{price_offer_item_id_adt}}\",\n            \"{{price_offer_item_id_cnn}}\"\n        ]\n    },\n    \"travelers\": [\n        {\n            \"id\": \"{{price_passenger_id1}}\",\n            \"givenName\": \"John\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1970-01-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id2}}\",\n            \"givenName\": \"Jill\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1971-02-23\",\n            \"passengerCode\": \"ADT\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        },\n        {\n            \"id\": \"{{price_passenger_id3}}\",\n            \"givenName\": \"Jack\",\n            \"surname\": \"Smith\",\n            \"birthDate\": \"1972-03-23\",\n            \"passengerCode\": \"CNN\",\n            \"emails\": [\n                \"{{$randomEmail}}\"\n            ],\n            \"phones\": [\n                {\n                    \"number\": \"{{$randomPhoneNumberExt}}\",\n                    \"label\": \"M\"\n                }\n            ]\n        }\n    ],\n    \"otherServices\": [\n        {\n            \"travelerIndex\": 1,\n            \"serviceMessage\": \"BM API TEST\"\n        },\n        {\n            \"travelerIndex\": 2,\n            \"serviceMessage\": \"BM API TEST2\"\n        },\n        {\n            \"travelerIndex\": 1,\n            \"serviceMessage\": \"BM API SAMPLE\"\n        },\n        {\n            \"travelerIndex\": 2,\n            \"serviceMessage\": \"BM API SAMPLE2\"\n        },\n        {\n            \"travelerIndex\": 3,\n            \"serviceMessage\": \"BM API TEST\"\n        },\n        {\n            \"travelerIndex\": 3,\n            \"serviceMessage\": \"BM API SAMPLE\"\n        }\n    ],\n    \"contactInfo\": {\n        \"emails\": [\n            \"travel@sabre.com\"\n        ],\n        \"phones\": [\n            \"123456\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/createBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"createBooking"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "getBooking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"assertions.assertThatArrayLengthIsAsExpected(response.travelers, 3, \"travelers\");\r",
											"assertions.assertThatArrayLengthIsAsExpected(response.flights, 2, \"flights\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmationId\": \"{{pnr}}\"\n}"
								},
								"url": {
									"raw": "{{getBooking_endpoint}}",
									"host": [
										"{{getBooking_endpoint}}"
									]
								},
								"description": "### <br>"
							},
							"response": []
						},
						{
							"name": "Cancel Booking Cancel All",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Conversation-ID",
										"value": "{{conv_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmationId\": \"{{pnr}}\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true\n}"
								},
								"url": {
									"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
									"host": [
										"{{rest_endpoint}}"
									],
									"path": [
										"v1",
										"trip",
										"orders",
										"cancelBooking"
									]
								},
								"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"const action = request.url;\r",
									"\r",
									"if (action.includes(\"getBooking\")) {\r",
									"\r",
									"    let response = pm.response.json();\r",
									"\r",
									"    if (response.errors !== undefined && response.errors[0].description === \"Booking cannot be retrieved\") {\r",
									"        console.log(\"Wait 5 sec and retry getBooking request\");\r",
									"        pm.environment.set('isGetBookingResponseValid', false);\r",
									"        setTimeout(() => {\r",
									"            postman.setNextRequest(request.name);\r",
									"        }, 5000);\r",
									"    } else {\r",
									"        pm.environment.set('isGetBookingResponseValid', true);\r",
									"        response.flights.forEach(function (flights) {\r",
									"\r",
									"            pm.test(\"All segment are NDC source\", function () {\r",
									"                let sourceType = flights.sourceType;\r",
									"                pm.expect(sourceType).to.eql('NDC');\r",
									"            });\r",
									"\r",
									"        });\r",
									"    }\r",
									"\r",
									"}"
								]
							}
						}
					]
				}
			],
			"description": "Booking modifications are covered under 'ModifyBooking'"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"",
					"// Get the first string of the URI",
					"const URI = request.url.split(\"/\")[0];",
					"",
					"// Postman doesn't define a variable until the request is sent, therefore the URI is either:",
					"// {{rest_endpoint}}/xx/yy/zz or {{soap_endpoint}}",
					"",
					"",
					"// Capture today's date",
					"var moment = require('moment');",
					"// Add 30 days to today's date and use this date in start_date",
					"const today = moment().format(\"YYYY-MM-DD\");",
					"pm.environment.set('today', today);",
					"// Add 30 days to today's date and use this date in start_date",
					"const start_date = moment().add(30, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('start_date', start_date);",
					"// Add 37 days to today's date and use this date in end_date",
					"const end_date = moment().add(37, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('end_date', end_date);",
					"// Add 33 days to today's date and use this date in short_end_date (primarily for hotel search)",
					"const short_end_date = moment().add(33, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('short_end_date', short_end_date);",
					"",
					"pm.environment.set('conv_id', \"2021.01.DevStudio\");",
					"",
					"",
					"",
					"",
					"// Analyze 'token' variable, if it starts with \"ATH:\" this text is removed as it's not accepted by Sabre's 2SG gateways ",
					"var token = pm.variables.get('token');",
					"// Evaluate if token is defined or not null, and only then attempt to remove the ATH prefix",
					"if (token) {",
					"    pm.environment.set('token', token.replace(/^ATH:/, ''));",
					"}",
					"",
					"if ((URI) == ('{{soap_endpoint}}')) {",
					"",
					"    //***SOAP Path***//",
					"    //This means that the temp URL is: {{soap_endpoint}}",
					"",
					"    // Get service action code from request name and ignore the following prefixes if present:",
					"    // underscore (_)",
					"    // number & dot (1.)",
					"    // these variations are used in different examples across this collection",
					"    const action = request.name.split(' ')[0].replace(/^_|[0-9]./, '');",
					"",
					"",
					"    // Add the token value into the token variable",
					"    const token = pm.variables.get('token');",
					"",
					"    // Add the ApplicationId value into the AppId variable",
					"    const AppId = pm.variables.get('AppId');",
					"",
					"    // All SOAP API calls require a header section, we have created this variable to remove it from the \"working\" message and ensure the user can focus on the payload section ",
					"",
					"    const header_appid = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>2021.01.DevStudio</ConversationId><Action>${action}</Action><CustomerAppId xmlns:ns10=\"http://webservices.sabre.com/\">${AppId}</CustomerAppId></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken>${token}</BinarySecurityToken></Security></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"    const header_diag = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>2021.01.DevStudio</ConversationId><Action>${action}</Action></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken>${token}</BinarySecurityToken></Security><Diagnostics xmlns=\"http://webservices.sabre.com\"/></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"    const header = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>2021.01.DevStudio</ConversationId><Action>${action}</Action></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken EncodingType=\"Base64Binary\" valueType=\"String\">${token}</BinarySecurityToken></Security></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"",
					"",
					"    // Same as previous item, this footer variable is used to close the entire SOAP envelope",
					"    const footer = '</SOAP-ENV:Body></SOAP-ENV:Envelope>';",
					"",
					"    // Add header & footer variables into the specific variables",
					"    pm.variables.set('header_appid', header_appid);",
					"    pm.variables.set('header', header);",
					"    pm.variables.set('header_diag', header_diag);",
					"    pm.variables.set('footer', footer);",
					"",
					"",
					"} else if ((URI) == ('{{rest_endpoint}}')) {",
					"",
					"    //***REST Path***//",
					"    //This means that the temp URL is: {{rest_endpoint}}/xx/yy/zz",
					"",
					"    // Capture URI element which identifies the API method",
					"    const URI_ID = request.url.split(\"/\")[3];",
					"",
					"",
					"",
					"    switch (URI_ID) {",
					"",
					"        case 'token':",
					"            // Capture username",
					"            const username = pm.variables.get('username');",
					"            // Capture PCC",
					"            const pcc = pm.variables.get('pcc');",
					"",
					"            if ((request.url.split(\"/\")[1]) == ('v2')) {",
					"",
					"                // Construct raw client id (by appending V1:username:PCC:AA)",
					"                const clientidRaw = `V1:${username}:${pcc}:AA`;",
					"                // Base64 encode the previous string",
					"                const clientidArray = CryptoJS.enc.Utf8.parse(clientidRaw);",
					"                const clientidBase64 = CryptoJS.enc.Base64.stringify(clientidArray);",
					"                // Capture password",
					"                const passwordRaw = pm.variables.get('password');",
					"                // Base64 enconde the password",
					"                const passwordArray = CryptoJS.enc.Utf8.parse(passwordRaw);",
					"                const passwordBase64 = CryptoJS.enc.Base64.stringify(passwordArray);",
					"                // Combine the two previous strings with a : in the middle",
					"                const secretRaw = `${clientidBase64}:${passwordBase64}`;",
					"                // Base64 enconde this last string",
					"                const secretArray = CryptoJS.enc.Utf8.parse(secretRaw);",
					"                const secretBase64 = CryptoJS.enc.Base64.stringify(secretArray);",
					"                // Set the secret variable with the latest encoded string",
					"                pm.environment.set('secret', secretBase64);",
					"                pm.environment.set('token', \"\");",
					"",
					"            } else {",
					"                // Assumption is that this is /v3/auth/token or higher version",
					"                // Catpure client ID",
					"                const client_id = pm.variables.get('client_id');",
					"                // Capture client secret",
					"                const client_secret = pm.variables.get('client_secret');",
					"                // Combine client_id + client_secret (by appending client_id:client_secret)",
					"                const clientIDClientSecret = `${client_id}:${client_secret}`;",
					"                // Base64 encode the previous string",
					"                const clientIDClientSecretArray = CryptoJS.enc.Utf8.parse(clientIDClientSecret);",
					"                const clientIDClientSecretBase64 = CryptoJS.enc.Base64.stringify(clientIDClientSecretArray);",
					"                // Set the secret variable with the latest encoded string",
					"                pm.environment.set('auth_secret', clientIDClientSecretBase64);",
					"                pm.environment.set('token', \"\");   ",
					"            }",
					"",
					"            break;",
					"",
					"        case 'shop':",
					"",
					"            break;",
					"    }",
					"}",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"// Logic to ensure that any potential / at the end of the request url would not impact the matching logic to determine if a request is being sent to Sabre's REST or SOAP endpoint.",
					"// Some Postman versions automatically append a / at the end of the request url, so if identified it gets removed",
					"var requestURL = request.url;",
					"if (requestURL.charAt(requestURL.length-1) == \"/\") {",
					"    requestURL = requestURL.substring(0, requestURL.length - 1);",
					"}",
					"",
					"// Only execute the following code for SOAP APIs (based on the endpoint being used)",
					"if (((request.url) == (pm.environment.get(\"soap_endpoint\"))) || ((requestURL) == (pm.environment.get(\"soap_endpoint\")))){",
					"",
					"    //***SOAP Path***//",
					"",
					"    const xml2js = require('xml2js');",
					"",
					"    // Get service action name from request name and ignore leading underscore if present",
					"    const action = request.name.split(' ')[0].replace(/^_/, '');",
					"",
					"    // Parse response and remove namespaces (prefixes)",
					"    // Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs",
					"    const parseString = xml2js.parseString;",
					"    const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };",
					"",
					"    switch (action) {",
					"        case 'SessionCreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Header[0].Security[0].BinarySecurityToken[0]._;",
					"                pm.environment.set('token', \"\");",
					"                pm.environment.set('token', token);",
					"            });",
					"            break;",
					"        case 'TokenCreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Header[0].Security[0].BinarySecurityToken[0]._;",
					"                pm.environment.set('token', \"\");",
					"                pm.environment.set('token', token);",
					"            });",
					"            break;",
					"        case 'ContextChangeLLSRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Body[0].ContextChangeRS[0].SecurityToken[0];",
					"                if ((token.$.Updated) == ('true')) {",
					"                    pm.environment.set('token', \"\");",
					"                    pm.environment.set('token', token._);",
					"                }",
					"            });",
					"            break;",
					"        case 'CreatePassengerNameRecordRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const pnr = result.Envelope.Body[0].CreatePassengerNameRecordRS[0].ItineraryRef[0].$.ID;",
					"                pm.environment.set('pnr', pnr);",
					"            });",
					"            break;",
					"        case 'EnhancedEndTransactionRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;",
					"                pm.environment.set('pnr', pnr);",
					"            });",
					"            break;",
					"        case 'AirTicketRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const summary = result.Envelope.Body[0].AirTicketRS[0].Summary;",
					"                summary.forEach((tktDoc, i) => {",
					"                    const tktNum = 'tkt' + (i === 0 ? '' : i + 1);",
					"                    const tktDateTime = tktDoc.LocalIssueDateTime[0];",
					"                    const tktDate = tktDateTime.substring(tktDateTime, tktDateTime.indexOf('T'));",
					"                    pm.environment.set(tktNum, tktDoc.DocumentNumber[0]);",
					"                    pm.environment.set(tktNum + '_date', tktDate);",
					"                });",
					"            });",
					"            break;",
					"        case 'TP_CreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalID = result.Envelope.Body[0].TP_CreateRS[0].$.proposalID;",
					"                pm.environment.set('proposal_id', proposalID);",
					"            });",
					"            break;",
					"        case 'TP_ReadRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalVersion = result.Envelope.Body[0].TP_ReadRS[0].TripProposal[0].$.proposalVersion;",
					"                pm.environment.set('proposal_version', proposalVersion);",
					"            });",
					"            break;",
					"        case 'TP_RefreshRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalVersion = result.Envelope.Body[0].TP_RefreshRS[0].TripProposal[0].$.proposalVersion;",
					"                pm.environment.set('proposal_version', proposalVersion);",
					"            });",
					"            break;",
					"        case 'GetHotelAvailRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const hotelCode = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelInfo[0].$.HotelCode;",
					"                pm.environment.set('hotel_code', hotelCode);",
					"            });",
					"            break;",
					"        case 'GetHotelDetailsRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const rateKey = result.Envelope.Body[0].GetHotelDetailsRS[0].HotelDetailsInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;",
					"                pm.environment.set('rate_key', rateKey);",
					"            });",
					"            break;",
					"        case 'HotelPriceCheckRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;",
					"                pm.environment.set('booking_key', bookingKey);",
					"            });",
					"            break;",
					"        case 'GetVehAvailRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const rateKey = result.Envelope.Body[0].GetVehAvailRS[0].VehAvailInfos[0].VehAvailInfo[0].VehRentalRate[0].$.RateKey;",
					"                pm.environment.set('car_rate_key', rateKey);",
					"            });",
					"            break;",
					"        case 'VehPriceCheckRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const bookingKey = result.Envelope.Body[0].VehPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;",
					"                pm.environment.set('car_bookingKey', bookingKey);",
					"            });",
					"            break;",
					"            ///soap-env:Envelope/soap-env:Body/ns9:GetVehRateDetailsRS/ns9:RateDetailsInfo/ns9:VehRateInfo/@PickUpDate",
					"        case 'GetVehRateDetailsRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const carPickUpDate = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.PickUpDate;",
					"                const carPickUpTime = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.PickUpTime;",
					"                const carPickUpLocation = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].PickUpLocation[0].$.LocationCode;",
					"                const carReturnDate = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.ReturnDate;",
					"                const carReturnTime = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.ReturnTime;",
					"                const carReturnLocation = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].ReturnLocation[0].$.LocationCode;",
					"                const carVehicleType = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].Vehicle[0].$.VehType;",
					"                const carRateCode = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].$.RateCode;",
					"                const carVendorCode = result.Envelope.Body[0].GetVehRateDetailsRS[0].RateDetailsInfo[0].VehRateInfo[0].Vendor[0].$.Code;",
					"                pm.environment.set('car_pick_up_date', carPickUpDate);",
					"                pm.environment.set('car_pick_up_time', carPickUpTime);",
					"                pm.environment.set('car_pick_up_location', carPickUpLocation);",
					"                pm.environment.set('car_return_date', carReturnDate);",
					"                pm.environment.set('car_return_time', carReturnTime);",
					"                pm.environment.set('car_return_location', carReturnLocation);",
					"                pm.environment.set('car_vehicle_type', carVehicleType);",
					"                pm.environment.set('car_rate_code', carRateCode);",
					"                pm.environment.set('car_vendor_code', carVendorCode);",
					"            });",
					"            break;",
					"        case 'OTA_AirAvailLLSRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"",
					"                const flightNode = result.Envelope.Body[0].OTA_AirAvailRS[0].OriginDestinationOptions[0].OriginDestinationOption;",
					"                let destinationLocation;",
					"                let originLocation;",
					"                let flightSaved = false;",
					"                flightNode.every((flight) => {",
					"                    destinationLocation = flight.FlightSegment[0].DestinationLocation[0].$.LocationCode;",
					"                    originLocation = flight.FlightSegment[0].OriginLocation[0].$.LocationCode;",
					"",
					"                    if (destinationLocation === pm.environment.get('to_airport_code') && originLocation === pm.environment.get('from_airport_code')) {",
					"                        const flightNumber = flight.FlightSegment[0].$.FlightNumber;",
					"                        pm.environment.set('flight_number', flightNumber);",
					"                        flightSaved = true;",
					"                        console.log(\"Flight data: saved!\")",
					"                        console.log(\"airlineCode : \" + pm.environment.get('airline_code'));",
					"                        console.log(\"from_airport_code : \" + pm.environment.get('from_airport_code'));",
					"                        console.log(\"to_airport_code : \" + pm.environment.get('to_airport_code'));",
					"                        console.log(\"flight_number: \" + flightNumber);",
					"",
					"                        return false;",
					"                    } else return true",
					"                });",
					"                    if (!flightSaved) {",
					"                    console.error(\"No matching flight found.\");",
					"    }",
					"            });",
					"            break;",
					"        case 'GetAncillaryOffersRQ':",
					"         if (pm.environment.get('lcc_tests') !== true) {",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const ancillarySeqNum = pm.environment.get('ancillarySeqNum');",
					"",
					"                const BASE_ANCILLARY = result.Envelope.Body[0].GetAncillaryOffersRS[0].AncillaryDefinition[ancillarySeqNum];",
					"                const ancillaryId = BASE_ANCILLARY.$.id;",
					"                const ancillarySubCode = BASE_ANCILLARY.SubCode[0];",
					"                const ancillaryGroup = BASE_ANCILLARY.Group[0];",
					"                const ancillaryElectronicMiscDocType = BASE_ANCILLARY.ElectronicMiscDocType[0]._;",
					"                const ancillaryCommercialName = BASE_ANCILLARY.CommercialName[0];",
					"                const ancillaryReasonForIssuance = BASE_ANCILLARY.ReasonForIssuance[0]._;",
					"                const ancillaryBasePrice = result.Envelope.Body[0].GetAncillaryOffersRS[0].Offers[ancillarySeqNum].AncillaryFee[0].Base[0].TotalEquivalentAmount[0]._;",
					"                const ancillaryCurrencyCode = result.Envelope.Body[0].GetAncillaryOffersRS[0].Offers[ancillarySeqNum].AncillaryFee[0].Base[0].TotalEquivalentAmount[0].$.currency;",
					"                console.log(\"Ancillaries: ancillaryCommercialName: \"+ ancillaryCommercialName + \" | ancillarySubCode: \" + ancillaryId + \" | ancillarySubCode: \" + ancillarySubCode + \" | ancillaryGroup: \" + ancillaryGroup + \" | ancillaryElectronicMiscDocType: \" + ancillaryElectronicMiscDocType + \" | ancillaryReasonForIssuance: \" + ancillaryReasonForIssuance + \" | ancillaryBasePrice: \" + ancillaryBasePrice + \" | ancillaryCurrencyCode: \" + ancillaryCurrencyCode);",
					"",
					"                pm.environment.set('ancillaryId', ancillaryId);",
					"                pm.environment.set('ancillarySubCode', ancillarySubCode);",
					"                pm.environment.set('ancillaryGroup', ancillaryGroup);",
					"                pm.environment.set('ancillaryElectronicMiscDocType', ancillaryElectronicMiscDocType);",
					"                pm.environment.set('ancillaryBasePrice', ancillaryBasePrice);",
					"                pm.environment.set('ancillaryCurrencyCode', ancillaryCurrencyCode);",
					"",
					"                switch (ancillaryReasonForIssuance) {",
					"                    case 'GROUND_TRANSPORT_NON_AIR_SERVICES':",
					"                        pm.environment.set('ancillaryReasonForIssuance', \"SURFACE_TRANSPORTATION_NON_AIR_SERVICES\");",
					"                        break;",
					"",
					"                    case 'IN_FLIGHT_SERVICES':",
					"                        pm.environment.set('ancillaryReasonForIssuance', \"INFLIGHT_SERVICES\");",
					"                        break;",
					"",
					"                    default:",
					"                        pm.environment.set('ancillaryReasonForIssuance', ancillaryReasonForIssuance);",
					"                        break;",
					"                }",
					"",
					"            });",
					"         }",
					"            break;",
					"",
					"        // Add new API here",
					"    }",
					"",
					"",
					"} else {",
					"",
					"    //***REST Path***//",
					"",
					"    // Get the Unique ID of the URI (token, shop, price, create, view, cancel, change) based on the \"5th\" string in order to identify the actual API",
					"    const URI_ID = request.url.split(\"/\")[5];",
					"",
					"    // Get the JSON response",
					"    const jsonData = JSON.parse(responseBody);",
					"",
					"    switch (URI_ID) {",
					"",
					"        case 'token':",
					"            pm.environment.set('token', jsonData.access_token);",
					"            break;",
					"        case 'shop':",
					"            //pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
					"            //pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
					"            pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.passengerInfoList[0].passengerInfo.offerItemId);",
					"            break;",
					"        case 'price':",
					"            pm.environment.set('price_offer_id', jsonData.response.offers[0].id);",
					"            pm.environment.set('price_offer_item_id', jsonData.response.offers[0].offerItems[0].id);",
					"            pm.environment.set('price_passenger_id', jsonData.response.offers[0].offerItems[0].passengers[0].id);",
					"            break;",
					"        case 'create':",
					"            pm.environment.set('sabre_order_id', jsonData.order.id);",
					"            pm.environment.set('pnr', jsonData.order.pnrLocator);",
					"            break;",
					"        case 'ticket':",
					"            pm.environment.set('tkt', jsonData.AirTicketRS.Summary[0].DocumentNumber);",
					"            pm.environment.set('tkt2', jsonData.AirTicketRS.Summary[1].DocumentNumber);",
					"            break;",
					"        case 'hotelavail':",
					"            pm.environment.set('hotel_code', jsonData.GetHotelAvailRS.HotelAvailInfos.HotelAvailInfo[0].HotelInfo.HotelCode);",
					"            pm.environment.set('rate_key', jsonData.GetHotelAvailRS.HotelAvailInfos.HotelAvailInfo[0].HotelRateInfo.RateInfos.RateInfo[0].RateKey);",
					"            break;",
					"        case 'hoteldetails':",
					"            pm.environment.set('rate_key', jsonData.GetHotelDetailsRS.HotelDetailsInfo.HotelRateInfo.RateInfos.RateInfo[0].RateKey);",
					"            break;",
					"        case 'pricecheck':",
					"            pm.environment.set('booking_key', jsonData.HotelPriceCheckRS.PriceCheckInfo.BookingKey);",
					"            break;",
					"        case 'records?mode=create':",
					"            pm.environment.set('pnr', jsonData.CreatePassengerNameRecordRS.ItineraryRef.ID);",
					"            break;",
					"        case 'orders':",
					"            if ((request.url.split(\"/\")[6]) == ('createBooking')) {",
					"                pm.environment.set('pnr', jsonData.confirmationId);",
					"            };",
					"            break;",
					"    }",
					"}",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "paymentTypeCode",
			"value": ""
		}
	]
}