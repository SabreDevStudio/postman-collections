{
  "info": {
    "_postman_id": "db45fd8a-ac9e-4fba-b39b-b03dca5038c8",
    "name": "DC Stateless Services v1.0",
    "description": "## **Digital Connect**\n\nDigital Connect Stateless services are lightweight, flexible APIs that let's you customize the flight booking experience you wish to offer end-to-end.\n\nTravel ecosystem is complex. With our Stateless services, we have taken the step to detangle the complexity and offer a simple, straightforward solution that is needed to get a particular job done.\n\nBy taking away the need for completing a big list of prerequisites to make a request, our APIs can now be seamlessly integrated into any flow, in the order you prefer to create the best experience for your users.\n\n**How to use this collection?**\n\n1. Make sure you have also imported environment file.\n2. Once environment is added, update it with details and credentials for your airline. You can get more details in \"Create Auth Token\" documentation section which is available under \"Setup\" folder here in Postman.\n3. After that you're ready to run \"Create Auth Token\" under \"Setup\" folder. That will generate the token needed for any of the services in this collection.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Setup",
      "item": [
        {
          "name": "Create Auth Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code == 200){",
                  "",
                  "    const response = pm.response.json();",
                  "",
                  "    if (response.access_token && response.token_type) {",
                  "        pm.environment.set(\"authToken\", response.access_token);",
                  "    }",
                  "    ",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Basic {{secret}}",
                "type": "default"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "grant_type=client_credentials"
            },
            "url": {
              "raw": "{{environment}}/v2/auth/token/",
              "host": [
                "{{environment}}"
              ],
              "path": [
                "v2",
                "auth",
                "token",
                ""
              ]
            },
            "description": "## Authentication Token\n\n[**Description**](https://developer.sabre.com/docs/rest_apis/session_management/token_create_api/v2)**,** [**Resources**](https://developer.sabre.com/docs/rest_apis/session_management/token_create_api/v2/reference-documentation)**,** [**Password Management**](https://developer.sabre.com/guides/travel-agency/developer-guides/password-management)**,** [**Client IDs**](https://developer.sabre.com/guides/travel-agency/developer-guides/sabre-api-client-ids)\n\nOAuth Token Create /v2 is the standard method for authentication & authorization of **Sabre DC Stateless REST APIs**.\n\nIf you have successfully imported the environment file associated with this collection, you will have the following variables that require you to add your airline credentials and data:\n\norganization, domain, posCountry, posOfficeCode, posAccountingCity, posStation, lniata, _pcc,_ secret\n\nOnce that data is filled you can run this request. Upon successful execution, the corresponding token will be stored in a _{{_authToken_}}_ variable and will be automatically used in subsequent API calls."
          },
          "response": []
        }
      ],
      "description": "## How to Setup\n\nOAuth Token Create /v2 is the standard method for authentication & authorization of **Sabre DC Stateless REST APIs**.\n\nIn this folder you can find request needed to get your Token set in environment variables so that you can use any of the DC Stateless Services in this collection.\n\nCheck more details on \"Create Auth Token\" request documentation."
    },
    {
      "name": "Available Services",
      "item": [
        {
          "name": "Seats",
          "item": [
            {
              "name": "Seats Service - Shop for Seats (Seat Map)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"calculateDiscount\": true,\n    \"currencyOverrideCode\": \"USD\",\n    \"segmentReferenceId\": \"SEG-1\",\n    \"fareQualifiers\": [\n        {\n            \"passengerReferenceId\": \"PAX-1\",\n            \"fareBasisCodes\": [\n                {\n                    \"fareBasisCode\": \"{{fareBasisCode}}\",\n                    \"segmentReferenceId\": \"SEG-1\"\n                }\n            ]\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\"\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/seats/shop",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "seats",
                    "shop"
                  ]
                },
                "description": "## Shop for Seats\n\nStateless Seat Shop Service provides a list of available seats for a specific flight for one or multiple passengers. Seat request should provide passenger/s details \\[passenger type etc\\] for single flight segment. The service responds with the seat map, seat prices and other relevant information. Seat availability and seat prices \\[free seats or paid seats\\], are based on given passenger data. Discounts will be returned if applicable."
              },
              "response": [
                {
                  "name": "Seats Service - Shop for Seats (Seat Map)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"calculateDiscount\": true,\n    \"currencyOverrideCode\": \"USD\",\n    \"segmentReferenceId\": \"SEG-1\",\n    \"fareQualifiers\": [\n        {\n            \"passengerReferenceId\": \"PAX-1\",\n            \"fareBasisCodes\": [\n                {\n                    \"fareBasisCode\": \"{{fareBasisCode}}\",\n                    \"segmentReferenceId\": \"SEG-1\"\n                }\n            ]\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\"\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/shop",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "shop"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 20:00:26 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "fa856df7-afb5-4d2e-b4b6-43395c9a3e9c"
                    },
                    {
                      "key": "Vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "bc0d029ede65bfd5"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "bc0d029ede65bfd5"
                    },
                    {
                      "key": "Content-Encoding",
                      "value": "gzip"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"offer\": {\n        \"id\": \"a9a18ba5-ea4b-4e70-93cf-542e98883963\",\n        \"items\": [\n            {\n                \"id\": \"a9a18ba5-ea4b-4e70-93cf-542e98883963-1\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1B\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        }\n                    ],\n                    \"totalPrice\": {\n                        \"totals\": [\n                            {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            {\n                \"id\": \"a9a18ba5-ea4b-4e70-93cf-542e98883963-2\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1C\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        }\n                    ],\n                    \"totalPrice\": {\n                        \"totals\": [\n                            {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            {\n                \"id\": \"a9a18ba5-ea4b-4e70-93cf-542e98883963-3\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1J\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        }\n                    ],\n                    \"totalPrice\": {\n                        \"totals\": [\n                            {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            {\n                \"id\": \"a9a18ba5-ea4b-4e70-93cf-542e98883963-4\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1K\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n
                }
              ]
            },
            {
              "name": "Seats Service - Add Seats",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const response = pm.response.json();\r",
                      "if (pm.response.code == 200 && !response.errors) {\r",
                      "    if (response.seats && response.seats.length > 0) {\r",
                      "        const seat = response.seats[0];\r",
                      "        pm.collectionVariables.set('lastAddedSeatNumber', seat.seatNumber);\r",
                      "    }\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"preference\": \"AN\",\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n    \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\"\n                    }\n                }\n            ]\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/seats/add",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "seats",
                    "add"
                  ]
                },
                "description": "## Add Seats\n\nStateless Add Seat Service allows the user to book a specific seat/s for passenger/s for a specific single flight, in addition the user may apply seat price override. Prior to adding the specified seat/s the user may call the above service \\[seats/shop\\] to obtain a list of available seats with prices \\[free seats or paid seats\\]. Based on the seat service response user may then call the service seats/add to reserve the specific seat/s for the requested passengers that should be added to the reservation.\n\n**Reference Documentation**"
              },
              "response": [
                {
                  "name": "Seats Service - Add Seats with seat number witout price override",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n     \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\",\n                        \"seatNumber\": \"1A\"\n                    }\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/add",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "add"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 20:04:03 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Length",
                      "value": "552"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "e0240b2e-aa0c-4f09-8b5f-408a77813eef"
                    },
                    {
                      "key": "Vary",
                      "value": "Origin"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Method"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Headers"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "f0dc9047560eac4a"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "f0dc9047560eac4a"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"1A\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\"\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"2023-08-15T10:42:00\",\n            \"arrivalDateTime\": \"2023-08-15T19:25:00\",\n            \"departureAirportCode\": \"LAX\",\n            \"arrivalAirportCode\": \"JFK\",\n            \"operatingAirlineCode\": \"X0\",\n            \"bookingAirlineCode\": \"X0\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"0791\",\n            \"brandCode\": \"ES\",\n            \"bookingClassCode\": \"Y\",\n            \"operatingFlightNumber\": \"0791\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"01.01\",\n            \"givenName\": \"EUGENE\",\n            \"surname\": \"DIAZ\"\n        }\n    ]\n}"
                },
                {
                  "name": "Seats Service - Add Seats with seat number and price override",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n    \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\",\n                        \"seatNumber\": \"1C\"\n                    },\n                    \"price\": {\n                        \"unitPrices\": [\n                            {\n                                \"total\": {\n                                    \"amount\": {\n                                        \"amount\": \"55.00\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                },\n                                \"totalBreakdown\": {\n                                    \"base\": {\n                                        \"amount\": {\n                                            \"amount\": \"55.00\",\n                                            \"currencyCode\": \"USD\"\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/add",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "add"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 20:15:03 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Length",
                      "value": "570"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "5d3df50d-7404-4a18-a426-e4b0ced857ba"
                    },
                    {
                      "key": "Vary",
                      "value": "Origin"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Method"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Headers"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "6d23a03f46955a5e"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "6d23a03f46955a5e"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"1C\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\",\n            \"airExtraId\": \"38\"\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"2023-08-15T10:42:00\",\n            \"arrivalDateTime\": \"2023-08-15T19:25:00\",\n            \"departureAirportCode\": \"LAX\",\n            \"arrivalAirportCode\": \"JFK\",\n            \"operatingAirlineCode\": \"X0\",\n            \"bookingAirlineCode\": \"X0\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"0791\",\n            \"brandCode\": \"ES\",\n            \"bookingClassCode\": \"Y\",\n            \"operatingFlightNumber\": \"0791\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"01.01\",\n            \"givenName\": \"EUGENE\",\n            \"surname\": \"DIAZ\"\n        }\n    ]\n}"
                },
                {
                  "name": "Seats Service - Add Seats with price override without seat number",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"preference\": \"AN\",\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n    \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\"\n                    },\n                    \"price\": {\n                        \"unitPrices\": [\n                            {\n                                \"total\": {\n                                    \"amount\": {\n                                        \"amount\": \"55.00\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                },\n                                \"totalBreakdown\": {\n                                    \"base\": {\n                                        \"amount\": {\n                                            \"amount\": \"55.00\",\n                                            \"currencyCode\": \"USD\"\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/add",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "add"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 20:18:27 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Length",
                      "value": "571"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "1f0569f7-30d7-4cb5-9960-a366626ba99c"
                    },
                    {
                      "key": "Vary",
                      "value": "Origin"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Method"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Headers"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "82de072a4ee3e3c3"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "82de072a4ee3e3c3"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"24C\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\",\n            \"airExtraId\": \"43\"\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"2023-08-15T10:42:00\",\n            \"arrivalDateTime\": \"2023-08-15T19:25:00\",\n            \"departureAirportCode\": \"LAX\",\n            \"arrivalAirportCode\": \"JFK\",\n            \"operatingAirlineCode\": \"X0\",\n            \"bookingAirlineCode\": \"X0\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"0791\",\n            \"brandCode\": \"ES\",\n            \"bookingClassCode\": \"Y\",\n            \"operatingFlightNumber\": \"0791\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"01.01\",\n            \"givenName\": \"EUGENE\",\n            \"surname\": \"DIAZ\"\n        }\n    ]\n}"
                },
                {
                  "name": "Seats Service - Add Seats with preference without price override",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"preference\": \"AN\",\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n    \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\"\n                    }\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/add",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "add"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 20:19:14 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Length",
                      "value": "553"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "f63df64d-4f22-4cba-89db-f851b6130e50"
                    },
                    {
                      "key": "Vary",
                      "value": "Origin"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Method"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Headers"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "85c294de8f214f9f"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "85c294de8f214f9f"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"24C\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\"\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"2023-08-15T10:42:00\",\n            \"arrivalDateTime\": \"2023-08-15T19:25:00\",\n            \"departureAirportCode\": \"LAX\",\n            \"arrivalAirportCode\": \"JFK\",\n            \"operatingAirlineCode\": \"X0\",\n            \"bookingAirlineCode\": \"X0\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"0791\",\n            \"brandCode\": \"ES\",\n            \"bookingClassCode\": \"Y\",\n            \"operatingFlightNumber\": \"0791\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"01.01\",\n            \"givenName\": \"EUGENE\",\n            \"surname\": \"DIAZ\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Seats Service - Remove Seats",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"{{lastAddedSeatNumber}}\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\"\n        }\n    ],\n    \"changeOfGauge\": false,\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/seats/remove",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "seats",
                    "remove"
                  ]
                },
                "description": "## Remove Seats\n\nThis service allows a user to cancel previously booked seat/s for a particular passenger for a flight segment."
              },
              "response": [
                {
                  "name": "Seats Service - Remove Seats",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"{{lastAddedSeatNumber}}\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\"\n        }\n    ],\n    \"changeOfGauge\": false,\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/remove",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "remove"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 20:20:06 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Length",
                      "value": "553"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "e1e693e6-c996-47a0-82ef-800ee8206d04"
                    },
                    {
                      "key": "Vary",
                      "value": "Origin"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Method"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Headers"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "cef716d8495d854b"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "cef716d8495d854b"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"24C\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\"\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"2023-08-15T10:42:00\",\n            \"arrivalDateTime\": \"2023-08-15T19:25:00\",\n            \"departureAirportCode\": \"LAX\",\n            \"arrivalAirportCode\": \"JFK\",\n            \"operatingAirlineCode\": \"X0\",\n            \"bookingAirlineCode\": \"X0\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"0791\",\n            \"brandCode\": \"ES\",\n            \"bookingClassCode\": \"Y\",\n            \"operatingFlightNumber\": \"0791\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"01.01\",\n            \"givenName\": \"EUGENE\",\n            \"surname\": \"DIAZ\"\n        }\n    ]\n}"
                }
              ]
            }
          ],
          "description": "## DC Stateless Seats Service\n\nDigital Connect Stateless Seats service is lightweight API and can be used to retrieve seat map with prices and perform other operations related to the seats portion of a travel itinerary."
        },
        {
          "name": "Ancillaries (Beta)",
          "item": [
            {
              "name": "Ancillaries Service - Shop for Ancillaries",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ancillaryRequestType\": \"ByPnrlocator\",\n  \"pnrLocator\":\"{{recordLocator}}\"\n}"
                },
                "url": {
                  "raw": "{{environment}}/v1/dc/ancillaries/shop",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v1",
                    "dc",
                    "ancillaries",
                    "shop"
                  ]
                },
                "description": "## **DC Stateless Ancillaries Shop**\n\nReference Documentation"
              },
              "response": [
                {
                  "name": "Shop for Ancillaries by Reservation",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"ancillaryRequestType\": \"ByPnrlocator\",\n  \"pnrLocator\":\"{{recordLocator}}\"\n}"
                    },
                    "url": {
                      "raw": "{{endpoint}}/v1/dc/ancillaries/shop",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v1",
                        "dc",
                        "ancillaries",
                        "shop"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Thu, 09 Mar 2023 10:44:15 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "85f508d72c5ea2d1"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "cdd23a380b8e6a85a53ff6260aa6b0c7"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.1.4"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "7405c27c-1e1c-490a-acf9-0550759f65fc"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "edf7a314-b067-4580-9c06-03364bdffa79"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "0-16494598-16494599 NNNN CT(1 9 0) RT(1678358652339 8) q(0 0 0 -1) r(28 28) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"ancillaries\": [\n        {\n            \"id\": \"ancillary_ancillary_1\",\n            \"subCode\": \"988\",\n            \"group\": \"RESERVED_99\",\n            \"reasonForIssuance\": {\n                \"code\": \"D\",\n                \"value\": \"FINANCIAL_IMPACT\"\n            },\n            \"commercialName\": \"CREDIT CARD CHARGE\",\n            \"airlineCode\": \"X0\",\n            \"specialService\": {\n                \"requiredProperties\": {}\n            },\n            \"electronicMiscDocType\": {\n                \"value\": \"STANDALONE\",\n                \"code\": \"1\",\n                \"isConsumedAtIssuance\": true\n            },\n            \"bookingMethod\": {\n                \"value\": \"ANY_ALLOWED\",\n                \"code\": \"BLANK\"\n            },\n            \"isDisplayOnly\": false,\n            \"weights\": [],\n            \"ancillaryRules\": {\n                \"isRefundable\": true,\n                \"formOfRefund\": {\n                    \"value\": \"ORIGINAL\",\n                    \"code\": \"1\"\n                },\n                \"isExchangeable\": false,\n                \"isCommissionable\": false,\n                \"feeApplicationMethod\": {\n                    \"value\": \"TRAVEL\",\n                    \"code\": \"4\"\n                },\n                \"freeOfChargeRules\": []\n            },\n            \"bundledAncillaryRefs\": [],\n            \"serviceType\": {\n                \"value\": \"FLIGHT_RELATED\",\n                \"code\": \"F\"\n            }\n        },\n        {\n            \"id\": \"ancillary_ancillary_2\",\n            \"subCode\": \"98B\",\n            \"group\": \"RESERVED_99\",\n            \"reasonForIssuance\": {\n                \"code\": \"D\",\n                \"value\": \"FINANCIAL_IMPACT\"\n            },\n            \"commercialName\": \"TRANSPORTATION CREDIT VOUCHER\",\n            \"airlineCode\": \"X0\",\n            \"specialService\": {\n                \"requiredProperties\": {}\n            },\n            \"electronicMiscDocType\": {\n                \"value\": \"STANDALONE\",\n                \"code\": \"1\",\n                \"isConsumedAtIssuance\": true\n            },\n            \"bookingMethod\": {\n                \"value\": \"ANY_ALLOWED\",\n                \"code\": \"BLANK\"\n            },\n            \"isDisplayOnly\": false,\n            \"weights\": [],\n            \"ancillaryRules\": {\n                \"isRefundable\": true,\n                \"formOfRefund\": {\n                    \"value\": \"ORIGINAL\",\n                    \"code\": \"1\"\n                },\n                \"isExchangeable\": false,\n                \"isCommissionable\": false,\n                \"freeOfChargeRules\": [\n                    \"EMD_REQUIRED\"\n                ]\n            },\n            \"bundledAncillaryRefs\": [],\n            \"serviceType\": {\n                \"value\": \"FLIGHT_RELATED\",\n                \"code\": \"F\"\n            }\n        },\n        {\n            \"id\": \"ancillary_ancillary_3\",\n            \"subCode\": \"98I\",\n            \"group\": \"RESERVED_99\",\n            \"reasonForIssuance\": {\n                \"code\": \"D\",\n                \"value\": \"FINANCIAL_IMPACT\"\n            },\n            \"commercialName\": \"SERVICE CHARGE\",\n            \"airlineCode\": \"X0\",\n            \"specialService\": {\n                \"requiredProperties\": {}\n            },\n            \"electronicMiscDocType\": {\n                \"value\": \"STANDALONE\",\n                \"code\": \"1\",\n                \"isConsumedAtIssuance\": true\n            },\n            \"bookingMethod\": {\n                \"value\": \"ANY_ALLOWED\",\n                \"code\": \"BLANK\"\n            },\n            \"isDisplayOnly\": false,\n            \"weights\": [],\n            \"ancillaryRules\": {\n                \"isRefundable\": true,\n                \"formOfRefund\": {\n                    \"value\": \"ORIGINAL\",\n                    \"code\": \"1\"\n                },\n                \"isExchangeable\": false,\n                \"isCommissionable\": false,\n                \"feeApplicationMethod\": {\n                    \"value\": \"TRAVEL\",\n                    \"code\": \"4\"\n                },\n                \"freeOfChargeRules\": []\n            },\n            \"bundledAncillaryRefs\": [],\n            \"serviceType\": {\n                \"value\": \"FLIGHT_RELATED\",\n                \"code\": \"F\"\n            }\n        },\n        {\n            \"id\": \"ancillary_ancillary_4\",\n            \"subCode\": \"98J\",\n            \"group\": \"RESERVED_99\",\n            \"reasonForIssuance\": {\n                \"code\": \"D\",\n                \"value\": \"FINANCIAL_IMPACT\"\n            },\n            \"commercialName\": \"MISCELLANEOUS CHARGE\",\n            \"airlineCode\": \"X0\",\n            \"specialService\": {\n
                }
              ]
            },
            {
              "name": "Ancillaries Service - Add Ancillaries",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"ancillaries\": [\n        {\n            \"ancillaryId\": \"{{ancillaryId}}\",\n            \"passengerId\": \"{{nameNumber}}\",\n            \"groupCode\": \"{{groupCode}}\",\n            \"commercialName\": \"{{commercialName}}\",\n            \"rficCode\": \"{{rficCode}}\",\n            \"subcode\": \"{{subcode}}\",\n            \"operatingAirlineCode\": \"{{marketingAirline}}\",\n            \"emdType\": \"Associated\",\n            \"segmentIds\": [\n                \"{{segmentNumber}}\"\n            ],\n            \"quantity\": 1\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}/v1/dc/ancillaries/add",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v1",
                    "dc",
                    "ancillaries",
                    "add"
                  ]
                },
                "description": "## **DC Stateless Ancillaries Add**\n\nReference Documentation"
              },
              "response": [
                {
                  "name": "Add Ancillaries",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"ancillaries\": [\n        {\n            \"ancillaryId\": \"01.01_ancillary_ancillary_67_1\",\n            \"passengerId\": \"{{nameNumber}}\",\n            \"groupCode\": \"BG\",\n            \"commercialName\": \"BAGGAGE UP TO 50 LB 23 KG\",\n            \"rficCode\": \"C\",\n            \"subcode\": \"0C3\",\n            \"operatingAirlineCode\": \"{{marketingAirline}}\",\n            \"emdType\": \"Associated\",\n            \"segmentIds\": [\n                \"1\"\n            ],\n            \"quantity\": 1\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{endpoint}}/v1/dc/ancillaries/add",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v1",
                        "dc",
                        "ancillaries",
                        "add"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Thu, 09 Mar 2023 10:57:23 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Accept-Encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "9bddbc674aa122ac"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "4d2e523093451f1d0bb043201412d9eb"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.1.4"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "68f61833-55ec-4a13-89d3-79bbbe59bed7"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "597dcffd-22dc-4d3b-82ea-b8deeef6e2e1"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "incap_ses_702_2768615=yCsmJGRCyGkFG+hgQwK+CZO7CWQAAAAAcak+jLvo1L8Ofr6XCUL8Fw==; path=/; Domain=.api.cert.platform.sabre.com; Secure; SameSite=None"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "3-44478951-44478952 NNNN CT(2 4 0) RT(1678359438339 9) q(0 0 0 0) r(42 42) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"results\": [\n        {\n            \"ancillaryOfferId\": \"01.01_ANCILLARY_ANCILLARY_67_1\",\n            \"airExtraIds\": [\n                \"34\"\n            ],\n            \"status\": {\n                \"type\": \"SUCCESS\"\n            }\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Ancillaries Service - Remove Ancillaries",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"airExtraItemIds\": [\n        \"{{lastAddedAncillaryId}}\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}/v1/dc/ancillaries/remove",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v1",
                    "dc",
                    "ancillaries",
                    "remove"
                  ]
                },
                "description": "## **DC Stateless Ancillaries Remove**\n\nReference Documentation"
              },
              "response": [
                {
                  "name": "Remove Ancillaries",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"airExtraItemIds\": [\n        \"{{lastAddedAncillaryId}}\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{endpoint}}/v1/dc/ancillaries/remove",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v1",
                        "dc",
                        "ancillaries",
                        "remove"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Thu, 09 Mar 2023 10:58:53 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Accept-Encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "8e90c59c9c6443a"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "be1825dc61e1e04af1da68baac63da92"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.1.4"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "cb6156b1-cd87-474e-bd31-50ea5fbfdc02"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "b49fe0d8-7252-40c1-ab16-e101c9568735"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "11-73894489-73894492 NNNN CT(3 11 0) RT(1678359530012 10) q(0 0 0 -1) r(31 31) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"results\": [\n        {\n            \"airExtraItemId\": \"34\",\n            \"airExtraItemStatus\": {\n                \"type\": \"SUCCESS\"\n            }\n        }\n    ]\n}"
                }
              ]
            }
          ],
          "description": "## DC Stateless Ancillaries Service\n\nDigital Connect Stateless Ancillaries service is lightweight API and can be used to retrieve ancillaries with prices and perform other operations related to the ancillaries portion of a travel itinerary.\n\nReference Documentation"
        },
        {
          "name": "Payment (Alpha)",
          "item": [
            {
              "name": "Payment Service - Authorize Payment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"{{posOfficeCode}}\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\",\r\n            \"number\": \"{{posStation}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    },\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"amount\": {\r\n                \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n            },\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"holderName\": \"McDonnell Douglas\"\r\n        }\r\n    ],\r\n    \"billingData\": {\r\n        \"street1\": \"123 Main Street\",\r\n        \"street2\": \"Apartment A-12\",\r\n        \"city\": \"New York\",\r\n        \"zipcode\": \"12345\",\r\n        \"country\": \"US\",\r\n        \"phone\": [\r\n            {\r\n                \"phoneType\": \"HOME\",\r\n                \"countryCode\": \"91\",\r\n                \"areaCode\": \"469\",\r\n                \"number\": \"111111\",\r\n                \"extension\": \"123\"\r\n            }\r\n        ],\r\n        \"email\": [\r\n            \"accept@accept.com\"\r\n        ]\r\n    },\r\n    \"languageForBooking\": \"en_US\"\r\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/pay/authorizePayment",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "pay",
                    "authorizePayment"
                  ]
                },
                "description": "## **DC Stateless Payment Service**\n\nThe following stateless service is used for validating if the PNR is OK for fulfillment and to Authorize the given payment methods. It supports upto 2 forms of payment and also prevents any fraudulent activities based on passenger and payment details.Distributes the amount automatically for Authorizing (MFOP) for the VCR's and/or EMD's. It also Automatically logins in ACL account for using agency credit."
              },
              "response": [
                {
                  "name": "Payment Authorization",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"{{posOfficeCode}}\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\",\r\n            \"number\": \"{{posStation}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"*ETKT*\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"HDQ\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    },\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"CreditCard\",\r\n            \"amount\": {\r\n                \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n            },\r\n            \"cardCode\": \"CA\",\r\n            \"cardNumber\": \"5101180000000007\",\r\n            \"cardSecurityCode\": \"737\",\r\n            \"expirationDate\": \"2030-03\",\r\n            \"holderName\": \"McDonnell Douglas\"\r\n        }\r\n    ],\r\n    \"billingData\": {\r\n        \"street1\": \"123 Main Street\",\r\n        \"street2\": \"Apartment A-12\",\r\n        \"city\": \"New York\",\r\n        \"zipcode\": \"12345\",\r\n        \"country\": \"US\",\r\n        \"phone\": [\r\n            {\r\n                \"phoneType\": \"HOME\",\r\n                \"countryCode\": \"91\",\r\n                \"areaCode\": \"469\",\r\n                \"number\": \"111111\",\r\n                \"extension\": \"123\"\r\n            }\r\n        ],\r\n        \"email\": [\r\n            \"accept@accept.com\"\r\n        ]\r\n    },\r\n    \"languageForBooking\": \"en_US\"\r\n}"
                    },
                    "url": {
                      "raw": "https://api-crt.cert.havail.sabre.com/v5/dcp/pay/authorizePayment",
                      "protocol": "https",
                      "host": [
                        "api-crt",
                        "cert",
                        "havail",
                        "sabre",
                        "com"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "pay",
                        "authorizePayment"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 14 Mar 2023 09:12:38 GMT"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "JSESSIONID=775B49ABA9BD56550CF14B5AE4257722; Path=/; HttpOnly"
                    },
                    {
                      "key": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "db8f0997a57ef319"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "359746aec1c02453db8f0997a57ef319"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "418f2569-bad0-474d-8229-3f4195f40ad1"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "SAMEORIGIN"
                    },
                    {
                      "key": "Referrer-Policy",
                      "value": "origin-when-cross-origin"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src * 'unsafe-inline' 'unsafe-eval'; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src *; style-src * 'unsafe-inline';"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Server",
                      "value": "Sabre Gateway"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"recordLocator\": \"DMMGBR\",\n    \"status\": \"SUCCESS\",\n    \"payments\": [\n        {\n            \"paymentType\": \"CreditCard\",\n            \"number\": \"5101180000000007\",\n            \"paymentCode\": \"CA\",\n            \"auth\": [\n                {\n                    \"documentType\": \"EMD\",\n                    \"status\": \"APPROVED\",\n                    \"approvalCode\": \"017264\",\n                    \"sabreTransactionId\": \"01121678785156784316\",\n                    \"supplierResponseCode\": \"00\",\n                    \"supplierTransactionId\": \"700016004291327\",\n                    \"supplierId\": \"ADYEN\",\n                    \"supplierReferenceId\": \"KR6CNZ2Q9VTFWR82\",\n                    \"paymentReference\": \"01121678785156784316\",\n                    \"price\": {\n                        \"amount\": 56,\n                        \"currency\": \"USD\"\n                    },\n                    \"description\": \"AUTHORISED\"\n                }\n            ]\n        }\n    ]\n}"
                }
              ]
            }
          ],
          "description": "## **DC Stateless Payment Service**\n\nThe following stateless service is used for validating if the PNR is OK for fulfillment and to Authorize the given payment methods. It supports upto 2 forms of payment and also prevents any fraudulent activities based on passenger and payment details.Distributes the amount automatically for Authorizing (MFOP) for the VCR's and/or EMD's. It also Automatically logins in ACL account for using agency credit.\n\nReference Documentation"
        },
        {
          "name": "Fulfillment (Alpha)",
          "item": [
            {
              "name": "Fulfillment Service - Fulfill",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"auth\": [\r\n                {\r\n                    \"documentType\": \"{{documentType}}\",\r\n                    \"approvalCode\": \"{{approvalCode}}\",\r\n                    \"sabreTransactionId\": \"{{sabreTransactionId}}\",\r\n                    \"supplierTransactionId\": \"{{supplierTransactionId}}\",\r\n                    \"amount\": {\r\n                        \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                        \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"languageForBooking\": \"en_US\",\r\n     \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"IB\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    }\r\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/book/fulfill",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "book",
                    "fulfill"
                  ]
                },
                "description": "## **DC Stateless Fulfillment Service**\n\nFulfillment stateless service can be used for fulfilling VCR's (issuance tickets ) and/or EMD's once payment authorization is complete and to prevent any fraudulent activities based on passenger and payment details. The service Notifies the customers about bookings and their modifications, the stateless service generates VCR and EMD's records based on the given payment transaction details, which can later be used for any post booking operations."
              },
              "response": [
                {
                  "name": "Fulfill Ancillaries",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"CreditCard\",\r\n            \"cardCode\": \"CA\",\r\n            \"cardNumber\": \"5101180000000007\",\r\n            \"cardSecurityCode\": \"737\",\r\n            \"expirationDate\": \"2030-03\",\r\n            \"auth\": [\r\n                {\r\n                    \"documentType\": \"{{documentType}}\",\r\n                    \"approvalCode\": \"{{approvalCode}}\",\r\n                    \"sabreTransactionId\": \"{{sabreTransactionId}}\",\r\n                    \"supplierTransactionId\": \"{{supplierTransactionId}}\",\r\n                    \"amount\": {\r\n                        \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                        \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"languageForBooking\": \"en_US\",\r\n     \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"US\",\r\n            \"officeCode\": \"IB\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"{{X0Channel}}\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    }\r\n}"
                    },
                    "url": {
                      "raw": "{{endpoint}}/v5/dcp/book/fulfill",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "book",
                        "fulfill"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Tue, 14 Mar 2023 09:19:27 GMT"
                    },
                    {
                      "key": "set-cookie",
                      "value": "JSESSIONID=EDA1F999ED33BA80A230F32DF2BC21C4; Path=/; HttpOnly"
                    },
                    {
                      "key": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "3f855a1531137b82"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "2b5bf81d3563dab66fbbdcc51b535a4a"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "86404430-e0b4-4a18-9335-4f5cf6743847"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "6b39728b-35e6-4c57-93b2-f979346063b7"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "2-5343048-5343065 NNNN CT(6 7 0) RT(1678785560641 115) q(0 0 0 -1) r(70 70) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"status\": \"SUCCESS\",\n    \"recordLocator\": \"DMMGBR\"\n}"
                }
              ]
            }
          ],
          "description": "## **DC Stateless Fulfillment Service**\n\nFulfillment stateless service can be used for fulfilling VCR's (issuance tickets ) and/or EMD's once payment authorization is complete and to prevent any fraudulent activities based on passenger and payment details. The service Notifies the customers about bookings and their modifications, the stateless service generates VCR and EMD's records based on the given payment transaction details, which can later be used for any post booking operations.\n\nReference Documentation"
        }
      ],
      "description": "## **What are the services available?**\n\nThis folder provides you a quick list of services that are available as part of DC Stateless Services."
    },
    {
      "name": "Sample Use Cases",
      "item": [
        {
          "name": "Shop and Book Paid Seat",
          "item": [
            {
              "name": "Display PNR (helper - not part of Stateless offering)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){\r",
                      "\r",
                      "    const response = pm.response.json();\r",
                      "\r",
                      "    if (response.reservation && response.reservation.segments.segment.length > 0) {\r",
                      "\r",
                      "        postman.setNextRequest();\r",
                      "        \r",
                      "        const passenger = response.reservation.passengers.passenger[0];\r",
                      "        const segment = response.reservation.segments.segment[0].air;\r",
                      "\r",
                      "        pm.collectionVariables.set('segmentNumber', response.reservation.segments.segment.length)\r",
                      "        pm.collectionVariables.set('nameNumber', passenger.nameNumber)\r",
                      "        pm.collectionVariables.set('recordLocator', response.reservation.bookingDetails.recordLocator);\r",
                      "        pm.collectionVariables.set('fareBasisCode', response.reservation.itineraryPricing.pricedItinerary[0].airItineraryPricingInfo.ptcFareBreakdown[0].fareBasisCode[0]);\r",
                      "        pm.collectionVariables.set('pseudoCityCode', response.reservation.pos.source.pseudoCityCode);\r",
                      "        pm.collectionVariables.set('paxFirstName', passenger.firstName);\r",
                      "        pm.collectionVariables.set('paxLastName', passenger.lastName);\r",
                      "        pm.collectionVariables.set('departureAirport', segment.departureAirport);\r",
                      "        pm.collectionVariables.set('arrivalAirport', segment.arrivalAirport);\r",
                      "        pm.collectionVariables.set('departureDateTime', segment.departureTime);\r",
                      "        pm.collectionVariables.set('departureDate', segment.departureTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('departureTime', segment.departureTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('arrivalDateTime', segment.arrivalTime);\r",
                      "        pm.collectionVariables.set('arrivalDate', segment.arrivalTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('arrivalTime', segment.arrivalTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('flightNumber', segment.flightNumber);\r",
                      "        pm.collectionVariables.set('operatingFlightNumber', segment.operatingFlightNumber);\r",
                      "        pm.collectionVariables.set('marketingAirline', segment.airline);\r",
                      "        pm.collectionVariables.set('operatingAirline', segment.operatingAirline);\r",
                      "        pm.collectionVariables.set('classOfService', segment.classOfService);\r",
                      "        pm.collectionVariables.set('operatingClassOfService', segment.operatingClassOfService);\r",
                      "        pm.collectionVariables.set('cabinCode', segment.cabin.code);\r",
                      "        pm.collectionVariables.set('equipment', segment.equipment);\r",
                      "        pm.collectionVariables.set('inboundConnection', segment.inboundConnection);\r",
                      "        pm.collectionVariables.set('outboundConnection', segment.outboundConnection);\r",
                      "\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', 0);\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraTotalAmount', 0);\r",
                      "\r",
                      "        if (passenger.ancillaryServices.ancillaryService\r",
                      "            && passenger.ancillaryServices.ancillaryService.length > 0) {\r",
                      "            const unfulfilledAirExtraIds = [];\r",
                      "            let unfulfilledAirExtraCalculatedTotal = 0;\r",
                      "\r",
                      "            passenger.ancillaryServices.ancillaryService.forEach(anc => {\r",
                      "                if(anc.status == \"HD\"){\r",
                      "                    unfulfilledAirExtraIds.add(anc.id);\r",
                      "                    unfulfilledAirExtraCalculatedTotal += anc.totalTTLPrice.price;\r",
                      "                    pm.collectionVariables.set('unfulfilledAirExtraTotalCurrency', anc.totalTTLPrice.currency);\r",
                      "                }         \r",
                      "            });\r",
                      "\r",
                      "            pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', unfulfilledAirExtraCalculatedTotal);\r",
                      "            \r",
                      "\r",
                      "            Object.keys(pm.collectionVariables.toObject()).forEach(key => {\r",
                      "                if(key.includes('ancId-') || key.includes('seatCode-') || key.includes('seatAirline-'))\r",
                      "                    pm.collectionVariables.unset(key)\r",
                      "            });\r",
                      "\r",
                      "            unfulfilledAirExtraIds.forEach((ancId,a) => {\r",
                      "                pm.collectionVariables.set(`ancId-${a+1}`, ancId);\r",
                      "            });\r",
                      "        }\r",
                      "    } else {\r",
                      "        postman.setNextRequest(null);\r",
                      "    }\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "const pnr = \"GYCIGI\";\r",
                      "postman.setEnvironmentVariable(\"reloc\", pnr)"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"{{reloc}}\"\r\n    }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{environment}}/v5/dcp/reservation/pnr/display",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v5",
                    "dcp",
                    "reservation",
                    "pnr",
                    "display"
                  ]
                }
              },
              "response": [
                {
                  "name": "Display PNR",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"{{reloc}}\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{environment}}/v5/dcp/reservation/pnr/display",
                      "host": [
                        "{{environment}}"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "reservation",
                        "pnr",
                        "display"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Wed, 02 Aug 2023 18:28:52 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "b0be83ee90b19886"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "898a844dc3e2d7d30d736601007fd251"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.4.0"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "cdd96e34-f9fb-4939-b87a-b6eb70f8ed71"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "a63ca51e-786a-4951-a721-e181d6f7eaed"
                    },
                    {
                      "key": "x-envoy-upstream-service-time",
                      "value": "2844"
                    },
                    {
                      "key": "server",
                      "value": "Sabre Gateway"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "2-23055477-23068680 NNNN CT(1 12 0) RT(1691000753870 174654) q(0 0 0 -1) r(30 30) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"reservation\": {\n        \"bookingDetails\": {\n            \"recordLocator\": \"GYCIGI\",\n            \"creationTime\": \"2023-08-02T13:28:00\",\n            \"systemCreationTimestamp\": \"2023-08-02T13:28:00\",\n            \"creationAgentID\": \"B11\",\n            \"updateTimestamp\": \"2023-08-02T13:28:37\",\n            \"pnrSequence\": 2,\n            \"flightsRange\": {\n                \"start\": \"2023-08-15T10:42:00\",\n                \"end\": \"2023-08-15T19:25:00\"\n            },\n            \"itineraryDate\": {},\n            \"divideSplitDetails\": {},\n            \"estimatedPurgeTimestamp\": \"2023-08-15T00:00:00\",\n            \"updateToken\": \"bFeAjlTM0mvgz8n1yeuHYWvI2bvUtu2/EBMNltNVTsSOvHPLYumvbA==\"\n        },\n        \"pos\": {\n            \"source\": {\n                \"bookingChannel\": {\n                    \"companyName\": {}\n                },\n                \"ttyRecordLocator\": [],\n                \"oac\": {\n                    \"accountingCode\": \"HD\",\n                    \"accountingOfficeStationCode\": \"7777777\",\n                    \"accountingCityCode\": \"HDQ\",\n                    \"partitionId\": \"X0\"\n                },\n                \"bookingSource\": \"A0A0\",\n                \"agentSine\": \"B11\",\n                \"pseudoCityCode\": \"HDQ\",\n                \"isoCountry\": \"US\",\n                \"agentDutyCode\": \"5\",\n                \"airlineVendorID\": \"X0\",\n                \"homePseudoCityCode\": \"HDQ\",\n                \"primeHostId\": \"X0\"\n            },\n            \"airExtras\": false,\n            \"inhibitCode\": \"U\"\n        },\n        \"loyaltyBooking\": false,\n        \"passengers\": {\n            \"corporate\": {\n                \"ancillaryServices\": {}\n            },\n            \"zGroup\": {\n                \"ancillaryServices\": {}\n            },\n            \"passenger\": [\n                {\n                    \"lastName\": \"DIAZ\",\n                    \"firstName\": \"EUGENE\",\n                    \"frequentFlyer\": [],\n                    \"emailAddress\": [],\n                    \"specialRequests\": {\n                        \"genericSpecialRequest\": [\n                            {\n                                \"code\": \"TKNE\",\n                                \"freeText\": \"X0 HK1 LAXJFK0791Y15AUG/0392161477633C1\",\n                                \"status\": \"HK\",\n                                \"numberInParty\": 1,\n                                \"airlineCode\": \"X0\",\n                                \"ticketNumber\": \"0392161477633\",\n                                \"fullText\": \"TKNE X0 HK1 LAXJFK0791Y15AUG/0392161477633C1\",\n                                \"id\": \"8\",\n                                \"type\": \"A\",\n                                \"msgType\": \"S\"\n                            }\n                        ],\n                        \"childRequest\": [],\n                        \"apisRequest\": [\n                            {\n                                \"docsEntry\": {\n                                    \"primaryHolder\": false,\n                                    \"middleName\": \"\",\n                                    \"dateOfBirth\": \"1982-06-30\",\n                                    \"numberInParty\": 1,\n                                    \"id\": \"7\",\n                                    \"freeText\": \"\",\n                                    \"first\": \"EUGENE\",\n                                    \"vendorCode\": \"X0\",\n                                    \"type\": \"A\",\n                                    \"gender\": \"M\",\n                                    \"last\": \"DIAZ\",\n                                    \"status\": \"HK\"\n                                }\n                            }\n                        ],\n                        \"emergencyContactRequest\": [],\n                        \"specialMealRequest\": [],\n                        \"passportInfoMessage\": [],\n                        \"seatRequest\": [],\n                        \"unaccompaniedMinorMessage\": [],\n                        \"wheelchairRequest\": [],\n                        \"ticketingRequest\": []\n                    },\n                    \"seats\": {\n                        \"preReservedSeats\": {},\n                        \"seatSpecialRequests\": {}\n                    },\n                    \"preReservedSeats\": {},\n                    \"ancillaryServices\": {},\n                    \"remarks\": {},\n                    \"phoneNumbers\": {},\n                    \"ticketingInfo\": {},\n                    \"fqtvUpgradeRequests\": {},\n                    \"openReservationElements\": {},\n                    \"id\": \"4\",\n                    \"nameType\": \"S\",\n                    \"passengerType\": \"ADULT\",\n                    \"nameNumber\": \"01.01\",\n
                }
              ]
            },
            {
              "name": "Shop for Paid Seats (Seat Map)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "let jsonData = JSON.parse(responseBody);\r",
                      "\r",
                      "if (pm.response.code == 200 && !jsonData.errors) {\r",
                      "    postman.setNextRequest();\r",
                      "\r",
                      "    //Select paid seat\r",
                      "    let seats = jsonData.seatMaps\r",
                      "        .flatMap(seatMap => seatMap.cabins)\r",
                      "        .flatMap(cabin => cabin.row)\r",
                      "        .flatMap(row => row.slots)\r",
                      "        .map(slot => slot.seat);\r",
                      "\r",
                      "    let paidSeats = seats\r",
                      "        .filter(seat => seat.isOccupied == false)   // consider only not occupied seats\r",
                      "        .filter(seat => seat.isChargeable == true); // consider only chargeable seats\r",
                      "\r",
                      "    let selectedSeat = paidSeats[0];\r",
                      "    pm.collectionVariables.set('seatNumber', selectedSeat.number);\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"calculateDiscount\": true,\n    \"currencyOverrideCode\": \"USD\",\n    \"segmentReferenceId\": \"SEG-1\",\n    \"fareQualifiers\": [\n        {\n            \"passengerReferenceId\": \"PAX-1\",\n            \"fareBasisCodes\": [\n                {\n                    \"fareBasisCode\": \"{{fareBasisCode}}\",\n                    \"segmentReferenceId\": \"SEG-1\"\n                }\n            ]\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\"\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/seats/shop",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "seats",
                    "shop"
                  ]
                }
              },
              "response": [
                {
                  "name": "Shop for Paid Seats (Seat Map)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"calculateDiscount\": true,\n    \"currencyOverrideCode\": \"USD\",\n    \"segmentReferenceId\": \"SEG-1\",\n    \"fareQualifiers\": [\n        {\n            \"passengerReferenceId\": \"PAX-1\",\n            \"fareBasisCodes\": [\n                {\n                    \"fareBasisCode\": \"{{fareBasisCode}}\",\n                    \"segmentReferenceId\": \"SEG-1\"\n                }\n            ]\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\"\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/shop",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "shop"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 18:35:14 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "1a199a95-3288-4ef0-9401-8f6790b65d6b"
                    },
                    {
                      "key": "Vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "2a521e71f6cbf8db"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "2a521e71f6cbf8db"
                    },
                    {
                      "key": "Content-Encoding",
                      "value": "gzip"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"offer\": {\n        \"id\": \"bac3d67c-e1af-4f2c-9a18-d464bfabde90\",\n        \"items\": [\n            {\n                \"id\": \"bac3d67c-e1af-4f2c-9a18-d464bfabde90-1\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1A\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        }\n                    ],\n                    \"totalPrice\": {\n                        \"totals\": [\n                            {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            {\n                \"id\": \"bac3d67c-e1af-4f2c-9a18-d464bfabde90-2\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1B\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        }\n                    ],\n                    \"totalPrice\": {\n                        \"totals\": [\n                            {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            {\n                \"id\": \"bac3d67c-e1af-4f2c-9a18-d464bfabde90-3\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1C\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        }\n                    ],\n                    \"totalPrice\": {\n                        \"totals\": [\n                            {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n                        ]\n                    }\n                }\n            },\n            {\n                \"id\": \"bac3d67c-e1af-4f2c-9a18-d464bfabde90-4\",\n                \"segmentReferenceIds\": [\n                    \"SEG-1\"\n                ],\n                \"passengerReferenceIds\": [\n                    \"PAX-1\"\n                ],\n                \"details\": {\n                    \"type\": \"SeatOfferItem\",\n                    \"commercialName\": \"COMFORT SEAT\",\n                    \"seatNumber\": \"1J\"\n                },\n                \"price\": {\n                    \"unitPrices\": [\n                        {\n                            \"total\": {\n                                \"amount\": {\n                                    \"amount\": \"20.00\",\n                                    \"currencyCode\": \"USD\"\n                                }\n                            }\n
                }
              ]
            },
            {
              "name": "Add Seat",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "if (pm.response.code == 200 && !response.errors) {\r",
                      "    postman.setNextRequest();\r",
                      "\r",
                      "    if (response.seats && response.seats.length > 0) {\r",
                      "        const seat = response.seats[0];\r",
                      "        pm.collectionVariables.set('lastAddedSeatNumber', seat.seatNumber);\r",
                      "    }\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pnrLocator\": \"{{reloc}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n    \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\",\n                        \"seatNumber\": \"{{seatNumber}}\"\n                    }\n                }\n            ]\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/seats/add",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "seats",
                    "add"
                  ]
                }
              },
              "response": [
                {
                  "name": "Add Seat",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"pnrLocator\": \"{{reloc}}\",\n    \"clientContext\": {\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\n        \"stationNumber\": \"{{posStation}}\",\n        \"accountingCode\": \"{{posOfficeCode}}\",\n        \"accountingCity\": \"{{posAccountingCity}}\"\n    },\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"{{departureDateTime}}\",\n            \"arrivalDateTime\": \"{{arrivalDateTime}}\",\n            \"departureAirportCode\": \"{{departureAirport}}\",\n            \"arrivalAirportCode\": \"{{arrivalAirport}}\",\n            \"operatingAirlineCode\": \"{{operatingAirline}}\",\n            \"bookingAirlineCode\": \"{{marketingAirline}}\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"{{flightNumber}}\",\n            \"brandCode\": \"{{brandCode}}\",\n            \"bookingClassCode\": \"{{operatingClassOfService}}\",\n            \"operatingFlightNumber\": \"{{operatingFlightNumber}}\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"{{nameNumber}}\",\n            \"givenName\": \"{{paxFirstName}}\",\n            \"surname\": \"{{paxLastName}}\"\n        }\n    ],\n    \"offers\": [\n        {\n            \"id\": \"{{$guid}}\",\n            \"items\": [\n                {\n                    \"id\": \"{{$guid}}\",\n                    \"segmentReferenceIds\": [\n                        \"SEG-1\"\n                    ],\n                    \"passengerReferenceIds\": [\n                        \"PAX-1\"\n                    ],\n                    \"details\": {\n                        \"type\": \"SeatOfferItem\",\n                        \"seatNumber\": \"{{seatNumber}}\"\n                    },\n                    \"price\": {\n                        \"unitPrices\": [\n                            {\n                                \"total\": {\n                                    \"amount\": {\n                                        \"amount\": \"100.00\",\n                                        \"currencyCode\": \"USD\"\n                                    }\n                                },\n                                \"totalBreakdown\": {\n                                    \"base\": {\n                                        \"amount\": {\n                                            \"amount\": \"100.00\",\n                                            \"currencyCode\": \"USD\"\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/seats/add",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "seats",
                        "add"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Wed, 02 Aug 2023 18:37:46 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Length",
                      "value": "570"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "x-request-id",
                      "value": "291373e5-5a8f-4ec9-a005-236e90addd83"
                    },
                    {
                      "key": "Vary",
                      "value": "Origin"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Method"
                    },
                    {
                      "key": "Vary",
                      "value": "Access-Control-Request-Headers"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "491a2d433bb036ea"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "491a2d433bb036ea"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"seats\": [\n        {\n            \"id\": \"SEA-1\",\n            \"seatNumber\": \"1A\",\n            \"segmentReferenceId\": \"SEG-1\",\n            \"passengerReferenceId\": \"PAX-1\",\n            \"airExtraId\": \"13\"\n        }\n    ],\n    \"segments\": [\n        {\n            \"id\": \"SEG-1\",\n            \"departureDateTime\": \"2023-08-15T10:42:00\",\n            \"arrivalDateTime\": \"2023-08-15T19:25:00\",\n            \"departureAirportCode\": \"LAX\",\n            \"arrivalAirportCode\": \"JFK\",\n            \"operatingAirlineCode\": \"X0\",\n            \"bookingAirlineCode\": \"X0\",\n            \"isElectronicTicket\": true,\n            \"bookingFlightNumber\": \"0791\",\n            \"brandCode\": \"ES\",\n            \"bookingClassCode\": \"Y\",\n            \"operatingFlightNumber\": \"0791\",\n            \"sequence\": 1\n        }\n    ],\n    \"passengers\": [\n        {\n            \"id\": \"PAX-1\",\n            \"nameNumber\": \"01.01\",\n            \"givenName\": \"EUGENE\",\n            \"surname\": \"DIAZ\"\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Read PNR to update amount to be paid  (helper - not part of Stateless offering)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){\r",
                      "\r",
                      "    const response = pm.response.json();\r",
                      "\r",
                      "    if (response.reservation.segments.segment.length > 0) {\r",
                      "\r",
                      "        postman.setNextRequest();\r",
                      "            \r",
                      "        const passenger = response.reservation.passengers.passenger[0];\r",
                      "        const segment = response.reservation.segments.segment[0].air;\r",
                      "\r",
                      "        pm.collectionVariables.set('segmentNumber', response.reservation.segments.segment.length)\r",
                      "        pm.collectionVariables.set('nameNumber', passenger.nameNumber)\r",
                      "        pm.collectionVariables.set('recordLocator', response.reservation.bookingDetails.recordLocator);\r",
                      "        pm.collectionVariables.set('fareBasisCode', response.reservation.itineraryPricing.pricedItinerary[0].airItineraryPricingInfo.ptcFareBreakdown[0].fareBasisCode[0]);\r",
                      "        pm.collectionVariables.set('pseudoCityCode', response.reservation.pos.source.pseudoCityCode);\r",
                      "        pm.collectionVariables.set('paxFirstName', passenger.firstName);\r",
                      "        pm.collectionVariables.set('paxLastName', passenger.lastName);\r",
                      "        pm.collectionVariables.set('departureAirport', segment.departureAirport);\r",
                      "        pm.collectionVariables.set('arrivalAirport', segment.arrivalAirport);\r",
                      "        pm.collectionVariables.set('departureDateTime', segment.departureTime);\r",
                      "        pm.collectionVariables.set('departureDate', segment.departureTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('departureTime', segment.departureTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('arrivalDateTime', segment.arrivalTime);\r",
                      "        pm.collectionVariables.set('arrivalDate', segment.arrivalTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('arrivalTime', segment.arrivalTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('flightNumber', segment.flightNumber);\r",
                      "        pm.collectionVariables.set('operatingFlightNumber', segment.operatingFlightNumber);\r",
                      "        pm.collectionVariables.set('marketingAirline', segment.airline);\r",
                      "        pm.collectionVariables.set('operatingAirline', segment.operatingAirline);\r",
                      "        pm.collectionVariables.set('classOfService', segment.classOfService);\r",
                      "        pm.collectionVariables.set('operatingClassOfService', segment.operatingClassOfService);\r",
                      "        pm.collectionVariables.set('cabinCode', segment.cabin.code);\r",
                      "        pm.collectionVariables.set('equipment', segment.equipment);\r",
                      "        pm.collectionVariables.set('inboundConnection', segment.inboundConnection);\r",
                      "        pm.collectionVariables.set('outboundConnection', segment.outboundConnection);\r",
                      "\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', 0);\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraTotalAmount', 0);\r",
                      "\r",
                      "        if (passenger.ancillaryServices.ancillaryService\r",
                      "            && passenger.ancillaryServices.ancillaryService.length > 0) {\r",
                      "            const unfulfilledAirExtraIds = [];\r",
                      "            let unfulfilledAirExtraCalculatedTotal = 0;\r",
                      "\r",
                      "            passenger.ancillaryServices.ancillaryService.forEach(anc => {\r",
                      "                if(anc.status == \"HD\"){\r",
                      "                unfulfilledAirExtraIds.add(anc.id);\r",
                      "                unfulfilledAirExtraCalculatedTotal += anc.totalTTLPrice.price;\r",
                      "                pm.collectionVariables.set('unfulfilledAirExtraTotalCurrency', anc.totalTTLPrice.currency);\r",
                      "                }         \r",
                      "            });\r",
                      "\r",
                      "            pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', unfulfilledAirExtraCalculatedTotal);\r",
                      "            \r",
                      "\r",
                      "            Object.keys(pm.collectionVariables.toObject()).forEach(key => {\r",
                      "                if(key.includes('ancId-') || key.includes('seatCode-') || key.includes('seatAirline-'))\r",
                      "                    pm.collectionVariables.unset(key)\r",
                      "            });\r",
                      "\r",
                      "            unfulfilledAirExtraIds.forEach((ancId,a) => {\r",
                      "                pm.collectionVariables.set(`ancId-${a+1}`, ancId);\r",
                      "            });\r",
                      "        }\r",
                      "        \r",
                      "    } else {\r",
                      "        postman.setNextRequest(null);\r",
                      "    }\r",
                      "\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"{{reloc}}\"\r\n    }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{environment}}/v5/dcp/reservation/pnr/display",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v5",
                    "dcp",
                    "reservation",
                    "pnr",
                    "display"
                  ]
                }
              },
              "response": [
                {
                  "name": "Read PNR",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"{{reloc}}\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{environment}}/v5/dcp/reservation/pnr/display",
                      "host": [
                        "{{environment}}"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "reservation",
                        "pnr",
                        "display"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Wed, 02 Aug 2023 19:54:37 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "4c8405b2f3fc341d"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "dd3d80ed29de59a6c49ca259cdc002f"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.4.0"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "c97bc059-2cbe-409a-b648-bb6a86997c39"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "03459758-0c3b-4e15-a371-81bdf62ccc2d"
                    },
                    {
                      "key": "x-envoy-upstream-service-time",
                      "value": "3400"
                    },
                    {
                      "key": "server",
                      "value": "Sabre Gateway"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "incap_ses_473_2768615=7b2SVlNgbQ4vKMwqJnCQBny0ymQAAAAAzAAwteafveOgiesQYvL1mQ==; path=/; Domain=.api.cert.platform.sabre.com; Secure; SameSite=None"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "6-17271922-17271926 NNNN CT(0 6 0) RT(1691006073112 30) q(0 0 0 0) r(35 35) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"reservation\": {\n        \"bookingDetails\": {\n            \"recordLocator\": \"GYCIGI\",\n            \"creationTime\": \"2023-08-02T13:28:00\",\n            \"systemCreationTimestamp\": \"2023-08-02T13:28:00\",\n            \"creationAgentID\": \"B11\",\n            \"updateTimestamp\": \"2023-08-02T13:37:46\",\n            \"pnrSequence\": 3,\n            \"flightsRange\": {\n                \"start\": \"2023-08-15T10:42:00\",\n                \"end\": \"2023-08-15T19:25:00\"\n            },\n            \"itineraryDate\": {},\n            \"divideSplitDetails\": {},\n            \"estimatedPurgeTimestamp\": \"2023-08-15T00:00:00\",\n            \"updateToken\": \"bVeAjlTM0mvgysH5wuGObWTN3r/Tse2+zmmUEeMhg9T+M8rb/pAIeA==\"\n        },\n        \"pos\": {\n            \"source\": {\n                \"bookingChannel\": {\n                    \"companyName\": {}\n                },\n                \"ttyRecordLocator\": [],\n                \"oac\": {\n                    \"accountingCode\": \"HD\",\n                    \"accountingOfficeStationCode\": \"7777777\",\n                    \"accountingCityCode\": \"HDQ\",\n                    \"partitionId\": \"X0\"\n                },\n                \"bookingSource\": \"A0A0\",\n                \"agentSine\": \"B11\",\n                \"pseudoCityCode\": \"HDQ\",\n                \"isoCountry\": \"US\",\n                \"agentDutyCode\": \"5\",\n                \"airlineVendorID\": \"X0\",\n                \"homePseudoCityCode\": \"HDQ\",\n                \"primeHostId\": \"X0\"\n            },\n            \"airExtras\": true,\n            \"inhibitCode\": \"U\"\n        },\n        \"loyaltyBooking\": false,\n        \"passengers\": {\n            \"corporate\": {\n                \"ancillaryServices\": {}\n            },\n            \"zGroup\": {\n                \"ancillaryServices\": {}\n            },\n            \"passenger\": [\n                {\n                    \"lastName\": \"DIAZ\",\n                    \"firstName\": \"EUGENE\",\n                    \"frequentFlyer\": [],\n                    \"emailAddress\": [],\n                    \"specialRequests\": {\n                        \"genericSpecialRequest\": [\n                            {\n                                \"code\": \"TKNE\",\n                                \"freeText\": \"X0 HK1 LAXJFK0791Y15AUG/0392161477633C1\",\n                                \"status\": \"HK\",\n                                \"numberInParty\": 1,\n                                \"airlineCode\": \"X0\",\n                                \"ticketNumber\": \"0392161477633\",\n                                \"fullText\": \"TKNE X0 HK1 LAXJFK0791Y15AUG/0392161477633C1\",\n                                \"id\": \"8\",\n                                \"type\": \"A\",\n                                \"msgType\": \"S\"\n                            }\n                        ],\n                        \"childRequest\": [],\n                        \"apisRequest\": [\n                            {\n                                \"docsEntry\": {\n                                    \"primaryHolder\": false,\n                                    \"middleName\": \"\",\n                                    \"dateOfBirth\": \"1982-06-30\",\n                                    \"numberInParty\": 1,\n                                    \"id\": \"7\",\n                                    \"freeText\": \"\",\n                                    \"first\": \"EUGENE\",\n                                    \"vendorCode\": \"X0\",\n                                    \"type\": \"A\",\n                                    \"gender\": \"M\",\n                                    \"last\": \"DIAZ\",\n                                    \"status\": \"HK\"\n                                }\n                            }\n                        ],\n                        \"emergencyContactRequest\": [],\n                        \"specialMealRequest\": [],\n                        \"passportInfoMessage\": [],\n                        \"seatRequest\": [],\n                        \"unaccompaniedMinorMessage\": [],\n                        \"wheelchairRequest\": [],\n                        \"ticketingRequest\": []\n                    },\n                    \"seats\": {\n                        \"preReservedSeats\": {\n                            \"preReservedSeat\": [\n                                {\n                                    \"seatNumber\": \"1A\",\n                                    \"smokingPrefOfferedIndicator\": false,\n                                    \"seatTypeCode\": \"WLMKIPC\",\n                                    \"seatStatusCode\": \"HK\",\n                                    \"boardPoint\": \"LAX\",\n                                    \"offPoint\": \"JFK\",\n                                    \"id\": \"15\"\n                                }\n
                }
              ]
            },
            {
              "name": "Payment Authorization",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){",
                      "",
                      "    const response = pm.response.json();",
                      "",
                      "    if (response.status == \"SUCCESS\") {",
                      "",
                      "        postman.setNextRequest();",
                      "",
                      "        pm.collectionVariables.set('approvalCode', response.payments[0].auth[0].approvalCode);",
                      "        pm.collectionVariables.set('sabreTransactionId', response.payments[0].auth[0].sabreTransactionId);",
                      "        pm.collectionVariables.set('supplierTransactionId', response.payments[0].auth[0].supplierTransactionId);",
                      "        ('documentType', response.payments[0].auth[0].documentType);",
                      "",
                      "    }",
                      "",
                      "} else {",
                      "",
                      "    postman.setNextRequest(null);",
                      "",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "const moment = require('moment');\r",
                      "const localDateTime = moment().format(\"YYYY-MM-DDTHH:mm:ss\");\r",
                      "pm.variables.set('localDateTime', localDateTime);\r",
                      "\r",
                      "\r",
                      "let unfulfilledTotal = 0;\r",
                      "unfulfilledTotal += pm.collectionVariables.get(\"unfulfilledAirExtraCalculatedTotal\");\r",
                      "unfulfilledTotal +=pm.collectionVariables.get(\"unfulfilledAirExtraTotalAmount\");\r",
                      "pm.collectionVariables.set('unfulfilledAirExtraTotalAmount', unfulfilledTotal);\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"{{posOfficeCode}}\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\",\r\n            \"number\": \"{{posStation}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    },\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"amount\": {\r\n                \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n            },\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"holderName\": \"McDonnell Douglas\"\r\n        }\r\n    ],\r\n    \"billingData\": {\r\n        \"street1\": \"123 Main Street\",\r\n        \"street2\": \"Apartment A-12\",\r\n        \"city\": \"New York\",\r\n        \"zipcode\": \"12345\",\r\n        \"country\": \"US\",\r\n        \"phone\": [\r\n            {\r\n                \"phoneType\": \"HOME\",\r\n                \"countryCode\": \"91\",\r\n                \"areaCode\": \"469\",\r\n                \"number\": \"111111\",\r\n                \"extension\": \"123\"\r\n            }\r\n        ],\r\n        \"email\": [\r\n            \"accept@accept.com\"\r\n        ]\r\n    },\r\n    \"languageForBooking\": \"en_US\"\r\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/pay/authorizePayment",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "pay",
                    "authorizePayment"
                  ]
                }
              },
              "response": [
                {
                  "name": "Payment Authorization",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"{{posOfficeCode}}\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\",\r\n            \"number\": \"{{posStation}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    },\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"amount\": {\r\n                \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n            },\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"holderName\": \"McDonnell Douglas\"\r\n        }\r\n    ],\r\n    \"billingData\": {\r\n        \"street1\": \"123 Main Street\",\r\n        \"street2\": \"Apartment A-12\",\r\n        \"city\": \"New York\",\r\n        \"zipcode\": \"12345\",\r\n        \"country\": \"US\",\r\n        \"phone\": [\r\n            {\r\n                \"phoneType\": \"HOME\",\r\n                \"countryCode\": \"91\",\r\n                \"areaCode\": \"469\",\r\n                \"number\": \"111111\",\r\n                \"extension\": \"123\"\r\n            }\r\n        ],\r\n        \"email\": [\r\n            \"accept@accept.com\"\r\n        ]\r\n    },\r\n    \"languageForBooking\": \"en_US\"\r\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/pay/authorizePayment",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "pay",
                        "authorizePayment"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Wed, 02 Aug 2023 19:55:55 GMT"
                    },
                    {
                      "key": "set-cookie",
                      "value": "JSESSIONID=30847D1B4FE9D053C35F3B2F5E6BA1ED; Path=/; HttpOnly"
                    },
                    {
                      "key": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "2fa184b3a76934eb"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "82007888b506af2815f09bcf1955f1db"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "e168c78b-92ae-4870-9b68-bdbc88748b83"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "147f7cc5-eca0-496f-aab7-4958fd1b1406"
                    },
                    {
                      "key": "x-envoy-upstream-service-time",
                      "value": "6040"
                    },
                    {
                      "key": "server",
                      "value": "Sabre Gateway"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "6-17271922-17275424 NNNN CT(5 8 0) RT(1691006073112 75763) q(0 0 0 -1) r(62 62) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"recordLocator\": \"GYCIGI\",\n    \"status\": \"SUCCESS\",\n    \"payments\": [\n        {\n            \"paymentType\": \"CreditCard\",\n            \"number\": \"5101180000000007\",\n            \"paymentCode\": \"CA\",\n            \"auth\": [\n                {\n                    \"documentType\": \"EMD\",\n                    \"status\": \"APPROVED\",\n                    \"approvalCode\": \"002647\",\n                    \"sabreTransactionId\": \"01801691006153767678\",\n                    \"supplierResponseCode\": \"00\",\n                    \"supplierTransactionId\": \"100009365242130\",\n                    \"supplierId\": \"ADYEN\",\n                    \"supplierReferenceId\": \"B63C3QC5PV5X8N82\",\n                    \"paymentReference\": \"01801691006153767678\",\n                    \"price\": {\n                        \"amount\": 20,\n                        \"currency\": \"USD\"\n                    },\n                    \"description\": \"AUTHORISED\"\n                }\n            ]\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Fulfill",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "const moment = require('moment');\r",
                      "const localDateTime = moment().format(\"YYYY-MM-DDTHH:mm:ss\");\r",
                      "pm.variables.set('localDateTime', localDateTime);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"auth\": [\r\n                {\r\n                    \"approvalCode\": \"{{approvalCode}}\",\r\n                    \"sabreTransactionId\": \"{{sabreTransactionId}}\",\r\n                    \"supplierTransactionId\": \"{{supplierTransactionId}}\",\r\n                    \"amount\": {\r\n                        \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                        \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"languageForBooking\": \"en_US\",\r\n     \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"IB\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    }\r\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/book/fulfill",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "book",
                    "fulfill"
                  ]
                }
              },
              "response": [
                {
                  "name": "Fulfill Ancillaries",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"CreditCard\",\r\n            \"cardCode\": \"CA\",\r\n            \"cardNumber\": \"5101180000000007\",\r\n            \"cardSecurityCode\": \"737\",\r\n            \"expirationDate\": \"2030-03\",\r\n            \"auth\": [\r\n                {\r\n                    \"documentType\": \"{{documentType}}\",\r\n                    \"approvalCode\": \"{{approvalCode}}\",\r\n                    \"sabreTransactionId\": \"{{sabreTransactionId}}\",\r\n                    \"supplierTransactionId\": \"{{supplierTransactionId}}\",\r\n                    \"amount\": {\r\n                        \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                        \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"languageForBooking\": \"en_US\",\r\n     \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"US\",\r\n            \"officeCode\": \"IB\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"{{X0Channel}}\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    }\r\n}"
                    },
                    "url": {
                      "raw": "{{environment}}{{environmentPath}}/book/fulfill",
                      "host": [
                        "{{environment}}{{environmentPath}}"
                      ],
                      "path": [
                        "book",
                        "fulfill"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Tue, 14 Mar 2023 09:19:27 GMT"
                    },
                    {
                      "key": "set-cookie",
                      "value": "JSESSIONID=EDA1F999ED33BA80A230F32DF2BC21C4; Path=/; HttpOnly"
                    },
                    {
                      "key": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "3f855a1531137b82"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "2b5bf81d3563dab66fbbdcc51b535a4a"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "86404430-e0b4-4a18-9335-4f5cf6743847"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "6b39728b-35e6-4c57-93b2-f979346063b7"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "2-5343048-5343065 NNNN CT(6 7 0) RT(1678785560641 115) q(0 0 0 -1) r(70 70) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"status\": \"SUCCESS\",\n    \"recordLocator\": \"GYCIGI\"\n}"
                }
              ]
            }
          ],
          "description": "### **Shop and Book Paid Seat**\n\nThis folder has a set of requests that can be run in sequence so that you can **shop for seats and fulfill**.\n\nTo run this scenario:\n\n1. Go to \"Display PNR\" request in the folder, then in \"Pre-request Script\" area update PNR infromation.\n2. Once PNR is updated, you can click on the folder and then on the right top corner click on \"Run\" and then proceed with default settings.\n3. Once all requests are executed, you will have PNR updated with ancillary added and fulfilled."
        },
        {
          "name": "Shop and Book Ancillary",
          "item": [
            {
              "name": "Display PNR  (helper - not part of Stateless offering)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){\r",
                      "\r",
                      "    const response = pm.response.json();\r",
                      "\r",
                      "    if (response.reservation && response.reservation.segments.segment.length > 0) {\r",
                      "\r",
                      "        postman.setNextRequest();\r",
                      "        \r",
                      "        const passenger = response.reservation.passengers.passenger[0];\r",
                      "        const segment = response.reservation.segments.segment[0].air;\r",
                      "\r",
                      "        pm.collectionVariables.set('segmentNumber', response.reservation.segments.segment.length)\r",
                      "        pm.collectionVariables.set('nameNumber', passenger.nameNumber)\r",
                      "        pm.collectionVariables.set('recordLocator', response.reservation.bookingDetails.recordLocator);\r",
                      "        pm.collectionVariables.set('fareBasisCode', response.reservation.itineraryPricing.pricedItinerary[0].airItineraryPricingInfo.ptcFareBreakdown[0].fareBasisCode[0]);\r",
                      "        pm.collectionVariables.set('pseudoCityCode', response.reservation.pos.source.pseudoCityCode);\r",
                      "        pm.collectionVariables.set('paxFirstName', passenger.firstName);\r",
                      "        pm.collectionVariables.set('paxLastName', passenger.lastName);\r",
                      "        pm.collectionVariables.set('departureAirport', segment.departureAirport);\r",
                      "        pm.collectionVariables.set('arrivalAirport', segment.arrivalAirport);\r",
                      "        pm.collectionVariables.set('departureDateTime', segment.departureTime);\r",
                      "        pm.collectionVariables.set('departureDate', segment.departureTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('departureTime', segment.departureTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('arrivalDateTime', segment.arrivalTime);\r",
                      "        pm.collectionVariables.set('arrivalDate', segment.arrivalTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('arrivalTime', segment.arrivalTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('flightNumber', segment.flightNumber);\r",
                      "        pm.collectionVariables.set('operatingFlightNumber', segment.operatingFlightNumber);\r",
                      "        pm.collectionVariables.set('marketingAirline', segment.airline);\r",
                      "        pm.collectionVariables.set('operatingAirline', segment.operatingAirline);\r",
                      "        pm.collectionVariables.set('classOfService', segment.classOfService);\r",
                      "        pm.collectionVariables.set('operatingClassOfService', segment.operatingClassOfService);\r",
                      "        pm.collectionVariables.set('cabinCode', segment.cabin.code);\r",
                      "        pm.collectionVariables.set('equipment', segment.equipment);\r",
                      "        pm.collectionVariables.set('inboundConnection', segment.inboundConnection);\r",
                      "        pm.collectionVariables.set('outboundConnection', segment.outboundConnection);\r",
                      "\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', 0);\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraTotalAmount', 0);\r",
                      "\r",
                      "        if (passenger.ancillaryServices.ancillaryService\r",
                      "            && passenger.ancillaryServices.ancillaryService.length > 0) {\r",
                      "            const unfulfilledAirExtraIds = [];\r",
                      "            let unfulfilledAirExtraCalculatedTotal = 0;\r",
                      "\r",
                      "            passenger.ancillaryServices.ancillaryService.forEach(anc => {\r",
                      "                if(anc.status == \"HD\"){\r",
                      "                    unfulfilledAirExtraIds.add(anc.id);\r",
                      "                    unfulfilledAirExtraCalculatedTotal += anc.totalTTLPrice.price;\r",
                      "                    pm.collectionVariables.set('unfulfilledAirExtraTotalCurrency', anc.totalTTLPrice.currency);\r",
                      "                }         \r",
                      "            });\r",
                      "\r",
                      "            pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', unfulfilledAirExtraCalculatedTotal);\r",
                      "            \r",
                      "\r",
                      "            Object.keys(pm.collectionVariables.toObject()).forEach(key => {\r",
                      "                if(key.includes('ancId-') || key.includes('seatCode-') || key.includes('seatAirline-'))\r",
                      "                    pm.collectionVariables.unset(key)\r",
                      "            });\r",
                      "\r",
                      "            unfulfilledAirExtraIds.forEach((ancId,a) => {\r",
                      "                pm.collectionVariables.set(`ancId-${a+1}`, ancId);\r",
                      "            });\r",
                      "        }        \r",
                      "    } else {\r",
                      "        postman.setNextRequest(null);\r",
                      "    }\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "const pnr = \"QUZDJH\";\r",
                      "postman.setEnvironmentVariable(\"reloc\", pnr)"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"{{reloc}}\"\r\n    }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{environment}}/v5/dcp/reservation/pnr/display",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v5",
                    "dcp",
                    "reservation",
                    "pnr",
                    "display"
                  ]
                }
              },
              "response": [
                {
                  "name": "Display PNR",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "x-sabre-conversation-id",
                        "value": "test-wilson-stl-mar09",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"WHKYZB\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{endpoint}}/v5/dcp/reservation/pnr/display",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "reservation",
                        "pnr",
                        "display"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Thu, 09 Mar 2023 10:35:26 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "d9b0610ab309f610"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "314877f286b542fb7778416934d32d7f"
                    },
                    {
                      "key": "x-correlation-id",
                      "value": "test-wilson-stl-mar09"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.2.1"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "test-wilson-stl-mar09"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "c398f949-024f-44bc-86d9-f13f8483dce2"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "5-63126106-63126107 NNNN CT(1 9 0) RT(1678358123401 11) q(0 0 0 -1) r(23 23) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"reservation\": {\n        \"bookingDetails\": {\n            \"recordLocator\": \"WHKYZB\",\n            \"creationTime\": \"2023-03-08T20:15:00\",\n            \"systemCreationTimestamp\": \"2023-03-08T20:15:00\",\n            \"creationAgentID\": \"B11\",\n            \"updateTimestamp\": \"2023-03-08T20:17:58\",\n            \"pnrSequence\": 4,\n            \"flightsRange\": {\n                \"start\": \"2023-03-25T22:00:00\",\n                \"end\": \"2023-03-26T10:30:00\"\n            },\n            \"itineraryDate\": {},\n            \"divideSplitDetails\": {},\n            \"estimatedPurgeTimestamp\": \"2023-03-26T00:00:00\",\n            \"updateToken\": \"-6db7929c48dde98ed3507e8bf242f86cd3d6f63c9de9b895\"\n        },\n        \"pos\": {\n            \"source\": {\n                \"bookingChannel\": {\n                    \"companyName\": {}\n                },\n                \"ttyRecordLocator\": [],\n                \"oac\": {\n                    \"accountingCode\": \"HD\",\n                    \"accountingOfficeStationCode\": \"7777777\",\n                    \"accountingCityCode\": \"HDQ\",\n                    \"partitionId\": \"X0\"\n                },\n                \"bookingSource\": \"A0A0\",\n                \"agentSine\": \"B11\",\n                \"pseudoCityCode\": \"HDQ\",\n                \"isoCountry\": \"US\",\n                \"agentDutyCode\": \"5\",\n                \"airlineVendorID\": \"X0\",\n                \"homePseudoCityCode\": \"HDQ\",\n                \"primeHostId\": \"X0\"\n            },\n            \"airExtras\": false,\n            \"inhibitCode\": \"U\"\n        },\n        \"loyaltyBooking\": false,\n        \"passengers\": {\n            \"corporate\": {\n                \"ancillaryServices\": {}\n            },\n            \"zGroup\": {\n                \"ancillaryServices\": {}\n            },\n            \"passenger\": [\n                {\n                    \"lastName\": \"TORRES\",\n                    \"firstName\": \"WILSON MR\",\n                    \"frequentFlyer\": [],\n                    \"emailAddress\": [],\n                    \"profiles\": {\n                        \"profile\": [\n                            {\n                                \"id\": \"20\",\n                                \"profileID\": \"629235336483\",\n                                \"profileType\": \"TVL\",\n                                \"frequentFlyer\": [],\n                                \"valueScore\": []\n                            }\n                        ]\n                    },\n                    \"specialRequests\": {\n                        \"genericSpecialRequest\": [\n                            {\n                                \"code\": \"TKNE\",\n                                \"freeText\": \"X0 HK1 JFKLAX0355V25MAR/0392161470887C1\",\n                                \"status\": \"HK\",\n                                \"numberInParty\": 1,\n                                \"airlineCode\": \"X0\",\n                                \"ticketNumber\": \"0392161470887\",\n                                \"fullText\": \"TKNE X0 HK1 JFKLAX0355V25MAR/0392161470887C1\",\n                                \"id\": \"15\",\n                                \"type\": \"A\",\n                                \"msgType\": \"S\"\n                            }\n                        ],\n                        \"childRequest\": [],\n                        \"apisRequest\": [],\n                        \"emergencyContactRequest\": [],\n                        \"specialMealRequest\": [],\n                        \"passportInfoMessage\": [],\n                        \"seatRequest\": [],\n                        \"unaccompaniedMinorMessage\": [],\n                        \"wheelchairRequest\": [],\n                        \"ticketingRequest\": []\n                    },\n                    \"seats\": {\n                        \"preReservedSeats\": {},\n                        \"seatSpecialRequests\": {}\n                    },\n                    \"preReservedSeats\": {},\n                    \"ancillaryServices\": {},\n                    \"remarks\": {},\n                    \"phoneNumbers\": {},\n                    \"ticketingInfo\": {},\n                    \"fqtvUpgradeRequests\": {},\n                    \"openReservationElements\": {},\n                    \"id\": \"3\",\n                    \"nameType\": \"S\",\n                    \"passengerType\": \"ADULT\",\n                    \"nameNumber\": \"01.01\",\n                    \"nameAssociateId\": \"1\",\n                    \"elementId\": \"pnr-3.1\"\n                }\n            ]\n        },\n        \"segments\": {\n            \"segment\": [\n                {\n                    \"air\": {\n                        \"codeShare\": false,\n                        \"dayOfWeekInd\": \"6\",\n                        \"fqtvUpgradeRequests\": {},\n
                }
              ]
            },
            {
              "name": "Shop for Ancillaries by Reservation",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){\r",
                      "\r",
                      "    postman.setNextRequest();\r",
                      "\r",
                      "    var jsonData = JSON.parse(responseBody);\r",
                      "    const commercialNameConstant = \"BAGGAGE UP TO 25 KG\"; //defines which ancillary to add\r",
                      "\r",
                      "    var anc = jsonData.ancillaries\r",
                      "    .filter(ancCommercialName => ancCommercialName.commercialName == commercialNameConstant)[0];\r",
                      "    pm.collectionVariables.set(\"ancillaryId\", anc.id);\r",
                      "    pm.collectionVariables.set(\"subCode\", anc.subCode);\r",
                      "    pm.collectionVariables.set(\"group\", anc.group);\r",
                      "    pm.collectionVariables.set(\"rfic\", anc.reasonForIssuance.code);\r",
                      "    pm.collectionVariables.set(\"commercialName\", commercialNameConstant);\r",
                      "\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ancillaryRequestType\": \"ByPnrlocator\",\n  \"pnrLocator\":\"{{recordLocator}}\"\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/ancillaries/shop",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "ancillaries",
                    "shop"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Add Ancillaries",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){\r",
                      "\r",
                      "    postman.setNextRequest();\r",
                      "\r",
                      "    const response = pm.response.json();\r",
                      "\r",
                      "    if (response.results && response.results.length > 0) {\r",
                      "        const ancillary = response.results[0];\r",
                      "        if (ancillary.status.type === 'SUCCESS') {\r",
                      "            pm.collectionVariables.set('lastAddedAncillaryId', ancillary.airExtraIds[0]);\r",
                      "        }\r",
                      "    }\r",
                      "\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"pnrLocator\": \"{{recordLocator}}\",\n    \"ancillaries\": [\n        {\n            \"ancillaryId\": \"{{ancillaryId}}\",\n            \"passengerId\": \"{{nameNumber}}\",\n            \"groupCode\": \"{{group}}\",\n            \"commercialName\": \"{{commercialName}}\",\n            \"rficCode\": \"{{rfic}}\",\n            \"subcode\": \"{{subCode}}\",\n            \"operatingAirlineCode\": \"{{marketingAirline}}\",\n            \"emdType\": \"Associated\",\n            \"segmentIds\": [\n                \"{{segmentNumber}}\"\n            ],\n            \"quantity\": 1\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/ancillaries/add",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "ancillaries",
                    "add"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Read PNR to update amount to be paid  (helper - not part of Stateless offering)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){\r",
                      "\r",
                      "    const response = pm.response.json();\r",
                      "\r",
                      "    if (response.reservation && response.reservation.segments.segment.length > 0) {\r",
                      "\r",
                      "        postman.setNextRequest();\r",
                      "        \r",
                      "        const passenger = response.reservation.passengers.passenger[0];\r",
                      "        const segment = response.reservation.segments.segment[0].air;\r",
                      "\r",
                      "        pm.collectionVariables.set('segmentNumber', response.reservation.segments.segment.length)\r",
                      "        pm.collectionVariables.set('nameNumber', passenger.nameNumber)\r",
                      "        pm.collectionVariables.set('recordLocator', response.reservation.bookingDetails.recordLocator);\r",
                      "        pm.collectionVariables.set('fareBasisCode', response.reservation.itineraryPricing.pricedItinerary[0].airItineraryPricingInfo.ptcFareBreakdown[0].fareBasisCode[0]);\r",
                      "        pm.collectionVariables.set('pseudoCityCode', response.reservation.pos.source.pseudoCityCode);\r",
                      "        pm.collectionVariables.set('paxFirstName', passenger.firstName);\r",
                      "        pm.collectionVariables.set('paxLastName', passenger.lastName);\r",
                      "        pm.collectionVariables.set('departureAirport', segment.departureAirport);\r",
                      "        pm.collectionVariables.set('arrivalAirport', segment.arrivalAirport);\r",
                      "        pm.collectionVariables.set('departureDateTime', segment.departureTime);\r",
                      "        pm.collectionVariables.set('departureDate', segment.departureTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('departureTime', segment.departureTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('arrivalDateTime', segment.arrivalTime);\r",
                      "        pm.collectionVariables.set('arrivalDate', segment.arrivalTime.split('T')[0]);\r",
                      "        pm.collectionVariables.set('arrivalTime', segment.arrivalTime.split('T')[1].substring(0,5));\r",
                      "        pm.collectionVariables.set('flightNumber', segment.flightNumber);\r",
                      "        pm.collectionVariables.set('operatingFlightNumber', segment.operatingFlightNumber);\r",
                      "        pm.collectionVariables.set('marketingAirline', segment.airline);\r",
                      "        pm.collectionVariables.set('operatingAirline', segment.operatingAirline);\r",
                      "        pm.collectionVariables.set('classOfService', segment.classOfService);\r",
                      "        pm.collectionVariables.set('operatingClassOfService', segment.operatingClassOfService);\r",
                      "        pm.collectionVariables.set('cabinCode', segment.cabin.code);\r",
                      "        pm.collectionVariables.set('equipment', segment.equipment);\r",
                      "        pm.collectionVariables.set('inboundConnection', segment.inboundConnection);\r",
                      "        pm.collectionVariables.set('outboundConnection', segment.outboundConnection);\r",
                      "\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', 0);\r",
                      "        pm.collectionVariables.set('unfulfilledAirExtraTotalAmount', 0);\r",
                      "\r",
                      "        if (passenger.ancillaryServices.ancillaryService\r",
                      "            && passenger.ancillaryServices.ancillaryService.length > 0) {\r",
                      "            const unfulfilledAirExtraIds = [];\r",
                      "            let unfulfilledAirExtraCalculatedTotal = 0;\r",
                      "\r",
                      "            passenger.ancillaryServices.ancillaryService.forEach(anc => {\r",
                      "                if(anc.status == \"HD\"){\r",
                      "                unfulfilledAirExtraIds.add(anc.id);\r",
                      "                unfulfilledAirExtraCalculatedTotal += anc.totalTTLPrice.price;\r",
                      "                pm.collectionVariables.set('unfulfilledAirExtraTotalCurrency', anc.totalTTLPrice.currency);\r",
                      "                }         \r",
                      "            });\r",
                      "\r",
                      "            pm.collectionVariables.set('unfulfilledAirExtraCalculatedTotal', unfulfilledAirExtraCalculatedTotal);\r",
                      "            \r",
                      "\r",
                      "            Object.keys(pm.collectionVariables.toObject()).forEach(key => {\r",
                      "                if(key.includes('ancId-') || key.includes('seatCode-') || key.includes('seatAirline-'))\r",
                      "                    pm.collectionVariables.unset(key)\r",
                      "            });\r",
                      "\r",
                      "            unfulfilledAirExtraIds.forEach((ancId,a) => {\r",
                      "                pm.collectionVariables.set(`ancId-${a+1}`, ancId);\r",
                      "            });\r",
                      "        }\r",
                      "    } else {\r",
                      "        postman.setNextRequest(null);\r",
                      "    }\r",
                      "} else {\r",
                      "    postman.setNextRequest(null);\r",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"{{reloc}}\"\r\n    }\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{environment}}/v5/dcp/reservation/pnr/display",
                  "host": [
                    "{{environment}}"
                  ],
                  "path": [
                    "v5",
                    "dcp",
                    "reservation",
                    "pnr",
                    "display"
                  ]
                }
              },
              "response": [
                {
                  "name": "Display PNR",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "x-sabre-conversation-id",
                        "value": "test-wilson-stl-mar09",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"reservationCriteria\": {\r\n        \"recordLocator\": \"WHKYZB\"\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{endpoint}}/v5/dcp/reservation/pnr/display",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "reservation",
                        "pnr",
                        "display"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Thu, 09 Mar 2023 10:35:26 GMT"
                    },
                    {
                      "key": "vary",
                      "value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
                    },
                    {
                      "key": "x-api-version",
                      "value": "v1"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "d9b0610ab309f610"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "314877f286b542fb7778416934d32d7f"
                    },
                    {
                      "key": "x-correlation-id",
                      "value": "test-wilson-stl-mar09"
                    },
                    {
                      "key": "x-implementation-version",
                      "value": "1.2.1"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "test-wilson-stl-mar09"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "c398f949-024f-44bc-86d9-f13f8483dce2"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "5-63126106-63126107 NNNN CT(1 9 0) RT(1678358123401 11) q(0 0 0 -1) r(23 23) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"reservation\": {\n        \"bookingDetails\": {\n            \"recordLocator\": \"WHKYZB\",\n            \"creationTime\": \"2023-03-08T20:15:00\",\n            \"systemCreationTimestamp\": \"2023-03-08T20:15:00\",\n            \"creationAgentID\": \"B11\",\n            \"updateTimestamp\": \"2023-03-08T20:17:58\",\n            \"pnrSequence\": 4,\n            \"flightsRange\": {\n                \"start\": \"2023-03-25T22:00:00\",\n                \"end\": \"2023-03-26T10:30:00\"\n            },\n            \"itineraryDate\": {},\n            \"divideSplitDetails\": {},\n            \"estimatedPurgeTimestamp\": \"2023-03-26T00:00:00\",\n            \"updateToken\": \"-6db7929c48dde98ed3507e8bf242f86cd3d6f63c9de9b895\"\n        },\n        \"pos\": {\n            \"source\": {\n                \"bookingChannel\": {\n                    \"companyName\": {}\n                },\n                \"ttyRecordLocator\": [],\n                \"oac\": {\n                    \"accountingCode\": \"HD\",\n                    \"accountingOfficeStationCode\": \"7777777\",\n                    \"accountingCityCode\": \"HDQ\",\n                    \"partitionId\": \"X0\"\n                },\n                \"bookingSource\": \"A0A0\",\n                \"agentSine\": \"B11\",\n                \"pseudoCityCode\": \"HDQ\",\n                \"isoCountry\": \"US\",\n                \"agentDutyCode\": \"5\",\n                \"airlineVendorID\": \"X0\",\n                \"homePseudoCityCode\": \"HDQ\",\n                \"primeHostId\": \"X0\"\n            },\n            \"airExtras\": false,\n            \"inhibitCode\": \"U\"\n        },\n        \"loyaltyBooking\": false,\n        \"passengers\": {\n            \"corporate\": {\n                \"ancillaryServices\": {}\n            },\n            \"zGroup\": {\n                \"ancillaryServices\": {}\n            },\n            \"passenger\": [\n                {\n                    \"lastName\": \"TORRES\",\n                    \"firstName\": \"WILSON MR\",\n                    \"frequentFlyer\": [],\n                    \"emailAddress\": [],\n                    \"profiles\": {\n                        \"profile\": [\n                            {\n                                \"id\": \"20\",\n                                \"profileID\": \"629235336483\",\n                                \"profileType\": \"TVL\",\n                                \"frequentFlyer\": [],\n                                \"valueScore\": []\n                            }\n                        ]\n                    },\n                    \"specialRequests\": {\n                        \"genericSpecialRequest\": [\n                            {\n                                \"code\": \"TKNE\",\n                                \"freeText\": \"X0 HK1 JFKLAX0355V25MAR/0392161470887C1\",\n                                \"status\": \"HK\",\n                                \"numberInParty\": 1,\n                                \"airlineCode\": \"X0\",\n                                \"ticketNumber\": \"0392161470887\",\n                                \"fullText\": \"TKNE X0 HK1 JFKLAX0355V25MAR/0392161470887C1\",\n                                \"id\": \"15\",\n                                \"type\": \"A\",\n                                \"msgType\": \"S\"\n                            }\n                        ],\n                        \"childRequest\": [],\n                        \"apisRequest\": [],\n                        \"emergencyContactRequest\": [],\n                        \"specialMealRequest\": [],\n                        \"passportInfoMessage\": [],\n                        \"seatRequest\": [],\n                        \"unaccompaniedMinorMessage\": [],\n                        \"wheelchairRequest\": [],\n                        \"ticketingRequest\": []\n                    },\n                    \"seats\": {\n                        \"preReservedSeats\": {},\n                        \"seatSpecialRequests\": {}\n                    },\n                    \"preReservedSeats\": {},\n                    \"ancillaryServices\": {},\n                    \"remarks\": {},\n                    \"phoneNumbers\": {},\n                    \"ticketingInfo\": {},\n                    \"fqtvUpgradeRequests\": {},\n                    \"openReservationElements\": {},\n                    \"id\": \"3\",\n                    \"nameType\": \"S\",\n                    \"passengerType\": \"ADULT\",\n                    \"nameNumber\": \"01.01\",\n                    \"nameAssociateId\": \"1\",\n                    \"elementId\": \"pnr-3.1\"\n                }\n            ]\n        },\n        \"segments\": {\n            \"segment\": [\n                {\n                    \"air\": {\n                        \"codeShare\": false,\n                        \"dayOfWeekInd\": \"6\",\n                        \"fqtvUpgradeRequests\": {},\n
                }
              ]
            },
            {
              "name": "Payment Authorization",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code == 200){",
                      "",
                      "    const response = pm.response.json();",
                      "",
                      "    if (response.status == \"SUCCESS\") {",
                      "",
                      "        postman.setNextRequest();",
                      "",
                      "        pm.collectionVariables.set('approvalCode', response.payments[0].auth[0].approvalCode);",
                      "        pm.collectionVariables.set('sabreTransactionId', response.payments[0].auth[0].sabreTransactionId);",
                      "        pm.collectionVariables.set('supplierTransactionId', response.payments[0].auth[0].supplierTransactionId);",
                      "        ('documentType', response.payments[0].auth[0].documentType);",
                      "",
                      "    }",
                      "",
                      "} else {",
                      "",
                      "    postman.setNextRequest(null);",
                      "",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "const moment = require('moment');\r",
                      "const localDateTime = moment().format(\"YYYY-MM-DDTHH:mm:ss\");\r",
                      "pm.variables.set('localDateTime', localDateTime);\r",
                      "\r",
                      "\r",
                      "let unfulfilledTotal = 0;\r",
                      "unfulfilledTotal += pm.collectionVariables.get(\"unfulfilledAirExtraCalculatedTotal\");\r",
                      "unfulfilledTotal +=pm.collectionVariables.get(\"unfulfilledAirExtraTotalAmount\");\r",
                      "pm.collectionVariables.set('unfulfilledAirExtraTotalAmount', unfulfilledTotal);\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"{{posOfficeCode}}\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\",\r\n            \"number\": \"{{posStation}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    },\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"amount\": {\r\n                \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n            },\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"holderName\": \"McDonnell Douglas\"\r\n        }\r\n    ],\r\n    \"billingData\": {\r\n        \"street1\": \"123 Main Street\",\r\n        \"street2\": \"Apartment A-12\",\r\n        \"city\": \"New York\",\r\n        \"zipcode\": \"12345\",\r\n        \"country\": \"US\",\r\n        \"phone\": [\r\n            {\r\n                \"phoneType\": \"HOME\",\r\n                \"countryCode\": \"91\",\r\n                \"areaCode\": \"469\",\r\n                \"number\": \"111111\",\r\n                \"extension\": \"123\"\r\n            }\r\n        ],\r\n        \"email\": [\r\n            \"accept@accept.com\"\r\n        ]\r\n    },\r\n    \"languageForBooking\": \"en_US\"\r\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/pay/authorizePayment",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "pay",
                    "authorizePayment"
                  ]
                }
              },
              "response": [
                {
                  "name": "Payment Authorization",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"{{posOfficeCode}}\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\",\r\n            \"number\": \"{{posStation}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"*ETKT*\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"HDQ\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    },\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"CreditCard\",\r\n            \"amount\": {\r\n                \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n            },\r\n            \"cardCode\": \"CA\",\r\n            \"cardNumber\": \"5101180000000007\",\r\n            \"cardSecurityCode\": \"737\",\r\n            \"expirationDate\": \"2030-03\",\r\n            \"holderName\": \"McDonnell Douglas\"\r\n        }\r\n    ],\r\n    \"billingData\": {\r\n        \"street1\": \"123 Main Street\",\r\n        \"street2\": \"Apartment A-12\",\r\n        \"city\": \"New York\",\r\n        \"zipcode\": \"12345\",\r\n        \"country\": \"US\",\r\n        \"phone\": [\r\n            {\r\n                \"phoneType\": \"HOME\",\r\n                \"countryCode\": \"91\",\r\n                \"areaCode\": \"469\",\r\n                \"number\": \"111111\",\r\n                \"extension\": \"123\"\r\n            }\r\n        ],\r\n        \"email\": [\r\n            \"accept@accept.com\"\r\n        ]\r\n    },\r\n    \"languageForBooking\": \"en_US\"\r\n}"
                    },
                    "url": {
                      "raw": "https://api-crt.cert.havail.sabre.com/v5/dcp/pay/authorizePayment",
                      "protocol": "https",
                      "host": [
                        "api-crt",
                        "cert",
                        "havail",
                        "sabre",
                        "com"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "pay",
                        "authorizePayment"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 14 Mar 2023 09:12:38 GMT"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "JSESSIONID=775B49ABA9BD56550CF14B5AE4257722; Path=/; HttpOnly"
                    },
                    {
                      "key": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "key": "X-B3-SpanId",
                      "value": "db8f0997a57ef319"
                    },
                    {
                      "key": "X-B3-TraceId",
                      "value": "359746aec1c02453db8f0997a57ef319"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "418f2569-bad0-474d-8229-3f4195f40ad1"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "SAMEORIGIN"
                    },
                    {
                      "key": "Referrer-Policy",
                      "value": "origin-when-cross-origin"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src * 'unsafe-inline' 'unsafe-eval'; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src *; style-src * 'unsafe-inline';"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Server",
                      "value": "Sabre Gateway"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"recordLocator\": \"DMMGBR\",\n    \"status\": \"SUCCESS\",\n    \"payments\": [\n        {\n            \"paymentType\": \"CreditCard\",\n            \"number\": \"5101180000000007\",\n            \"paymentCode\": \"CA\",\n            \"auth\": [\n                {\n                    \"documentType\": \"EMD\",\n                    \"status\": \"APPROVED\",\n                    \"approvalCode\": \"017264\",\n                    \"sabreTransactionId\": \"01121678785156784316\",\n                    \"supplierResponseCode\": \"00\",\n                    \"supplierTransactionId\": \"700016004291327\",\n                    \"supplierId\": \"ADYEN\",\n                    \"supplierReferenceId\": \"KR6CNZ2Q9VTFWR82\",\n                    \"paymentReference\": \"01121678785156784316\",\n                    \"price\": {\n                        \"amount\": 56,\n                        \"currency\": \"USD\"\n                    },\n                    \"description\": \"AUTHORISED\"\n                }\n            ]\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Fulfill Ancillaries",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "const moment = require('moment');\r",
                      "const localDateTime = moment().format(\"YYYY-MM-DDTHH:mm:ss\");\r",
                      "pm.variables.set('localDateTime', localDateTime);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"{{paymentType}}\",\r\n            \"cardCode\": \"{{cardCode}}\",\r\n            \"cardNumber\": \"{{cardNumber}}\",\r\n            \"cardSecurityCode\": \"{{cardSecurityCode}}\",\r\n            \"expirationDate\": \"{{expirationDate}}\",\r\n            \"auth\": [\r\n                {\r\n                    \"approvalCode\": \"{{approvalCode}}\",\r\n                    \"sabreTransactionId\": \"{{sabreTransactionId}}\",\r\n                    \"supplierTransactionId\": \"{{supplierTransactionId}}\",\r\n                    \"amount\": {\r\n                        \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                        \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"languageForBooking\": \"en_US\",\r\n     \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"{{posCountry}}\",\r\n            \"officeCode\": \"IB\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"WEB\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    }\r\n}"
                },
                "url": {
                  "raw": "{{environment}}{{environmentPath}}/book/fulfill",
                  "host": [
                    "{{environment}}{{environmentPath}}"
                  ],
                  "path": [
                    "book",
                    "fulfill"
                  ]
                }
              },
              "response": [
                {
                  "name": "Fulfill Ancillaries",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"recordLocator\": \"{{recordLocator}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentType\": \"CreditCard\",\r\n            \"cardCode\": \"CA\",\r\n            \"cardNumber\": \"5101180000000007\",\r\n            \"cardSecurityCode\": \"737\",\r\n            \"expirationDate\": \"2030-03\",\r\n            \"auth\": [\r\n                {\r\n                    \"documentType\": \"{{documentType}}\",\r\n                    \"approvalCode\": \"{{approvalCode}}\",\r\n                    \"sabreTransactionId\": \"{{sabreTransactionId}}\",\r\n                    \"supplierTransactionId\": \"{{supplierTransactionId}}\",\r\n                    \"amount\": {\r\n                        \"amount\": \"{{unfulfilledAirExtraTotalAmount}}\",\r\n                        \"currency\": \"{{unfulfilledAirExtraTotalCurrency}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"languageForBooking\": \"en_US\",\r\n     \"pos\": {\r\n        \"aaa\": {\r\n            \"country\": \"US\",\r\n            \"officeCode\": \"IB\",\r\n            \"accountingCity\": \"{{posAccountingCity}}\"\r\n        },\r\n        \"airline\": \"{{domain}}\",\r\n        \"lniata\": \"{{lniata}}\",\r\n        \"sine\": \"SSW\",\r\n        \"dutyCode\": \"4\",\r\n        \"pseudoCityCode\": \"{{pseudoCityCode}}\",\r\n        \"channel\": \"{{X0Channel}}\",\r\n        \"localDateTime\": \"{{localDateTime}}\",\r\n        \"source\": \"A0A0\"\r\n    }\r\n}"
                    },
                    "url": {
                      "raw": "{{endpoint}}/v5/dcp/book/fulfill",
                      "host": [
                        "{{endpoint}}"
                      ],
                      "path": [
                        "v5",
                        "dcp",
                        "book",
                        "fulfill"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "date",
                      "value": "Tue, 14 Mar 2023 09:19:27 GMT"
                    },
                    {
                      "key": "set-cookie",
                      "value": "JSESSIONID=EDA1F999ED33BA80A230F32DF2BC21C4; Path=/; HttpOnly"
                    },
                    {
                      "key": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "key": "x-b3-spanid",
                      "value": "3f855a1531137b82"
                    },
                    {
                      "key": "x-b3-traceid",
                      "value": "2b5bf81d3563dab66fbbdcc51b535a4a"
                    },
                    {
                      "key": "x-sabre-conversation-id",
                      "value": "86404430-e0b4-4a18-9335-4f5cf6743847"
                    },
                    {
                      "key": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "key": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "key": "x-request-id",
                      "value": "6b39728b-35e6-4c57-93b2-f979346063b7"
                    },
                    {
                      "key": "via",
                      "value": "1.1 google"
                    },
                    {
                      "key": "Alt-Svc",
                      "value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-CDN",
                      "value": "Imperva"
                    },
                    {
                      "key": "X-Iinfo",
                      "value": "2-5343048-5343065 NNNN CT(6 7 0) RT(1678785560641 115) q(0 0 0 -1) r(70 70) U24"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"status\": \"SUCCESS\",\n    \"recordLocator\": \"DMMGBR\"\n}"
                }
              ]
            }
          ],
          "description": "### **Shop and Book Ancillary**\n\nThis folder has a set of requests that can be run in sequence so that you can **shop for ancillaries and fulfill**.\n\nTo run this scenario:\n\n1. Go to \"Display PNR\" request in the folder, then in \"Pre-request Script\" area update PNR infromation.\n2. Once PNR is updated, you can click on the folder and then on the right top corner click on \"Run\" and then proceed with default settings.\n3. Once all requests are executed, you will have PNR updated with ancillary added and fulfilled."
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "recordLocator",
      "value": ""
    },
    {
      "key": "fareBasisCode",
      "value": ""
    },
    {
      "key": "pseudoCityCode",
      "value": ""
    },
    {
      "key": "paxFirstName",
      "value": ""
    },
    {
      "key": "paxLastName",
      "value": ""
    },
    {
      "key": "departureAirport",
      "value": ""
    },
    {
      "key": "arrivalAirport",
      "value": ""
    },
    {
      "key": "departureDateTime",
      "value": ""
    },
    {
      "key": "departureDate",
      "value": ""
    },
    {
      "key": "departureTime",
      "value": ""
    },
    {
      "key": "arrivalDateTime",
      "value": ""
    },
    {
      "key": "arrivalDate",
      "value": ""
    },
    {
      "key": "arrivalTime",
      "value": ""
    },
    {
      "key": "flightNumber",
      "value": ""
    },
    {
      "key": "operatingFlightNumber",
      "value": ""
    },
    {
      "key": "marketingAirline",
      "value": ""
    },
    {
      "key": "operatingAirline",
      "value": ""
    },
    {
      "key": "classOfService",
      "value": ""
    },
    {
      "key": "operatingClassOfService",
      "value": ""
    },
    {
      "key": "cabinCode",
      "value": ""
    },
    {
      "key": "equipment",
      "value": ""
    },
    {
      "key": "inboundConnection",
      "value": ""
    },
    {
      "key": "outboundConnection",
      "value": ""
    },
    {
      "key": "lastAddedAncillaryId",
      "value": ""
    },
    {
      "key": "unfulfilledAirExtraTotalAmount",
      "value": ""
    },
    {
      "key": "unfulfilledAirExtraTotalCurrency",
      "value": ""
    },
    {
      "key": "unfulfilledAirExtraCalculatedTotal",
      "value": ""
    },
    {
      "key": "lastAddedSeatNumber",
      "value": ""
    },
    {
      "key": "lastAddedSeatAirline",
      "value": ""
    },
    {
      "key": "segmentNumber",
      "value": ""
    },
    {
      "key": "nameNumber",
      "value": ""
    },
    {
      "key": "ancId",
      "value": ""
    },
    {
      "key": "approvalCode",
      "value": ""
    },
    {
      "key": "sabreTransactionId",
      "value": ""
    },
    {
      "key": "supplierTransactionId",
      "value": ""
    },
    {
      "key": "documentType",
      "value": ""
    },
    {
      "key": "passengerType",
      "value": ""
    },
    {
      "key": "emdNumber",
      "value": ""
    },
    {
      "key": "seatNumber",
      "value": ""
    },
    {
      "key": "groupCode",
      "value": ""
    },
    {
      "key": "subCode",
      "value": ""
    },
    {
      "key": "rficCode",
      "value": ""
    },
    {
      "key": "commercialName",
      "value": ""
    },
    {
      "key": "ancillaryId",
      "value": ""
    },
    {
      "key": "group",
      "value": ""
    },
    {
      "key": "rfic",
      "value": ""
    },
    {
      "key": "ancId-1",
      "value": ""
    }
  ]
}